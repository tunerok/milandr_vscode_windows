///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR ANSI C/C++ Compiler V6.40.2.53884/W32 for ARM    22/Sep/2015  17:25:55 /
// Copyright 1999-2012 IAR Systems AB.                                        /
//                                                                            /
//    Cpu mode     =  thumb                                                   /
//    Endian       =  little                                                  /
//    Source file  =  C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1 /
//                    986VE91_Eval\fonts\Font_7x10_thin.c                     /
//    Command line =  C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1 /
//                    986VE91_Eval\fonts\Font_7x10_thin.c --preprocess        /
//                    C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1 /
//                    986VE91_Eval\Demo\IAR_Systems\Debug\List\ -lCN          /
//                    C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1 /
//                    986VE91_Eval\Demo\IAR_Systems\Debug\List\ -lB           /
//                    C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1 /
//                    986VE91_Eval\Demo\IAR_Systems\Debug\List\ -o            /
//                    C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1 /
//                    986VE91_Eval\Demo\IAR_Systems\Debug\Obj\ --debug        /
//                    --endian=little --cpu=Cortex-M3 -e --fpu=None           /
//                    --dlib_config "C:\Program Files (x86)\IAR               /
//                    Systems\Embedded Workbench                              /
//                    6.4\arm\INC\c\DLib_Config_Normal.h" -I                  /
//                    C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1 /
//                    986VE91_Eval\Demo\IAR_Systems\..\..\config\ -I          /
//                    C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1 /
//                    986VE91_Eval\Demo\IAR_Systems\..\..\..\..\Libraries\MDR /
//                    32F9Qx_StdPeriph_Driver\inc\ -I                         /
//                    C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1 /
//                    986VE91_Eval\Demo\IAR_Systems\..\..\..\..\Libraries\MDR /
//                    32F9Qx_StdPeriph_Driver\inc\USB_Library\ -I             /
//                    C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1 /
//                    986VE91_Eval\Demo\IAR_Systems\..\..\..\..\Libraries\CMS /
//                    IS\CM3\CoreSupport\ -I C:\WORK\Milandr.MDR1986BExx.1.4. /
//                    0\Example_Projects\MDR1986VE91_Eval\Demo\IAR_Systems\.. /
//                    \..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\i /
//                    nc\ -I C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projec /
//                    ts\MDR1986VE91_Eval\Demo\IAR_Systems\..\..\..\..\Librar /
//                    ies\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\iar\ -I   /
//                    C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1 /
//                    986VE91_Eval\Demo\IAR_Systems\..\..\..\..\Example_Proje /
//                    cts\MDR1986VE91_Eval\inc\ -Ohz                          /
//    List file    =  C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1 /
//                    986VE91_Eval\Demo\IAR_Systems\Debug\List\Font_7x10_thin /
//                    .s                                                      /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Font_7x10_thin

        #define SHT_PROGBITS 0x1

        PUBLIC Font_7x10_thin

// C:\WORK\Milandr.MDR1986BExx.1.4.0\Example_Projects\MDR1986VE91_Eval\fonts\Font_7x10_thin.c
//    1 /**
//    2   ******************************************************************************
//    3   * @file    Font_7x10_thin.c
//    4   * @author  Phyton Application Team
//    5   * @version V2.0.0
//    6   * @date    10.09.2010
//    7   * @brief   Font 7 x 10 pixels (thin). Analog of DOSApp-105 (7 x 12)
//    8   *          Microsoft Windows (two bottom lines cut).
//    9   ******************************************************************************
//   10   * <br><br>
//   11   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
//   12   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
//   13   * TIME. AS A RESULT, PHYTON SHALL NOT BE HELD LIABLE FOR ANY
//   14   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
//   15   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
//   16   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
//   17   *
//   18   * <h2><center>&copy; COPYRIGHT 2010 Phyton</center></h2>
//   19   */
//   20 
//   21 #ifndef __CMCARM_DEMO__
//   22 
//   23 /* Includes ------------------------------------------------------------------*/
//   24 #include "font_defs.h"
//   25 
//   26 /** @addtogroup __MDR32F9Qx_Eval_Demo MDR32F9Qx Demonstration Example
//   27   * @{
//   28   */
//   29 
//   30 /** @addtogroup Fonts Fonts
//   31   * @{
//   32   */
//   33 
//   34 /** @defgroup Font_7x10_thin Fonts 7x10 thin
//   35   * @{
//   36   */
//   37 
//   38 /* The symbol representation has the following format:                      */
//   39 /* Every byte describes all columns of the symbol 8 upper lines.            */
//   40 /* Columns are represented from left to right.                              */
//   41 /* Lowest bit of a byte describes upper line of column,                     */
//   42 /* Highest - lower line.                                                    */
//   43 /* Then it's all repeated for all columns of lower 8 symbol lines.          */
//   44 

        SECTION `.rodata`:CONST:NOROOT(2)
        DATA
//   45 static ucint8_t Font_7x10_thin_Data[] = {
Font_7x10_thin_Data:
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 164, 74, 66, 74, 164
        DC8 120, 0, 0, 1, 1, 1, 0, 0, 120, 220, 182, 190, 182, 220, 120, 0, 0
        DC8 1, 1, 1, 0, 0, 28, 62, 126, 252, 126, 62, 28, 0, 0, 0, 0, 0, 0, 0
        DC8 16, 56, 124, 254, 124, 56, 16, 0, 0, 0, 0, 0, 0, 0, 48, 120, 119
        DC8 191, 119, 120, 48, 0, 1, 1, 1, 1, 1, 0, 56, 124, 126, 191, 126, 124
        DC8 56, 0, 1, 1, 1, 1, 1, 0, 0, 112, 248, 248, 248, 112, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 255, 143, 7, 7, 7, 143, 255, 1, 1, 1, 1, 1, 1, 1, 0, 112
        DC8 136, 136, 136, 112, 0, 0, 0, 0, 0, 0, 0, 0, 255, 143, 119, 119, 119
        DC8 143, 255, 1, 1, 1, 1, 1, 1, 1, 224, 16, 16, 26, 230, 14, 0, 0, 1, 1
        DC8 1, 0, 0, 0, 0, 78, 81, 241, 81, 78, 0, 0, 0, 0, 1, 0, 0, 0, 0, 128
        DC8 128, 254, 4, 56, 0, 0, 1, 1, 0, 0, 0, 0, 128, 128, 254, 10, 197
        DC8 197, 127, 1, 1, 0, 0, 0, 0, 0, 16, 186, 68, 199, 68, 186, 16, 0, 0
        DC8 0, 1, 0, 0, 0, 0, 0, 252, 248, 112, 32, 0, 0, 0, 1, 0, 0, 0, 0, 0
        DC8 32, 112, 248, 252, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 68, 198, 255, 198
        DC8 68, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 191, 0, 191, 0, 0, 0, 0, 1, 0, 1
        DC8 0, 0, 0, 0, 31, 17, 255, 1, 255, 0, 0, 0, 0, 1, 0, 1, 0, 150, 41
        DC8 41, 41, 210, 0, 0, 0, 1, 1, 1, 0, 0, 0, 128, 128, 128, 128, 128, 0
        DC8 0, 1, 1, 1, 1, 1, 0, 0, 36, 102, 255, 102, 36, 0, 0, 1, 1, 1, 1, 1
        DC8 0, 0, 4, 6, 255, 6, 4, 0, 0, 0, 0, 1, 0, 0, 0, 0, 64, 192, 255, 192
        DC8 64, 0, 0, 0, 0, 1, 0, 0, 0, 32, 32, 32, 248, 112, 32, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 32, 112, 248, 32, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192
        DC8 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 32, 112, 248, 32, 248, 112, 32
        DC8 0, 0, 0, 0, 0, 0, 0, 192, 240, 252, 255, 252, 240, 192, 0, 0, 0, 0
        DC8 0, 0, 0, 6, 30, 126, 254, 126, 30, 6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 191, 0, 0, 0, 0, 0, 0, 1
        DC8 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 254, 72
        DC8 254, 72, 0, 0, 0, 1, 0, 1, 0, 0, 0, 76, 146, 147, 146, 100, 0, 0, 0
        DC8 0, 1, 0, 0, 0, 0, 132, 74, 36, 144, 72, 134, 0, 1, 0, 0, 0, 1, 0, 0
        DC8 246, 9, 9, 9, 246, 48, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 2, 6, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 124, 130, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0
        DC8 1, 1, 130, 124, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 84, 124, 16, 124, 84
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 16, 124, 16, 16, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 128, 128, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 32, 32, 32
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0
        DC8 0, 128, 96, 24, 6, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 254, 1, 1, 1, 254
        DC8 0, 0, 0, 1, 1, 1, 0, 0, 0, 4, 2, 255, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0
        DC8 0, 134, 65, 33, 17, 14, 0, 0, 1, 1, 1, 1, 1, 0, 0, 130, 17, 17, 17
        DC8 238, 0, 0, 0, 1, 1, 1, 0, 0, 0, 62, 64, 64, 64, 254, 64, 0, 0, 0, 0
        DC8 0, 1, 0, 0, 143, 9, 9, 9, 241, 0, 0, 0, 1, 1, 1, 0, 0, 0, 254, 17
        DC8 17, 17, 226, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 129, 97, 25, 7, 0, 0, 0
        DC8 1, 0, 0, 0, 0, 0, 238, 17, 17, 17, 238, 0, 0, 0, 1, 1, 1, 0, 0, 0
        DC8 14, 17, 17, 145, 126, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 16, 40, 68, 130, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 72, 72, 72, 72, 72
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 130, 68, 40, 16, 0, 0, 1, 0, 0, 0, 0
        DC8 0, 0, 6, 161, 17, 17, 14, 0, 0, 0, 1, 0, 0, 0, 0, 0, 124, 130, 1
        DC8 57, 69, 62, 0, 0, 0, 1, 1, 1, 1, 0, 252, 34, 33, 34, 252, 0, 0, 1
        DC8 0, 0, 0, 1, 0, 0, 255, 17, 17, 17, 238, 0, 0, 1, 1, 1, 1, 0, 0, 0
        DC8 254, 1, 1, 1, 198, 0, 0, 0, 1, 1, 1, 0, 0, 0, 255, 1, 1, 1, 254, 0
        DC8 0, 1, 1, 1, 1, 0, 0, 0, 255, 17, 17, 17, 1, 0, 0, 1, 1, 1, 1, 1, 0
        DC8 0, 255, 17, 17, 17, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 254, 1, 1, 33
        DC8 226, 0, 0, 0, 1, 1, 1, 0, 0, 0, 255, 16, 16, 16, 255, 0, 0, 1, 0, 0
        DC8 0, 1, 0, 0, 0, 1, 255, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 192, 0, 0
        DC8 0, 255, 0, 0, 0, 1, 1, 1, 0, 0, 0, 255, 16, 16, 40, 199, 0, 0, 1, 0
        DC8 0, 0, 1, 0, 0, 255, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 255, 12
        DC8 112, 112, 12, 255, 0, 1, 0, 0, 0, 0, 1, 0, 255, 8, 16, 32, 64, 255
        DC8 0, 1, 0, 0, 0, 0, 1, 0, 254, 1, 1, 1, 254, 0, 0, 0, 1, 1, 1, 0, 0
        DC8 0, 255, 17, 17, 17, 14, 0, 0, 1, 0, 0, 0, 0, 0, 0, 254, 1, 1, 1
        DC8 254, 0, 0, 0, 1, 1, 1, 1, 3, 0, 255, 17, 17, 49, 206, 0, 0, 1, 0, 0
        DC8 0, 1, 0, 0, 206, 17, 17, 17, 230, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1
        DC8 255, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 255, 0, 0, 0, 255, 0, 0, 0, 1
        DC8 1, 1, 0, 0, 0, 127, 128, 0, 128, 127, 0, 0, 0, 0, 1, 0, 0, 0, 0
        DC8 127, 128, 124, 128, 127, 0, 0, 0, 1, 0, 1, 0, 0, 0, 199, 40, 16, 40
        DC8 199, 0, 0, 1, 0, 0, 0, 1, 0, 0, 15, 16, 224, 16, 15, 0, 0, 0, 0, 1
        DC8 0, 0, 0, 0, 129, 65, 57, 5, 3, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 255, 1
        DC8 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 3, 12, 48, 192, 0, 0, 0, 0, 0, 0
        DC8 1, 0, 0, 0, 0, 1, 1, 255, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 4, 2, 1, 2
        DC8 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 0
        DC8 0, 0, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 40, 40, 40, 240
        DC8 0, 0, 0, 1, 1, 1, 0, 0, 0, 255, 8, 8, 8, 240, 0, 0, 1, 1, 1, 1, 0
        DC8 0, 0, 240, 8, 8, 8, 144, 0, 0, 0, 1, 1, 1, 0, 0, 0, 240, 8, 8, 8
        DC8 255, 0, 0, 0, 1, 1, 1, 1, 0, 0, 240, 72, 72, 72, 112, 0, 0, 0, 1, 1
        DC8 1, 0, 0, 0, 8, 254, 9, 9, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 48, 72, 72
        DC8 72, 240, 0, 0, 0, 1, 1, 1, 0, 0, 0, 255, 8, 8, 8, 240, 0, 0, 1, 0
        DC8 0, 0, 1, 0, 0, 0, 0, 9, 249, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 128, 0
        DC8 10, 250, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 255, 32, 32, 208, 8, 0, 0, 1
        DC8 0, 0, 0, 1, 0, 0, 0, 0, 1, 255, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 248
        DC8 16, 224, 16, 248, 0, 0, 1, 0, 0, 0, 1, 0, 0, 248, 8, 8, 8, 240, 0
        DC8 0, 1, 0, 0, 0, 1, 0, 0, 240, 8, 8, 8, 240, 0, 0, 0, 1, 1, 1, 0, 0
        DC8 0, 248, 72, 72, 72, 48, 0, 0, 1, 0, 0, 0, 0, 0, 0, 48, 72, 72, 72
        DC8 248, 0, 0, 0, 0, 0, 0, 1, 0, 0, 248, 16, 8, 8, 16, 0, 0, 1, 0, 0, 0
        DC8 0, 0, 0, 16, 40, 40, 40, 200, 0, 0, 1, 1, 1, 1, 0, 0, 0, 8, 254, 8
        DC8 8, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 248, 0, 0, 0, 248, 0, 0, 0, 1, 1
        DC8 1, 1, 0, 0, 120, 128, 0, 128, 120, 0, 0, 0, 0, 1, 0, 0, 0, 0, 248
        DC8 128, 240, 128, 248, 0, 0, 0, 1, 0, 1, 0, 0, 0, 8, 144, 96, 144, 8
        DC8 0, 0, 1, 0, 0, 0, 1, 0, 0, 56, 64, 64, 64, 248, 0, 0, 0, 1, 1, 1, 0
        DC8 0, 0, 136, 72, 72, 40, 24, 0, 0, 1, 1, 1, 1, 1, 0, 0, 16, 238, 1, 1
        DC8 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 207, 0, 0, 0, 0, 0, 0, 1, 0, 0
        DC8 0, 0, 1, 1, 238, 16, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 6, 2, 7, 2, 3, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 240, 136, 132, 136, 240, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 68, 0, 17, 68, 0, 17, 0, 0, 0, 1, 0, 0, 1, 0, 170, 0, 85, 170
        DC8 0, 85, 0, 0, 0, 1, 0, 0, 1, 0, 170, 85, 85, 170, 85, 170, 85, 0, 1
        DC8 1, 0, 1, 0, 1, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 32, 32
        DC8 32, 255, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 80, 80, 80, 255, 0, 0, 0, 0
        DC8 0, 0, 1, 0, 0, 0, 32, 32, 255, 0, 255, 0, 0, 0, 0, 1, 0, 1, 0, 0
        DC8 32, 32, 224, 32, 224, 0, 0, 0, 0, 1, 0, 1, 0, 0, 80, 80, 80, 240, 0
        DC8 0, 0, 0, 0, 0, 1, 0, 0, 0, 80, 80, 223, 0, 255, 0, 0, 0, 0, 1, 0, 1
        DC8 0, 0, 0, 0, 255, 0, 255, 0, 0, 0, 0, 1, 0, 1, 0, 0, 80, 80, 208, 16
        DC8 240, 0, 0, 0, 0, 1, 0, 1, 0, 0, 80, 80, 95, 64, 127, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 32, 32, 63, 32, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80
        DC8 80, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 224, 0, 0, 0, 0
        DC8 0, 0, 1, 0, 0, 0, 0, 0, 0, 63, 32, 32, 32, 0, 0, 0, 0, 0, 0, 0, 32
        DC8 32, 32, 63, 32, 32, 32, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 224, 32
        DC8 32, 32, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 255, 32, 32, 32, 0, 0, 0, 1
        DC8 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 0, 0, 0, 0, 0, 0, 0, 32, 32
        DC8 32, 255, 32, 32, 32, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 255, 80, 80, 80
        DC8 0, 0, 0, 1, 0, 0, 0, 0, 0, 255, 0, 255, 32, 32, 0, 0, 1, 0, 1, 0, 0
        DC8 0, 0, 127, 64, 95, 80, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 240, 16, 208
        DC8 80, 80, 0, 0, 1, 0, 1, 0, 0, 80, 80, 95, 64, 95, 80, 80, 0, 0, 0, 0
        DC8 0, 0, 0, 80, 80, 208, 16, 208, 80, 80, 0, 0, 1, 0, 1, 0, 0, 0, 0
        DC8 255, 0, 223, 80, 80, 0, 0, 1, 0, 1, 0, 0, 80, 80, 80, 80, 80, 80
        DC8 80, 0, 0, 0, 0, 0, 0, 0, 80, 80, 223, 0, 223, 80, 80, 0, 0, 1, 0, 1
        DC8 0, 0, 80, 80, 80, 95, 80, 80, 80, 0, 0, 0, 0, 0, 0, 0, 32, 32, 63
        DC8 32, 63, 32, 32, 0, 0, 0, 0, 0, 0, 0, 80, 80, 80, 208, 80, 80, 80, 0
        DC8 0, 0, 1, 0, 0, 0, 32, 32, 224, 32, 224, 32, 32, 0, 0, 1, 0, 1, 0, 0
        DC8 0, 0, 63, 32, 63, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 127, 80, 80
        DC8 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 240, 80, 80, 80, 0, 0, 0, 1, 0, 0
        DC8 0, 0, 0, 224, 32, 224, 32, 32, 0, 0, 1, 0, 1, 0, 0, 32, 32, 255, 0
        DC8 255, 32, 32, 0, 0, 1, 0, 1, 0, 0, 0, 253, 37, 36, 37, 5, 0, 0, 1, 1
        DC8 1, 1, 1, 0, 80, 80, 80, 223, 80, 80, 80, 0, 0, 0, 1, 0, 0, 0, 32
        DC8 32, 32, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 32, 32, 32
        DC8 0, 0, 0, 1, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 1, 1, 1, 1
        DC8 1, 1, 1, 224, 224, 224, 224, 224, 224, 224, 1, 1, 1, 1, 1, 1, 1
        DC8 255, 255, 255, 255, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 255, 255
        DC8 255, 255, 0, 0, 0, 1, 1, 1, 1, 31, 31, 31, 31, 31, 31, 31, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 254, 17, 17, 17, 130, 0, 0, 0, 1, 1, 1, 0, 0, 0, 240
        DC8 40, 40, 8, 144, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 252, 1, 1, 0, 0, 0
        DC8 1, 1, 1, 0, 0, 0, 2, 10, 8, 250, 2, 0, 0, 0, 1, 1, 1, 1, 0, 0, 120
        DC8 132, 48, 48, 132, 120, 0, 0, 0, 0, 0, 0, 0, 0, 56, 66, 68, 66, 248
        DC8 0, 0, 0, 1, 1, 1, 0, 0, 0, 14, 17, 17, 14, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 240, 43, 40, 43, 176, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 8, 28, 8
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 64, 128, 0, 254, 2, 2, 0, 0, 0, 1, 1, 0, 0, 255, 4, 56, 64
        DC8 255, 25, 0, 1, 0, 0, 0, 1, 0, 0, 116, 136, 4, 4, 136, 116, 0, 1, 0
        DC8 1, 1, 0, 1, 0, 0, 0, 56, 56, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252, 34, 33, 34, 252, 0, 0, 1
        DC8 0, 0, 0, 1, 0, 0, 255, 9, 9, 9, 241, 0, 0, 1, 1, 1, 1, 0, 0, 0, 255
        DC8 17, 17, 17, 238, 0, 0, 1, 1, 1, 1, 0, 0, 0, 255, 1, 1, 1, 1, 0, 0
        DC8 1, 0, 0, 0, 0, 0, 0, 254, 1, 1, 1, 255, 0, 1, 1, 1, 1, 1, 1, 1, 0
        DC8 255, 17, 17, 17, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 239, 16, 255, 16
        DC8 239, 0, 0, 1, 0, 1, 0, 1, 0, 0, 130, 17, 17, 17, 238, 0, 0, 0, 1, 1
        DC8 1, 0, 0, 0, 255, 64, 48, 8, 255, 0, 0, 1, 0, 0, 0, 1, 0, 0, 255, 64
        DC8 51, 8, 255, 0, 0, 1, 0, 0, 0, 1, 0, 0, 255, 16, 16, 40, 199, 0, 0
        DC8 1, 0, 0, 0, 1, 0, 0, 254, 1, 1, 1, 255, 0, 0, 1, 0, 0, 0, 1, 0, 0
        DC8 255, 12, 112, 12, 255, 0, 0, 1, 0, 0, 0, 1, 0, 0, 255, 16, 16, 16
        DC8 255, 0, 0, 1, 0, 0, 0, 1, 0, 0, 254, 1, 1, 1, 254, 0, 0, 0, 1, 1, 1
        DC8 0, 0, 0, 255, 1, 1, 1, 255, 0, 0, 1, 0, 0, 0, 1, 0, 0, 255, 17, 17
        DC8 17, 14, 0, 0, 1, 0, 0, 0, 0, 0, 0, 254, 1, 1, 1, 198, 0, 0, 0, 1, 1
        DC8 1, 0, 0, 0, 1, 1, 255, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 143, 16, 16
        DC8 16, 255, 0, 0, 0, 1, 1, 1, 0, 0, 0, 60, 66, 255, 66, 60, 0, 0, 0, 0
        DC8 1, 0, 0, 0, 0, 199, 40, 16, 40, 199, 0, 0, 1, 0, 0, 0, 1, 0, 0, 255
        DC8 0, 0, 0, 255, 0, 0, 1, 1, 1, 1, 1, 1, 0, 15, 16, 16, 16, 255, 0, 0
        DC8 0, 0, 0, 0, 1, 0, 0, 255, 0, 255, 0, 255, 0, 0, 1, 1, 1, 1, 1, 0, 0
        DC8 255, 0, 255, 0, 255, 0, 0, 1, 1, 1, 1, 1, 1, 1, 255, 8, 8, 8, 240
        DC8 0, 0, 1, 1, 1, 1, 0, 0, 0, 255, 16, 224, 0, 255, 0, 0, 1, 1, 0, 0
        DC8 1, 0, 0, 255, 8, 8, 8, 240, 0, 0, 1, 1, 1, 1, 0, 0, 0, 130, 17, 17
        DC8 17, 254, 0, 0, 0, 1, 1, 1, 0, 0, 0, 255, 24, 255, 1, 255, 0, 0, 1
        DC8 0, 1, 1, 1, 0, 0, 238, 17, 17, 17, 255, 0, 0, 1, 0, 0, 0, 1, 0, 0
        DC8 192, 40, 40, 40, 240, 0, 0, 0, 1, 1, 1, 1, 0, 0, 248, 36, 36, 36
        DC8 194, 0, 0, 0, 1, 1, 1, 0, 0, 0, 248, 40, 40, 40, 208, 0, 0, 1, 1, 1
        DC8 1, 0, 0, 0, 248, 8, 8, 8, 8, 0, 0, 1, 0, 0, 0, 0, 0, 0, 240, 8, 8
        DC8 8, 248, 0, 1, 1, 1, 1, 1, 1, 1, 0, 240, 40, 40, 40, 176, 0, 0, 0, 1
        DC8 1, 1, 0, 0, 0, 216, 32, 248, 32, 216, 0, 0, 1, 0, 1, 0, 1, 0, 0
        DC8 144, 8, 40, 40, 208, 0, 0, 0, 1, 1, 1, 0, 0, 0, 248, 128, 64, 32
        DC8 248, 0, 0, 1, 0, 0, 0, 1, 0, 0, 248, 128, 68, 34, 248, 0, 0, 1, 0
        DC8 0, 0, 1, 0, 0, 248, 32, 32, 80, 136, 0, 0, 1, 0, 0, 0, 1, 0, 0, 240
        DC8 8, 8, 8, 248, 0, 0, 1, 0, 0, 0, 1, 0, 0, 248, 16, 96, 16, 248, 0, 0
        DC8 1, 0, 0, 0, 1, 0, 0, 248, 32, 32, 32, 248, 0, 0, 1, 0, 0, 0, 1, 0
        DC8 0, 240, 8, 8, 8, 240, 0, 0, 0, 1, 1, 1, 0, 0, 0, 248, 8, 8, 8, 248
        DC8 0, 0, 1, 0, 0, 0, 1, 0, 0, 248, 72, 72, 72, 48, 0, 0, 1, 0, 0, 0, 0
        DC8 0, 0, 240, 8, 8, 8, 144, 0, 0, 0, 1, 1, 1, 0, 0, 0, 8, 8, 248, 8, 8
        DC8 0, 0, 0, 0, 1, 0, 0, 0, 0, 56, 64, 64, 64, 248, 0, 0, 0, 1, 1, 1, 0
        DC8 0, 0, 48, 72, 248, 72, 48, 0, 0, 0, 0, 1, 0, 0, 0, 0, 8, 144, 96
        DC8 144, 8, 0, 0, 1, 0, 0, 0, 1, 0, 0, 248, 0, 0, 0, 248, 0, 0, 1, 1, 1
        DC8 1, 1, 1, 0, 56, 64, 64, 64, 248, 0, 0, 0, 0, 0, 0, 1, 0, 0, 248, 0
        DC8 248, 0, 248, 0, 0, 1, 1, 1, 1, 1, 0, 0, 248, 0, 248, 0, 248, 0, 0
        DC8 1, 1, 1, 1, 1, 1, 8, 248, 32, 32, 32, 192, 0, 0, 1, 1, 1, 1, 0, 0
        DC8 0, 248, 32, 224, 0, 248, 0, 0, 1, 1, 1, 0, 1, 0, 0, 248, 32, 32, 32
        DC8 192, 0, 0, 1, 1, 1, 1, 0, 0, 0, 144, 8, 40, 40, 240, 0, 0, 0, 1, 1
        DC8 1, 0, 0, 0, 248, 32, 248, 8, 248, 0, 0, 1, 0, 1, 1, 1, 0, 0, 176
        DC8 72, 72, 72, 248, 0, 0, 1, 0, 0, 0, 1, 0
//   46   /* 0x00 - Space.*/
//   47   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//   48 
//   49   /* 0x01 - smiling face.*/
//   50   0x78, 0xa4, 0x4a, 0x42, 0x4a, 0xa4, 0x78,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//   51 
//   52   /* 0x02 - painted smiling face.*/
//   53   0x78, 0xdc, 0xb6, 0xbe, 0xb6, 0xdc, 0x78,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//   54 
//   55   /* 0x03 - hearts.*/
//   56   0x1c, 0x3e, 0x7e, 0xfc, 0x7e, 0x3e, 0x1c,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//   57 
//   58   /* 0x04 - diamonds.*/
//   59   0x10, 0x38, 0x7c, 0xfe, 0x7c, 0x38, 0x10,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//   60 
//   61   /* 0x05 - clubs.*/
//   62   0x30, 0x78, 0x77, 0xbf, 0x77, 0x78, 0x30,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//   63 
//   64   /* 0x06 - spades.*/
//   65   0x38, 0x7c, 0x7e, 0xbf, 0x7e, 0x7c, 0x38,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//   66 
//   67   /* 0x07 - filled circle at center.*/
//   68   0x00, 0x70, 0xf8, 0xf8, 0xf8, 0x70, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//   69 
//   70   /* 0x08 - inverted filled circle at center.*/
//   71   0xff, 0x8f, 0x07, 0x07, 0x07, 0x8f, 0xff,   0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
//   72 
//   73   /* 0x09 - unfilled circle at center.*/
//   74   0x00, 0x70, 0x88, 0x88, 0x88, 0x70, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//   75 
//   76   /* 0x0a - inverted unfilled circle at center (ring).*/
//   77   0xff, 0x8f, 0x77, 0x77, 0x77, 0x8f, 0xff,   0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
//   78 
//   79   /* 0x0b - male symbol (circle with pointer up).*/
//   80   0xe0, 0x10, 0x10, 0x1a, 0xe6, 0x0e, 0x00,   0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
//   81 
//   82   /* 0x0c - female symbol (circle with cross down).*/
//   83   0x00, 0x4e, 0x51, 0xf1, 0x51, 0x4e, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//   84 
//   85   /* 0x0d - note I.*/
//   86   0x00, 0x80, 0x80, 0xfe, 0x04, 0x38, 0x00,   0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
//   87 
//   88   /* 0x0e - note II.*/
//   89   0x80, 0x80, 0xfe, 0x0a, 0xc5, 0xc5, 0x7f,   0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
//   90 
//   91   /* 0x0f - sun (circle with outgoing rays).*/
//   92   0x10, 0xba, 0x44, 0xc7, 0x44, 0xba, 0x10,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//   93 
//   94   /* 0x10 - thick arrow right.*/
//   95   0x00, 0x00, 0xfc, 0xf8, 0x70, 0x20, 0x00,   0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
//   96 
//   97   /* 0x11 - thick arrow lefts.*/
//   98   0x00, 0x20, 0x70, 0xf8, 0xfc, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
//   99 
//  100   /* 0x12 - thin arrow up-down.*/
//  101   0x00, 0x44, 0xc6, 0xff, 0xc6, 0x44, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  102 
//  103   /* 0x13 - two exclamations.*/
//  104   0x00, 0x00, 0xbf, 0x00, 0xbf, 0x00, 0x00,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  105 
//  106   /* 0x14 - "PI" symbol.*/
//  107   0x00, 0x00, 0x1f, 0x11, 0xff, 0x01, 0xff,   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01,
//  108 
//  109   /* 0x15 - paragraph symbol.*/
//  110   0x00, 0x96, 0x29, 0x29, 0x29, 0xd2, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  111 
//  112   /* 0x16 - thick underline.*/
//  113   0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//  114 
//  115   /* 0x17 - underlined thin arrow up-down.*/
//  116   0x00, 0x24, 0x66, 0xff, 0x66, 0x24, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//  117 
//  118   /* 0x18 - thin arrow up.*/
//  119   0x00, 0x04, 0x06, 0xff, 0x06, 0x04, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  120 
//  121   /* 0x19 - thin arrow down.*/
//  122   0x00, 0x40, 0xc0, 0xff, 0xc0, 0x40, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  123 
//  124   /* 0x1a - thin arrow right.*/
//  125   0x20, 0x20, 0x20, 0xf8, 0x70, 0x20, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  126 
//  127   /* 0x1b - thin arrow left.*/
//  128   0x20, 0x70, 0xf8, 0x20, 0x20, 0x20, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  129 
//  130   /* 0x1c - indentation symbol.*/
//  131   0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//  132 
//  133   /* 0x1d - thin arrow left-right.*/
//  134   0x20, 0x70, 0xf8, 0x20, 0xf8, 0x70, 0x20,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  135 
//  136   /* 0x1e - thick arrow up.*/
//  137   0xc0, 0xf0, 0xfc, 0xff, 0xfc, 0xf0, 0xc0,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  138 
//  139   /* 0x1f - thick arrow down.*/
//  140   0x06, 0x1e, 0x7e, 0xfe, 0x7e, 0x1e, 0x06,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  141 
//  142   /* 0x20 - space (empty place).*/
//  143   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  144 
//  145   /* 0x21 - excalmation.*/
//  146   0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  147 
//  148   /* 0x22 - double quote.*/
//  149   0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  150 
//  151   /* 0x23 - number sign.*/
//  152   0x00, 0x48, 0xfe, 0x48, 0xfe, 0x48, 0x00,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  153 
//  154   /* 0x24 - dollar.*/
//  155   0x00, 0x4c, 0x92, 0x93, 0x92, 0x64, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  156 
//  157   /* 0x25 - percent.*/
//  158   0x00, 0x84, 0x4a, 0x24, 0x90, 0x48, 0x86,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  159 
//  160   /* 0x26 - ampersand.*/
//  161   0x00, 0xf6, 0x09, 0x09, 0x09, 0xf6, 0x30,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x01,
//  162 
//  163   /* 0x27 - apostrophe.*/
//  164   0x00, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  165 
//  166   /* 0x28 - open bracket.*/
//  167   0x00, 0x7c, 0x82, 0x01, 0x01, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00,
//  168 
//  169   /* 0x29 - close bracket.*/
//  170   0x00, 0x01, 0x01, 0x82, 0x7c, 0x00, 0x00,   0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
//  171 
//  172   /* 0x2a - asterisk (multiplication).*/
//  173   0x00, 0x54, 0x7c, 0x10, 0x7c, 0x54, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  174 
//  175   /* 0x2b - plus.*/
//  176   0x00, 0x10, 0x10, 0x7c, 0x10, 0x10, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  177 
//  178   /* 0x2c - comma.*/
//  179   0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
//  180 
//  181   /* 0x2d - dash.*/
//  182   0x00, 0x00, 0x20, 0x20, 0x20, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  183 
//  184   /* 0x2e - dot.*/
//  185   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  186 
//  187   /* 0x2f - left-right slash ('/').*/
//  188   0x00, 0x80, 0x60, 0x18, 0x06, 0x01, 0x00,   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  189 
//  190   /* 0x30 - '0'.*/
//  191   0x00, 0xfe, 0x01, 0x01, 0x01, 0xfe, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  192 
//  193   /* 0x31 - '1'.*/
//  194   0x00, 0x04, 0x02, 0xff, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  195 
//  196   /* 0x32 - '2'.*/
//  197   0x00, 0x86, 0x41, 0x21, 0x11, 0x0e, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//  198 
//  199   /* 0x33 - '3'.*/
//  200   0x00, 0x82, 0x11, 0x11, 0x11, 0xee, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  201 
//  202   /* 0x34 - '4'.*/
//  203   0x00, 0x3e, 0x40, 0x40, 0x40, 0xfe, 0x40,   0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
//  204 
//  205   /* 0x35 - '5'.*/
//  206   0x00, 0x8f, 0x09, 0x09, 0x09, 0xf1, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  207 
//  208   /* 0x36 - '6'.*/
//  209   0x00, 0xfe, 0x11, 0x11, 0x11, 0xe2, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  210 
//  211   /* 0x37 - '7'.*/
//  212   0x00, 0x01, 0x81, 0x61, 0x19, 0x07, 0x00,   0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
//  213 
//  214   /* 0x38 - '8'.*/
//  215   0x00, 0xee, 0x11, 0x11, 0x11, 0xee, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  216 
//  217   /* 0x39 - '9'.*/
//  218   0x00, 0x0e, 0x11, 0x11, 0x91, 0x7e, 0x00,   0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
//  219 
//  220   /* 0x3a - colon.*/
//  221   0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  222 
//  223   /* 0x3b - semicolon.*/
//  224   0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  225 
//  226   /* 0x3c - less.*/
//  227   0x00, 0x10, 0x28, 0x44, 0x82, 0x01, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
//  228 
//  229   /* 0x3d - equal.*/
//  230   0x00, 0x48, 0x48, 0x48, 0x48, 0x48, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  231 
//  232   /* 0x3e - greater.*/
//  233   0x00, 0x01, 0x82, 0x44, 0x28, 0x10, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
//  234 
//  235   /* 0x3f - question-mark.*/
//  236   0x00, 0x06, 0xa1, 0x11, 0x11, 0x0e, 0x00,   0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
//  237 
//  238   /* 0x40 - "dog" ('@').*/
//  239   0x00, 0x7c, 0x82, 0x01, 0x39, 0x45, 0x3e,   0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
//  240 
//  241   /* 0x41 - 'A'.*/
//  242   0x00, 0xfc, 0x22, 0x21, 0x22, 0xfc, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  243 
//  244   /* 0x42 - 'B'.*/
//  245   0x00, 0xff, 0x11, 0x11, 0x11, 0xee, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
//  246 
//  247   /* 0x43 - 'C'.*/
//  248   0x00, 0xfe, 0x01, 0x01, 0x01, 0xc6, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  249 
//  250   /* 0x44 - 'D'.*/
//  251   0x00, 0xff, 0x01, 0x01, 0x01, 0xfe, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
//  252 
//  253   /* 0x45 - 'E'.*/
//  254   0x00, 0xff, 0x11, 0x11, 0x11, 0x01, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//  255 
//  256   /* 0x46 - 'F'.*/
//  257   0x00, 0xff, 0x11, 0x11, 0x11, 0x01, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
//  258 
//  259   /* 0x47 - 'G'.*/
//  260   0x00, 0xfe, 0x01, 0x01, 0x21, 0xe2, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  261 
//  262   /* 0x48 - 'H'.*/
//  263   0x00, 0xff, 0x10, 0x10, 0x10, 0xff, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  264 
//  265   /* 0x49 - 'I'.*/
//  266   0x00, 0x00, 0x01, 0xff, 0x01, 0x00, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  267 
//  268   /* 0x4a - 'J'.*/
//  269   0x00, 0xc0, 0x00, 0x00, 0x00, 0xff, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  270 
//  271   /* 0x4b - 'K'.*/
//  272   0x00, 0xff, 0x10, 0x10, 0x28, 0xc7, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  273 
//  274   /* 0x4c - 'L'.*/
//  275   0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//  276 
//  277   /* 0x4d - 'M'.*/
//  278   0x00, 0xff, 0x0c, 0x70, 0x70, 0x0c, 0xff,   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01,
//  279 
//  280   /* 0x4e - 'N'.*/
//  281   0x00, 0xff, 0x08, 0x10, 0x20, 0x40, 0xff,   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01,
//  282 
//  283   /* 0x4f - 'O'.*/
//  284   0x00, 0xfe, 0x01, 0x01, 0x01, 0xfe, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  285 
//  286   /* 0x50 - 'P'.*/
//  287   0x00, 0xff, 0x11, 0x11, 0x11, 0x0e, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
//  288 
//  289   /* 0x51 - 'Q'.*/
//  290   0x00, 0xfe, 0x01, 0x01, 0x01, 0xfe, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x03,
//  291 
//  292   /* 0x52 - 'R'.*/
//  293   0x00, 0xff, 0x11, 0x11, 0x31, 0xce, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  294 
//  295   /* 0x53 - 'S'.*/
//  296   0x00, 0xce, 0x11, 0x11, 0x11, 0xe6, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  297 
//  298   /* 0x54 - 'T'.*/
//  299   0x00, 0x01, 0x01, 0xff, 0x01, 0x01, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  300 
//  301   /* 0x55 - 'U'.*/
//  302   0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  303 
//  304   /* 0x56 - 'V'.*/
//  305   0x00, 0x7f, 0x80, 0x00, 0x80, 0x7f, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  306 
//  307   /* 0x57 - 'W'.*/
//  308   0x00, 0x7f, 0x80, 0x7c, 0x80, 0x7f, 0x00,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  309 
//  310   /* 0x58 - 'X'.*/
//  311   0x00, 0xc7, 0x28, 0x10, 0x28, 0xc7, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  312 
//  313   /* 0x59 - 'Y'.*/
//  314   0x00, 0x0f, 0x10, 0xe0, 0x10, 0x0f, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  315 
//  316   /* 0x5a - 'Z'.*/
//  317   0x00, 0x81, 0x41, 0x39, 0x05, 0x03, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//  318 
//  319   /* 0x5b - '['.*/
//  320   0x00, 0x00, 0xff, 0x01, 0x01, 0x00, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  321 
//  322   /* 0x5c - '\'.*/
//  323   0x00, 0x03, 0x0c, 0x30, 0xc0, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
//  324 
//  325   /* 0x5d - ']'.*/
//  326   0x00, 0x00, 0x01, 0x01, 0xff, 0x00, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  327 
//  328   /* 0x5e - '^'.*/
//  329   0x00, 0x04, 0x02, 0x01, 0x02, 0x04, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  330 
//  331   /* 0x5f - '_'.*/
//  332   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00,
//  333 
//  334   /* 0x60 - back quote.*/
//  335   0x00, 0x00, 0x07, 0x03, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  336 
//  337   /* 0x61 - 'a'.*/
//  338   0x00, 0xc0, 0x28, 0x28, 0x28, 0xf0, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  339 
//  340   /* 0x62 - 'b'.*/
//  341   0x00, 0xff, 0x08, 0x08, 0x08, 0xf0, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
//  342 
//  343   /* 0x63 - 'c'.*/
//  344   0x00, 0xf0, 0x08, 0x08, 0x08, 0x90, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  345 
//  346   /* 0x64 - 'd'.*/
//  347   0x00, 0xf0, 0x08, 0x08, 0x08, 0xff, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00,
//  348 
//  349   /* 0x65 - 'e'.*/
//  350   0x00, 0xf0, 0x48, 0x48, 0x48, 0x70, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  351 
//  352   /* 0x66 - 'f'.*/
//  353   0x00, 0x08, 0xfe, 0x09, 0x09, 0x01, 0x00,   0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
//  354 
//  355   /* 0x67 - 'g'.*/
//  356   0x00, 0x30, 0x48, 0x48, 0x48, 0xf0, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  357 
//  358   /* 0x68 - 'h'.*/
//  359   0x00, 0xff, 0x08, 0x08, 0x08, 0xf0, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  360 
//  361   /* 0x69 - 'i'.*/
//  362   0x00, 0x00, 0x00, 0x09, 0xf9, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
//  363 
//  364   /* 0x6a - 'j'.*/
//  365   0x00, 0x80, 0x00, 0x0a, 0xfa, 0x00, 0x00,   0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,
//  366 
//  367   /* 0x6b - 'k'.*/
//  368   0x00, 0xff, 0x20, 0x20, 0xd0, 0x08, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  369 
//  370   /* 0x6c - 'l'.*/
//  371   0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
//  372 
//  373   /* 0x6d - 'm'.*/
//  374   0x00, 0xf8, 0x10, 0xe0, 0x10, 0xf8, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  375 
//  376   /* 0x6e - 'n'.*/
//  377   0x00, 0xf8, 0x08, 0x08, 0x08, 0xf0, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  378 
//  379   /* 0x6f - 'o'.*/
//  380   0x00, 0xf0, 0x08, 0x08, 0x08, 0xf0, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  381 
//  382   /* 0x70 - 'p'.*/
//  383   0x00, 0xf8, 0x48, 0x48, 0x48, 0x30, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
//  384 
//  385   /* 0x71 - 'q'.*/
//  386   0x00, 0x30, 0x48, 0x48, 0x48, 0xf8, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
//  387 
//  388   /* 0x72 - 'r'.*/
//  389   0x00, 0xf8, 0x10, 0x08, 0x08, 0x10, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
//  390 
//  391   /* 0x73 - 's'.*/
//  392   0x00, 0x10, 0x28, 0x28, 0x28, 0xc8, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
//  393 
//  394   /* 0x74 - 't'.*/
//  395   0x00, 0x08, 0xfe, 0x08, 0x08, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
//  396 
//  397   /* 0x75 - 'u'.*/
//  398   0x00, 0xf8, 0x00, 0x00, 0x00, 0xf8, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00,
//  399 
//  400   /* 0x76 - 'v'.*/
//  401   0x00, 0x78, 0x80, 0x00, 0x80, 0x78, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  402 
//  403   /* 0x77 - 'w'.*/
//  404   0x00, 0xf8, 0x80, 0xf0, 0x80, 0xf8, 0x00,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  405 
//  406   /* 0x78 - 'x'.*/
//  407   0x00, 0x08, 0x90, 0x60, 0x90, 0x08, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  408 
//  409   /* 0x79 - 'y'.*/
//  410   0x00, 0x38, 0x40, 0x40, 0x40, 0xf8, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  411 
//  412   /* 0x7a - 'z'.*/
//  413   0x00, 0x88, 0x48, 0x48, 0x28, 0x18, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//  414 
//  415   /* 0x7b - '{'.*/
//  416   0x00, 0x10, 0xee, 0x01, 0x01, 0x01, 0x00,   0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
//  417 
//  418   /* 0x7c - '|'.*/
//  419   0x00, 0x00, 0x00, 0xcf, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  420 
//  421   /* 0x7d - '}'.*/
//  422   0x00, 0x01, 0x01, 0xee, 0x10, 0x00, 0x00,   0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
//  423 
//  424   /* 0x7e - '~'.*/
//  425   0x00, 0x06, 0x02, 0x07, 0x02, 0x03, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  426 
//  427   /* 0x7f - "house".*/
//  428   0x00, 0xf0, 0x88, 0x84, 0x88, 0xf0, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  429 
//  430   /* 0x80 - net of points dispersed.*/
//  431   0x44, 0x00, 0x11, 0x44, 0x00, 0x11, 0x00,   0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00,
//  432 
//  433   /* 0x81 - net of points condensed.*/
//  434   0xaa, 0x00, 0x55, 0xaa, 0x00, 0x55, 0x00,   0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00,
//  435 
//  436   /* 0x82 - net of lines.*/
//  437   0xaa, 0x55, 0x55, 0xaa, 0x55, 0xaa, 0x55,   0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x01,
//  438 
//  439   /* 0x83 - pseudo graphics - vertical line.*/
//  440   0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  441 
//  442   /* 0x84 - pseudo graphics - vertical line with branch left from center.*/
//  443   0x20, 0x20, 0x20, 0xff, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  444 
//  445   /* 0x85 - pseudo graphics - vertical line with double branch left from center.*/
//  446   0x50, 0x50, 0x50, 0xff, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  447 
//  448   /* 0x86 - pseudo graphics - double vertical line with branch left from center.*/
//  449   0x20, 0x20, 0xff, 0x00, 0xff, 0x00, 0x00,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  450 
//  451   /* 0x87 - pseudo graphics - upper right corner with double vertical line.*/
//  452   0x20, 0x20, 0xe0, 0x20, 0xe0, 0x00, 0x00,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  453 
//  454   /* 0x88 - pseudo graphics - upper right corner with double horizontal line.*/
//  455   0x50, 0x50, 0x50, 0xf0, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  456 
//  457   /* 0x89 - pseudo graphics - double vertical line with double branch left from center.*/
//  458   0x50, 0x50, 0xdf, 0x00, 0xff, 0x00, 0x00,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  459 
//  460   /* 0x8a - pseudo graphics - double vertical line.*/
//  461   0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  462 
//  463   /* 0x8b - pseudo graphics - double upper right corner.*/
//  464   0x50, 0x50, 0xd0, 0x10, 0xf0, 0x00, 0x00,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  465 
//  466   /* 0x8c - pseudo graphics - double lower right corner.*/
//  467   0x50, 0x50, 0x5f, 0x40, 0x7f, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  468 
//  469   /* 0x8d - pseudo graphics - lower right corner with double vertical line.*/
//  470   0x20, 0x20, 0x3f, 0x20, 0x3f, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  471 
//  472   /* 0x8e - pseudo graphics - lower right corner with double horizontal line.*/
//  473   0x50, 0x50, 0x50, 0x7f, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  474 
//  475   /* 0x8f - pseudo graphics - upper right corner.*/
//  476   0x20, 0x20, 0x20, 0xe0, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  477 
//  478   /* 0x90 - pseudo graphics - lower left corner.*/
//  479   0x00, 0x00, 0x00, 0x3f, 0x20, 0x20, 0x20,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  480 
//  481   /* 0x91 - pseudo graphics - horizontal line with branch up from center.*/
//  482   0x20, 0x20, 0x20, 0x3f, 0x20, 0x20, 0x20,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  483 
//  484   /* 0x92 - pseudo graphics - horizontal line with branch down from center.*/
//  485   0x20, 0x20, 0x20, 0xe0, 0x20, 0x20, 0x20,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  486 
//  487   /* 0x93 - pseudo graphics - vertical line with branch right from center.*/
//  488   0x00, 0x00, 0x00, 0xff, 0x20, 0x20, 0x20,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  489 
//  490   /* 0x94 - pseudo graphics - horizontal line at the center.*/
//  491   0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  492 
//  493   /* 0x95 - pseudo graphics - cross.*/
//  494   0x20, 0x20, 0x20, 0xff, 0x20, 0x20, 0x20,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  495 
//  496   /* 0x96 - pseudo graphics - vertical line with double branch right from center.*/
//  497   0x00, 0x00, 0x00, 0xff, 0x50, 0x50, 0x50,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  498 
//  499   /* 0x97 - pseudo graphics - double vertical line with branch right from center.*/
//  500   0x00, 0x00, 0xff, 0x00, 0xff, 0x20, 0x20,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  501 
//  502   /* 0x98 - pseudo graphics - double left lower corner.*/
//  503   0x00, 0x00, 0x7f, 0x40, 0x5f, 0x50, 0x50,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  504 
//  505   /* 0x99 - pseudo graphics - double left upper corner.*/
//  506   0x00, 0x00, 0xf0, 0x10, 0xd0, 0x50, 0x50,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  507 
//  508   /* 0x9a - pseudo graphics - double horizontal line with double branch up from center.*/
//  509   0x50, 0x50, 0x5f, 0x40, 0x5f, 0x50, 0x50,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  510 
//  511   /* 0x9b - pseudo graphics - double horizontal line with double branch down from center.*/
//  512   0x50, 0x50, 0xd0, 0x10, 0xd0, 0x50, 0x50,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  513 
//  514   /* 0x9c - pseudo graphics - double vertical line with double branch right from center.*/
//  515   0x00, 0x00, 0xff, 0x00, 0xdf, 0x50, 0x50,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  516 
//  517   /* 0x9d - pseudo graphics - double horizontal line at the center.*/
//  518   0x50, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  519 
//  520   /* 0x9e - pseudo graphics - double cross.*/
//  521   0x50, 0x50, 0xdf, 0x00, 0xdf, 0x50, 0x50,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  522 
//  523   /* 0x9f - pseudo graphics - double horizontal line with branch up from center.*/
//  524   0x50, 0x50, 0x50, 0x5f, 0x50, 0x50, 0x50,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  525 
//  526   /* 0xa0 - pseudo graphics - horizontal line with double branch up from center.*/
//  527   0x20, 0x20, 0x3f, 0x20, 0x3f, 0x20, 0x20,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  528 
//  529   /* 0xa1 - pseudo graphics - double horizontal line with branch down from center.*/
//  530   0x50, 0x50, 0x50, 0xd0, 0x50, 0x50, 0x50,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  531 
//  532   /* 0xa2 - pseudo graphics - horizontal line with double branch down from center.*/
//  533   0x20, 0x20, 0xe0, 0x20, 0xe0, 0x20, 0x20,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  534 
//  535   /* 0xa3 - pseudo graphics - lower left corner, double vertical line.*/
//  536   0x00, 0x00, 0x3f, 0x20, 0x3f, 0x20, 0x20,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  537 
//  538   /* 0xa4 - pseudo graphics - lower left corner, double horizontal line.*/
//  539   0x00, 0x00, 0x00, 0x7f, 0x50, 0x50, 0x50,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  540 
//  541   /* 0xa5 - pseudo graphics - upper left corner, double horizontal line.*/
//  542   0x00, 0x00, 0x00, 0xf0, 0x50, 0x50, 0x50,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  543 
//  544   /* 0xa6 - pseudo graphics - upper left corner, double vertical line.*/
//  545   0x00, 0x00, 0xe0, 0x20, 0xe0, 0x20, 0x20,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  546 
//  547   /* 0xa7 - pseudo graphics - double vertical line at the center with branches left and right.*/
//  548   0x20, 0x20, 0xff, 0x00, 0xff, 0x20, 0x20,   0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
//  549 
//  550   /* 0xa8 - Russian capital 'YO'.*/
//  551   0x00, 0xfd, 0x25, 0x24, 0x25, 0x05, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//  552 
//  553   /* 0xa9 - pseudo graphics - double horizontal line at the center with branches up and down.*/
//  554   0x50, 0x50, 0x50, 0xdf, 0x50, 0x50, 0x50,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  555 
//  556   /* 0xaa - pseudo graphics - lower right corner.*/
//  557   0x20, 0x20, 0x20, 0x3f, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  558 
//  559   /* 0xab - pseudo graphics - upper left corner.*/
//  560   0x00, 0x00, 0x00, 0xe0, 0x20, 0x20, 0x20,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  561 
//  562   /* 0xac - pseudo graphics - filled place.*/
//  563   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,   0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
//  564 
//  565   /* 0xad - pseudo graphics - filled lower half.*/
//  566   0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0,   0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
//  567 
//  568   /* 0xae - pseudo graphics - filled left half.*/
//  569   0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,   0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
//  570 
//  571   /* 0xaf - pseudo graphics - filled right half.*/
//  572   0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,   0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
//  573 
//  574   /* 0xb0 - pseudo graphics - filled upper half.*/
//  575   0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  576 
//  577   /* 0xb1 - hearts (not filled).*/
//  578   0x00, 0xfe, 0x11, 0x11, 0x11, 0x82, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  579 
//  580   /* 0xb2 - EX symbol.*/
//  581   0x00, 0xf0, 0x28, 0x28, 0x08, 0x90, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  582 
//  583   /* 0xb3 - unfilled EX symbol.*/
//  584   0x00, 0x01, 0x01, 0xfc, 0x01, 0x01, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  585 
//  586   /* 0xb4 - Special symbol: Russian "l".*/
//  587   0x00, 0x02, 0x0a, 0x08, 0xfa, 0x02, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00,
//  588 
//  589   /* 0xb5 - Special symbol: Russian "l/ch".*/
//  590 /*  0x00, 0x9c, 0x21, 0x22, 0x21, 0xfc, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,*/
//  591 
//  592 /* 0xb5 - Special symbol: Russian "l/ch".*/
//  593 0x00, 0x78, 0x84, 0x30, 0x30, 0x84, 0x78,    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  594 
//  595   /* 0xb6 - 'y' with upper tilde ('~').*/
//  596   0x00, 0x38, 0x42, 0x44, 0x42, 0xf8, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  597 
//  598   /* 0xb7 - small circle up.*/
//  599   0x00, 0x0e, 0x11, 0x11, 0x0e, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  600 
//  601   /* 0xb8 - Russian low 'yo'.*/
//  602   0x00, 0xf0, 0x2b, 0x28, 0x2b, 0xb0, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  603 
//  604   /* 0xb9 - large filled circle at the center.*/
//  605   0x00, 0x00, 0x08, 0x1c, 0x08, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  606 
//  607   /* 0xba - small filled circle at the center.*/
//  608   0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  609 
//  610   /* 0xbb - square root symbol.*/
//  611   0x00, 0x40, 0x80, 0x00, 0xfe, 0x02, 0x02,   0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00,
//  612 
//  613   /* 0xbc - number sign.*/
//  614   0xff, 0x04, 0x38, 0x40, 0xff, 0x19, 0x00,   0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
//  615 
//  616   /* 0xbd - "sun".*/
//  617   0x74, 0x88, 0x04, 0x04, 0x88, 0x74, 0x00,   0x01, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00,
//  618 
//  619   /* 0xbe - filled square at the center.*/
//  620   0x00, 0x00, 0x38, 0x38, 0x38, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  621 
//  622   /* 0xbf - empty place.*/
//  623   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//  624 
//  625   /* 0xc0-0xdf - Russian capital letters.*/
//  626   /* 0xc0 */
//  627   0x00, 0xfc, 0x22, 0x21, 0x22, 0xfc, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  628 
//  629   /* 0xc1 */
//  630   0x00, 0xff, 0x09, 0x09, 0x09, 0xf1, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
//  631 
//  632   /* 0xc2 */
//  633   0x00, 0xff, 0x11, 0x11, 0x11, 0xee, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
//  634 
//  635   /* 0xc3 */
//  636   0x00, 0xff, 0x01, 0x01, 0x01, 0x01, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
//  637 
//  638   /* 0xc4 */
//  639   0x00, 0xfe, 0x01, 0x01, 0x01, 0xff, 0x00,   0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
//  640 
//  641   /* 0xc5 */
//  642   0x00, 0xff, 0x11, 0x11, 0x11, 0x01, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//  643 
//  644   /* 0xc6 */
//  645   0x00, 0xef, 0x10, 0xff, 0x10, 0xef, 0x00,   0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00,
//  646 
//  647   /* 0xc7 */
//  648   0x00, 0x82, 0x11, 0x11, 0x11, 0xee, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  649 
//  650   /* 0xc8 */
//  651   0x00, 0xff, 0x40, 0x30, 0x08, 0xff, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  652 
//  653   /* 0xc9 */
//  654   0x00, 0xff, 0x40, 0x33, 0x08, 0xff, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  655 
//  656   /* 0xca */
//  657   0x00, 0xff, 0x10, 0x10, 0x28, 0xc7, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  658 
//  659   /* 0xcb */
//  660   0x00, 0xfe, 0x01, 0x01, 0x01, 0xff, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  661 
//  662   /* 0xcc */
//  663   0x00, 0xff, 0x0c, 0x70, 0x0c, 0xff, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  664 
//  665   /* 0xcd */
//  666   0x00, 0xff, 0x10, 0x10, 0x10, 0xff, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  667 
//  668   /* 0xce */
//  669   0x00, 0xfe, 0x01, 0x01, 0x01, 0xfe, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  670 
//  671   /* 0xcf */
//  672   0x00, 0xff, 0x01, 0x01, 0x01, 0xff, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  673 
//  674   /* 0xd0 */
//  675   0x00, 0xff, 0x11, 0x11, 0x11, 0x0e, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
//  676 
//  677   /* 0xd1 */
//  678   0x00, 0xfe, 0x01, 0x01, 0x01, 0xc6, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  679 
//  680   /* 0xd2 */
//  681   0x00, 0x01, 0x01, 0xff, 0x01, 0x01, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  682 
//  683   /* 0xd3 */
//  684   0x00, 0x8f, 0x10, 0x10, 0x10, 0xff, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  685 
//  686   /* 0xd4 */
//  687   0x00, 0x3c, 0x42, 0xff, 0x42, 0x3c, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  688 
//  689   /* 0xd5 */
//  690   0x00, 0xc7, 0x28, 0x10, 0x28, 0xc7, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  691 
//  692   /* 0xd6 */
//  693   0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
//  694 
//  695   /* 0xd7 */
//  696   0x00, 0x0f, 0x10, 0x10, 0x10, 0xff, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
//  697 
//  698   /* 0xd8 */
//  699   0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//  700 
//  701   /* 0xd9 */
//  702   0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
//  703 
//  704   /* 0xda */
//  705   0x01, 0xff, 0x08, 0x08, 0x08, 0xf0, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
//  706 
//  707   /* 0xdb */
//  708   0x00, 0xff, 0x10, 0xe0, 0x00, 0xff, 0x00,   0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00,
//  709 
//  710   /* 0xdc */
//  711   0x00, 0xff, 0x08, 0x08, 0x08, 0xf0, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
//  712 
//  713   /* 0xdd */
//  714   0x00, 0x82, 0x11, 0x11, 0x11, 0xfe, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  715 
//  716   /* 0xde */
//  717   0x00, 0xff, 0x18, 0xff, 0x01, 0xff, 0x00,   0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x00,
//  718 
//  719   /* 0xdf */
//  720   0x00, 0xee, 0x11, 0x11, 0x11, 0xff, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  721 
//  722   /* 0xe0-0xff - Russian low letters.*/
//  723   /* 0xe0 */
//  724   0x00, 0xc0, 0x28, 0x28, 0x28, 0xf0, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00,
//  725 
//  726   /* 0xe1 */
//  727   0x00, 0xf8, 0x24, 0x24, 0x24, 0xc2, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  728 
//  729   /* 0xe2 */
//  730   0x00, 0xf8, 0x28, 0x28, 0x28, 0xd0, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
//  731 
//  732   /* 0xe3 */
//  733   0x00, 0xf8, 0x08, 0x08, 0x08, 0x08, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
//  734 
//  735   /* 0xe4 */
//  736   0x00, 0xf0, 0x08, 0x08, 0x08, 0xf8, 0x00,   0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
//  737 
//  738   /* 0xe5 */
//  739   0x00, 0xf0, 0x28, 0x28, 0x28, 0xb0, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  740 
//  741   /* 0xe6 */
//  742   0x00, 0xd8, 0x20, 0xf8, 0x20, 0xd8, 0x00,   0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00,
//  743 
//  744   /* 0xe7 */
//  745   0x00, 0x90, 0x08, 0x28, 0x28, 0xd0, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  746 
//  747   /* 0xe8 */
//  748   0x00, 0xf8, 0x80, 0x40, 0x20, 0xf8, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  749 
//  750   /* 0xe9 */
//  751   0x00, 0xf8, 0x80, 0x44, 0x22, 0xf8, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  752 
//  753   /* 0xea */
//  754   0x00, 0xf8, 0x20, 0x20, 0x50, 0x88, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  755 
//  756   /* 0xeb */
//  757   0x00, 0xf0, 0x08, 0x08, 0x08, 0xf8, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  758 
//  759   /* 0xec */
//  760   0x00, 0xf8, 0x10, 0x60, 0x10, 0xf8, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  761 
//  762   /* 0xed */
//  763   0x00, 0xf8, 0x20, 0x20, 0x20, 0xf8, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  764 
//  765   /* 0xee */
//  766   0x00, 0xf0, 0x08, 0x08, 0x08, 0xf0, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  767 
//  768   /* 0xef */
//  769   0x00, 0xf8, 0x08, 0x08, 0x08, 0xf8, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  770 
//  771   /* 0xf0 */
//  772   0x00, 0xf8, 0x48, 0x48, 0x48, 0x30, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
//  773 
//  774   /* 0xf1 */
//  775   0x00, 0xf0, 0x08, 0x08, 0x08, 0x90, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  776 
//  777   /* 0xf2 */
//  778   0x00, 0x08, 0x08, 0xf8, 0x08, 0x08, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  779 
//  780   /* 0xf3 */
//  781   0x00, 0x38, 0x40, 0x40, 0x40, 0xf8, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  782 
//  783   /* 0xf4 */
//  784   0x00, 0x30, 0x48, 0xf8, 0x48, 0x30, 0x00,   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
//  785 
//  786   /* 0xf5 */
//  787   0x00, 0x08, 0x90, 0x60, 0x90, 0x08, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
//  788 
//  789   /* 0xf6 */
//  790   0x00, 0xf8, 0x00, 0x00, 0x00, 0xf8, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
//  791 
//  792   /* 0xf7 */
//  793   0x00, 0x38, 0x40, 0x40, 0x40, 0xf8, 0x00,   0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
//  794 
//  795   /* 0xf8 */
//  796   0x00, 0xf8, 0x00, 0xf8, 0x00, 0xf8, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,
//  797 
//  798   /* 0xf9 */
//  799   0x00, 0xf8, 0x00, 0xf8, 0x00, 0xf8, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
//  800 
//  801   /* 0xfa */
//  802   0x08, 0xf8, 0x20, 0x20, 0x20, 0xc0, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
//  803 
//  804   /* 0xfb */
//  805   0x00, 0xf8, 0x20, 0xe0, 0x00, 0xf8, 0x00,   0x00, 0x01, 0x01, 0x01, 0x00, 0x01, 0x00,
//  806 
//  807   /* 0xfc */
//  808   0x00, 0xf8, 0x20, 0x20, 0x20, 0xc0, 0x00,   0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00,
//  809 
//  810   /* 0xfd */
//  811   0x00, 0x90, 0x08, 0x28, 0x28, 0xf0, 0x00,   0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00,
//  812 
//  813   /* 0xfe */
//  814   0x00, 0xf8, 0x20, 0xf8, 0x08, 0xf8, 0x00,   0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x00,
//  815 
//  816   /* 0xff */
//  817   0x00, 0xb0, 0x48, 0x48, 0x48, 0xf8, 0x00,   0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00
//  818 };
//  819 

        SECTION `.data`:DATA:REORDER:NOROOT(2)
//  820 sFONT Font_7x10_thin = {
Font_7x10_thin:
        DATA
        DC32 10, 7, 255, Font_7x10_thin_Data

        SECTION `.iar_vfe_header`:DATA:REORDER:NOALLOC:NOROOT(2)
        SECTION_TYPE SHT_PROGBITS, 0
        DATA
        DC32 0

        SECTION __DLIB_PERTHREAD:DATA:REORDER:NOROOT(0)
        SECTION_TYPE SHT_PROGBITS, 0

        SECTION __DLIB_PERTHREAD_init:DATA:REORDER:NOROOT(0)
        SECTION_TYPE SHT_PROGBITS, 0

        END
//  821   10,                       /* Symbol height, in pixels.*/
//  822   7,                        /* Symbol width, in pixels.*/
//  823   255,                      /* Symbol number in the font.*/
//  824   &Font_7x10_thin_Data[0]   /* Font description table address.*/
//  825 };
//  826 
//  827 /** @} */ /* End of group Font_7x10_thin */
//  828 
//  829 /** @} */ /* End of group Fonts */
//  830 
//  831 /** @} */ /* End of group __MDR32F9Qx_Eval_Demo */
//  832 
//  833 #else /* __CMCARM_DEMO__ defined */
//  834 
//  835 #pragma warn -180
//  836 
//  837 #endif /* __CMCARM_DEMO__ */
//  838 
//  839 /******************* (C) COPYRIGHT 2010 Phyton *********************************
//  840 *
//  841 * END OF FILE Font_7x10_thin.c */
//  842 
// 
//    16 bytes in section .data
// 3 584 bytes in section .rodata
// 
// 3 584 bytes of CONST memory
//    16 bytes of DATA  memory
//
//Errors: none
//Warnings: none
