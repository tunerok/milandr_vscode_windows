; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Debug\Exe\rtc.o --asm_dir=.\Debug\Lst\ --list_dir=.\Debug\Lst\ --depend=.\Debug\Exe\rtc.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc\USB_Library -I..\..\inc -I..\..\Config -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\Debug\Exe\rtc.crf ..\..\src_fatfs\rtc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  rtc_gettime PROC
;;;51     
;;;52     int rtc_gettime (RTC *rtc)
000000  b570              PUSH     {r4-r6,lr}
;;;53     {
000002  4604              MOV      r4,r0
;;;54     
;;;55       ULONG TimeVar, temp_date;
;;;56     
;;;57         TimeVar = BKP_RTC_GetCounter();
000004  f7fffffe          BL       BKP_RTC_GetCounter
000008  4605              MOV      r5,r0
;;;58         temp_date   = MDR_BKP->REG_01;
00000a  4824              LDR      r0,|L1.156|
00000c  6846              LDR      r6,[r0,#4]
;;;59     
;;;60     	rtc->sec = (BYTE)(((TimeVar) % 3600) % 60);
00000e  f44f6061          MOV      r0,#0xe10
000012  fbb5f1f0          UDIV     r1,r5,r0
000016  fb005011          MLS      r0,r0,r1,r5
00001a  213c              MOVS     r1,#0x3c
00001c  fbb0f2f1          UDIV     r2,r0,r1
000020  fb010012          MLS      r0,r1,r2,r0
000024  71e0              STRB     r0,[r4,#7]
;;;61     	rtc->min = (BYTE)(((TimeVar) % 3600) / 60);
000026  f44f6061          MOV      r0,#0xe10
00002a  fbb5f1f0          UDIV     r1,r5,r0
00002e  fb005011          MLS      r0,r0,r1,r5
000032  213c              MOVS     r1,#0x3c
000034  fbb0f0f1          UDIV     r0,r0,r1
000038  71a0              STRB     r0,[r4,#6]
;;;62     	rtc->hour = (BYTE)(TimeVar / 3600);
00003a  f44f6061          MOV      r0,#0xe10
00003e  fbb5f0f0          UDIV     r0,r5,r0
000042  7160              STRB     r0,[r4,#5]
;;;63     	rtc->wday = 0;
000044  2000              MOVS     r0,#0
000046  7120              STRB     r0,[r4,#4]
;;;64     	rtc->mday = temp_date >> 24;
000048  0e30              LSRS     r0,r6,#24
00004a  70e0              STRB     r0,[r4,#3]
;;;65     	rtc->month = (temp_date >> 16) & 0xFF;
00004c  0c30              LSRS     r0,r6,#16
00004e  70a0              STRB     r0,[r4,#2]
;;;66     	rtc->year = temp_date & 0xFFFF;
000050  8026              STRH     r6,[r4,#0]
;;;67     	return 1;
000052  2001              MOVS     r0,#1
;;;68     }
000054  bd70              POP      {r4-r6,pc}
;;;69     
                          ENDP

                  get_fattime PROC
;;;26     
;;;27     DWORD get_fattime ()
000056  b51c              PUSH     {r2-r4,lr}
;;;28     {
;;;29     	RTC rtc;
;;;30     
;;;31     	/* Get local time */
;;;32     	rtc_gettime(&rtc);
000058  4668              MOV      r0,sp
00005a  f7fffffe          BL       rtc_gettime
;;;33     
;;;34     	/* Pack date and time into a DWORD variable */
;;;35     	return	  ((DWORD)(rtc.year - 1980) << 25)
00005e  f8bd0000          LDRH     r0,[sp,#0]
000062  f2a070bc          SUB      r0,r0,#0x7bc
000066  0640              LSLS     r0,r0,#25
000068  f89d1002          LDRB     r1,[sp,#2]
00006c  ea405041          ORR      r0,r0,r1,LSL #21
000070  f89d1003          LDRB     r1,[sp,#3]
000074  ea404001          ORR      r0,r0,r1,LSL #16
000078  f89d1005          LDRB     r1,[sp,#5]
00007c  ea4020c1          ORR      r0,r0,r1,LSL #11
000080  f89d1006          LDRB     r1,[sp,#6]
000084  ea401041          ORR      r0,r0,r1,LSL #5
000088  f89d1007          LDRB     r1,[sp,#7]
00008c  ea400051          ORR      r0,r0,r1,LSR #1
;;;36     			| ((DWORD)rtc.month << 21)
;;;37     			| ((DWORD)rtc.mday << 16)
;;;38     			| ((DWORD)rtc.hour << 11)
;;;39     			| ((DWORD)rtc.min << 5)
;;;40     			| ((DWORD)rtc.sec >> 1);
;;;41     }
000090  bd1c              POP      {r2-r4,pc}
;;;42     
                          ENDP

                  rtc_initialize PROC
;;;43     
;;;44     int rtc_initialize (void)
000092  2001              MOVS     r0,#1
;;;45     {
;;;46     
;;;47     	return 1;
;;;48     }
000094  4770              BX       lr
;;;49     
                          ENDP

                  rtc_settime PROC
;;;72     
;;;73     int rtc_settime (const RTC *rtc)
000096  4601              MOV      r1,r0
;;;74     {
;;;75     	return 1;
000098  2001              MOVS     r0,#1
;;;76     }
00009a  4770              BX       lr
;;;77     
                          ENDP

                  |L1.156|
                          DCD      0x400d8000

;*** Start embedded assembler ***

#line 1 "..\\..\\src_fatfs\\rtc.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_rtc_c_6da32aa6____REV16|
#line 129 "..\\..\\..\\..\\Libraries\\CMSIS\\CM3\\CoreSupport\\core_cmInstr.h"
|__asm___5_rtc_c_6da32aa6____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_rtc_c_6da32aa6____REVSH|
#line 144
|__asm___5_rtc_c_6da32aa6____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
