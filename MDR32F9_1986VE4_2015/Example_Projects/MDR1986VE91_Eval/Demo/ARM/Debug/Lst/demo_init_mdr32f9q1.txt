; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Debug\Exe\demo_init_mdr32f9q1.o --asm_dir=.\Debug\Lst\ --list_dir=.\Debug\Lst\ --depend=.\Debug\Exe\demo_init_mdr32f9q1.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc\USB_Library -I..\..\inc -I..\..\Config -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\Debug\Exe\demo_init_mdr32f9q1.crf ..\..\src\Demo_Init_MDR32F9Q1.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ExtBus_Setup PROC
;;;73     *******************************************************************************/
;;;74     void ExtBus_Setup(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;75     {
;;;76     	EBC_InitTypeDef EBC_InitStruct;
;;;77     
;;;78     	/* Enables the RTCHSE clock on the EBC */
;;;79       RST_CLK_PCLKcmd(RST_CLK_PCLK_EBC, ENABLE);
000002  2101              MOVS     r1,#1
000004  0788              LSLS     r0,r1,#30
000006  f7fffffe          BL       RST_CLK_PCLKcmd
;;;80     
;;;81       EBC_StructInit(&EBC_InitStruct);
00000a  4668              MOV      r0,sp
00000c  f7fffffe          BL       EBC_StructInit
;;;82     
;;;83       /* Configure External Bus */
;;;84       EBC_InitStruct.EBC_WaitState = EBC_WAIT_STATE_12HCLK;
000010  2009              MOVS     r0,#9
000012  f88d0008          STRB     r0,[sp,#8]
;;;85       EBC_InitStruct.EBC_Mode          = EBC_MODE_ROM;
000016  2001              MOVS     r0,#1
000018  9000              STR      r0,[sp,#0]
;;;86     
;;;87       EBC_Init(&EBC_InitStruct);
00001a  4668              MOV      r0,sp
00001c  f7fffffe          BL       EBC_Init
;;;88     }
000020  bd1f              POP      {r0-r4,pc}
;;;89     
                          ENDP

                  ClockConfigure PROC
;;;96     *******************************************************************************/
;;;97     void ClockConfigure(void)
000022  b510              PUSH     {r4,lr}
;;;98     {
;;;99       /* Configure CPU_PLL clock */
;;;100      RST_CLK_CPU_PLLconfig (RST_CLK_CPU_PLLsrcHSIdiv1,0);
000024  2100              MOVS     r1,#0
000026  4608              MOV      r0,r1
000028  f7fffffe          BL       RST_CLK_CPU_PLLconfig
;;;101    
;;;102      /* Enables the RTCHSE clock on all ports */
;;;103      RST_CLK_PCLKcmd(ALL_PORTS_CLK, ENABLE);
00002c  2101              MOVS     r1,#1
00002e  482e              LDR      r0,|L1.232|
000030  f7fffffe          BL       RST_CLK_PCLKcmd
;;;104    }
000034  bd10              POP      {r4,pc}
;;;105    
                          ENDP

                  Demo_Init PROC
;;;112    *******************************************************************************/
;;;113    void Demo_Init(void)
000036  b510              PUSH     {r4,lr}
;;;114    {
;;;115      ClockConfigure();
000038  f7fffffe          BL       ClockConfigure
;;;116    
;;;117    /************************ LCD Initialization *************************/
;;;118    
;;;119      /* Configure PORTA pins for data transfer to/from LCD */
;;;120      PortInitStructure.PORT_Pin = LCD_DATA_BUS_8;
00003c  20ff              MOVS     r0,#0xff
00003e  492b              LDR      r1,|L1.236|
000040  8008              STRH     r0,[r1,#0]
;;;121      PortInitStructure.PORT_FUNC = PORT_FUNC_MAIN;
000042  2001              MOVS     r0,#1
000044  7208              STRB     r0,[r1,#8]
;;;122      PortInitStructure.PORT_SPEED = PORT_SPEED_SLOW;
000046  7248              STRB     r0,[r1,#9]
;;;123      PortInitStructure.PORT_MODE = PORT_MODE_DIGITAL;
000048  7288              STRB     r0,[r1,#0xa]
;;;124      PortInitStructure.PORT_OE = PORT_OE_IN;
00004a  2000              MOVS     r0,#0
00004c  7088              STRB     r0,[r1,#2]
;;;125    
;;;126      PORT_Init(MDR_PORTA, &PortInitStructure);
00004e  4828              LDR      r0,|L1.240|
000050  f7fffffe          BL       PORT_Init
;;;127    
;;;128      /* Configure PORTE pin4 and pin5 for LCD crystals control */
;;;129      PortInitStructure.PORT_Pin = PORT_Pin_4 | PORT_Pin_5;
000054  2030              MOVS     r0,#0x30
000056  4925              LDR      r1,|L1.236|
000058  8008              STRH     r0,[r1,#0]
;;;130    
;;;131      PORT_Init(MDR_PORTE, &PortInitStructure);
00005a  4826              LDR      r0,|L1.244|
00005c  f7fffffe          BL       PORT_Init
;;;132    
;;;133      /* Configure PORTE pin11 for data/command mode switching */
;;;134      PortInitStructure.PORT_Pin = PORT_Pin_11;
000060  f44f6000          MOV      r0,#0x800
000064  4921              LDR      r1,|L1.236|
000066  8008              STRH     r0,[r1,#0]
;;;135    
;;;136      PORT_Init(MDR_PORTE, &PortInitStructure);
000068  4822              LDR      r0,|L1.244|
00006a  f7fffffe          BL       PORT_Init
;;;137    
;;;138      /* Configure PORTC pin2 for read/write control */
;;;139      PortInitStructure.PORT_Pin = PORT_Pin_2;
00006e  2004              MOVS     r0,#4
000070  491e              LDR      r1,|L1.236|
000072  8008              STRH     r0,[r1,#0]
;;;140    
;;;141      PORT_Init(MDR_PORTC, &PortInitStructure);
000074  4820              LDR      r0,|L1.248|
000076  f7fffffe          BL       PORT_Init
;;;142    
;;;143      /* Configure PORTC pin7 for CLOCK signal control */
;;;144      PortInitStructure.PORT_Pin = PORT_Pin_7;
00007a  2080              MOVS     r0,#0x80
00007c  491b              LDR      r1,|L1.236|
00007e  8008              STRH     r0,[r1,#0]
;;;145      PortInitStructure.PORT_SPEED = PORT_SPEED_FAST;
000080  2002              MOVS     r0,#2
000082  7248              STRB     r0,[r1,#9]
;;;146    
;;;147      PORT_Init(MDR_PORTC, &PortInitStructure);
000084  481c              LDR      r0,|L1.248|
000086  f7fffffe          BL       PORT_Init
;;;148    
;;;149      /* Configure PORTC pin9 for RESET signal control */
;;;150      PortInitStructure.PORT_Pin = PORT_Pin_9;
00008a  f44f7000          MOV      r0,#0x200
00008e  4917              LDR      r1,|L1.236|
000090  8008              STRH     r0,[r1,#0]
;;;151      PortInitStructure.PORT_OE = PORT_OE_OUT;
000092  2001              MOVS     r0,#1
000094  7088              STRB     r0,[r1,#2]
;;;152      PortInitStructure.PORT_FUNC = PORT_FUNC_PORT;
000096  2000              MOVS     r0,#0
000098  7208              STRB     r0,[r1,#8]
;;;153      PortInitStructure.PORT_SPEED = PORT_SPEED_SLOW;
00009a  2001              MOVS     r0,#1
00009c  7248              STRB     r0,[r1,#9]
;;;154    
;;;155      PORT_Init(MDR_PORTC, &PortInitStructure);
00009e  4816              LDR      r0,|L1.248|
0000a0  f7fffffe          BL       PORT_Init
;;;156    
;;;157      ExtBus_Setup();
0000a4  f7fffffe          BL       ExtBus_Setup
;;;158    
;;;159      LCD_INIT();
0000a8  f7fffffe          BL       LCD_INIT
;;;160    
;;;161    /************************ Joystick Initialization *************************/
;;;162    
;;;163      /* Configure PORTC pins 10..14 for input to handle joystick events */
;;;164      PortInitStructure.PORT_Pin   = (PORT_Pin_10 | PORT_Pin_11 | PORT_Pin_12 |
0000ac  f44f40f8          MOV      r0,#0x7c00
0000b0  490e              LDR      r1,|L1.236|
0000b2  8008              STRH     r0,[r1,#0]
;;;165                                      PORT_Pin_13 | PORT_Pin_14);
;;;166      PortInitStructure.PORT_OE    = PORT_OE_IN;
0000b4  2000              MOVS     r0,#0
0000b6  7088              STRB     r0,[r1,#2]
;;;167      PortInitStructure.PORT_FUNC  = PORT_FUNC_PORT;
0000b8  7208              STRB     r0,[r1,#8]
;;;168      PortInitStructure.PORT_SPEED = PORT_OUTPUT_OFF;
0000ba  7248              STRB     r0,[r1,#9]
;;;169    
;;;170      PORT_Init(MDR_PORTC, &PortInitStructure);
0000bc  480e              LDR      r0,|L1.248|
0000be  f7fffffe          BL       PORT_Init
;;;171    
;;;172    /************************ LEDs Initialization *************************/
;;;173    
;;;174      /* Configure PORTD pins 10..14 for output to switch LEDs on/off */
;;;175      PortInitStructure.PORT_Pin   = LEDs_PINs;
0000c2  f44f40f8          MOV      r0,#0x7c00
0000c6  4909              LDR      r1,|L1.236|
0000c8  8008              STRH     r0,[r1,#0]
;;;176      PortInitStructure.PORT_OE    = PORT_OE_OUT;
0000ca  2001              MOVS     r0,#1
0000cc  7088              STRB     r0,[r1,#2]
;;;177      PortInitStructure.PORT_FUNC  = PORT_FUNC_PORT;
0000ce  2000              MOVS     r0,#0
0000d0  7208              STRB     r0,[r1,#8]
;;;178      PortInitStructure.PORT_SPEED = PORT_SPEED_SLOW;
0000d2  2001              MOVS     r0,#1
0000d4  7248              STRB     r0,[r1,#9]
;;;179    
;;;180      PORT_Init(MDR_PORTD, &PortInitStructure);
0000d6  4809              LDR      r0,|L1.252|
0000d8  f7fffffe          BL       PORT_Init
;;;181    
;;;182      /* All LEDs switch off */
;;;183      PORT_ResetBits(MDR_PORTD, LEDs_PINs);
0000dc  f44f41f8          MOV      r1,#0x7c00
0000e0  4806              LDR      r0,|L1.252|
0000e2  f7fffffe          BL       PORT_ResetBits
;;;184    }
0000e6  bd10              POP      {r4,pc}
;;;185    
                          ENDP

                  |L1.232|
                          DCD      0x23e00000
                  |L1.236|
                          DCD      PortInitStructure
                  |L1.240|
                          DCD      0x400a8000
                  |L1.244|
                          DCD      0x400c8000
                  |L1.248|
                          DCD      0x400b8000
                  |L1.252|
                          DCD      0x400c0000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  PortInitStructure
                          %        12

;*** Start embedded assembler ***

#line 1 "..\\..\\src\\Demo_Init_MDR32F9Q1.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___21_Demo_Init_MDR32F9Q1_c_7e24da13____REV16|
#line 129 "..\\..\\..\\..\\Libraries\\CMSIS\\CM3\\CoreSupport\\core_cmInstr.h"
|__asm___21_Demo_Init_MDR32F9Q1_c_7e24da13____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___21_Demo_Init_MDR32F9Q1_c_7e24da13____REVSH|
#line 144
|__asm___21_Demo_Init_MDR32F9Q1_c_7e24da13____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
