; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Debug\Exe\menu_lowpower.o --asm_dir=.\Debug\Lst\ --list_dir=.\Debug\Lst\ --depend=.\Debug\Exe\menu_lowpower.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc\USB_Library -I..\..\inc -I..\..\Config -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\Debug\Exe\menu_lowpower.crf ..\..\src\Menu_lowpower.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LowPower_Init PROC
;;;108    *******************************************************************************/
;;;109    void LowPower_Init(void)
000000  b510              PUSH     {r4,lr}
;;;110    {
;;;111      RST_CLK_PCLKcmd(RST_CLK_PCLK_POWER, ENABLE);
000002  2101              MOVS     r1,#1
000004  02c8              LSLS     r0,r1,#11
000006  f7fffffe          BL       RST_CLK_PCLKcmd
;;;112    }
00000a  bd10              POP      {r4,pc}
;;;113    
                          ENDP

                  PORT_SaveConfig PROC
;;;121    *******************************************************************************/
;;;122    static void PORT_SaveConfig(void)
00000c  b510              PUSH     {r4,lr}
;;;123    {
;;;124      PORTA_Data.ANALOG = MDR_PORTA->ANALOG;
00000e  48fd              LDR      r0,|L1.1028|
000010  68c0              LDR      r0,[r0,#0xc]
000012  49fd              LDR      r1,|L1.1032|
000014  6088              STR      r0,[r1,#8]  ; PORTA_Data
;;;125      PORTA_Data.FUNC   = MDR_PORTA->FUNC;
000016  48fb              LDR      r0,|L1.1028|
000018  6880              LDR      r0,[r0,#8]
00001a  6048              STR      r0,[r1,#4]  ; PORTA_Data
;;;126      PORTA_Data.GFEN   = MDR_PORTA->GFEN;
00001c  48f9              LDR      r0,|L1.1028|
00001e  69c0              LDR      r0,[r0,#0x1c]
000020  6188              STR      r0,[r1,#0x18]  ; PORTA_Data
;;;127      PORTA_Data.OE     = MDR_PORTA->OE;
000022  48f8              LDR      r0,|L1.1028|
000024  6840              LDR      r0,[r0,#4]
000026  6008              STR      r0,[r1,#0]  ; PORTA_Data
;;;128      PORTA_Data.PD     = MDR_PORTA->PD;
000028  48f6              LDR      r0,|L1.1028|
00002a  6940              LDR      r0,[r0,#0x14]
00002c  6108              STR      r0,[r1,#0x10]  ; PORTA_Data
;;;129      PORTA_Data.PULL   = MDR_PORTA->PULL;
00002e  48f5              LDR      r0,|L1.1028|
000030  6900              LDR      r0,[r0,#0x10]
000032  60c8              STR      r0,[r1,#0xc]  ; PORTA_Data
;;;130      PORTA_Data.PWR    = MDR_PORTA->PWR;
000034  48f3              LDR      r0,|L1.1028|
000036  6980              LDR      r0,[r0,#0x18]
000038  6148              STR      r0,[r1,#0x14]  ; PORTA_Data
;;;131    
;;;132      PORTB_Data.ANALOG = MDR_PORTB->ANALOG;
00003a  48f4              LDR      r0,|L1.1036|
00003c  68c0              LDR      r0,[r0,#0xc]
00003e  49f4              LDR      r1,|L1.1040|
000040  6088              STR      r0,[r1,#8]  ; PORTB_Data
;;;133      PORTB_Data.FUNC   = MDR_PORTB->FUNC;
000042  48f2              LDR      r0,|L1.1036|
000044  6880              LDR      r0,[r0,#8]
000046  6048              STR      r0,[r1,#4]  ; PORTB_Data
;;;134      PORTB_Data.GFEN   = MDR_PORTB->GFEN;
000048  48f0              LDR      r0,|L1.1036|
00004a  69c0              LDR      r0,[r0,#0x1c]
00004c  6188              STR      r0,[r1,#0x18]  ; PORTB_Data
;;;135      PORTB_Data.OE     = MDR_PORTB->OE;
00004e  48ef              LDR      r0,|L1.1036|
000050  6840              LDR      r0,[r0,#4]
000052  6008              STR      r0,[r1,#0]  ; PORTB_Data
;;;136      PORTB_Data.PD     = MDR_PORTB->PD;
000054  48ed              LDR      r0,|L1.1036|
000056  6940              LDR      r0,[r0,#0x14]
000058  6108              STR      r0,[r1,#0x10]  ; PORTB_Data
;;;137      PORTB_Data.PULL   = MDR_PORTB->PULL;
00005a  48ec              LDR      r0,|L1.1036|
00005c  6900              LDR      r0,[r0,#0x10]
00005e  60c8              STR      r0,[r1,#0xc]  ; PORTB_Data
;;;138      PORTB_Data.PWR    = MDR_PORTB->PWR;
000060  48ea              LDR      r0,|L1.1036|
000062  6980              LDR      r0,[r0,#0x18]
000064  6148              STR      r0,[r1,#0x14]  ; PORTB_Data
;;;139    
;;;140      PORTC_Data.ANALOG = MDR_PORTC->ANALOG;
000066  48eb              LDR      r0,|L1.1044|
000068  68c0              LDR      r0,[r0,#0xc]
00006a  49eb              LDR      r1,|L1.1048|
00006c  6088              STR      r0,[r1,#8]  ; PORTC_Data
;;;141      PORTC_Data.FUNC   = MDR_PORTC->FUNC;
00006e  48e9              LDR      r0,|L1.1044|
000070  6880              LDR      r0,[r0,#8]
000072  6048              STR      r0,[r1,#4]  ; PORTC_Data
;;;142      PORTC_Data.GFEN   = MDR_PORTC->GFEN;
000074  48e7              LDR      r0,|L1.1044|
000076  69c0              LDR      r0,[r0,#0x1c]
000078  6188              STR      r0,[r1,#0x18]  ; PORTC_Data
;;;143      PORTC_Data.OE     = MDR_PORTC->OE;
00007a  48e6              LDR      r0,|L1.1044|
00007c  6840              LDR      r0,[r0,#4]
00007e  6008              STR      r0,[r1,#0]  ; PORTC_Data
;;;144      PORTC_Data.PD     = MDR_PORTC->PD;
000080  48e4              LDR      r0,|L1.1044|
000082  6940              LDR      r0,[r0,#0x14]
000084  6108              STR      r0,[r1,#0x10]  ; PORTC_Data
;;;145      PORTC_Data.PULL   = MDR_PORTC->PULL;
000086  48e3              LDR      r0,|L1.1044|
000088  6900              LDR      r0,[r0,#0x10]
00008a  60c8              STR      r0,[r1,#0xc]  ; PORTC_Data
;;;146      PORTC_Data.PWR    = MDR_PORTC->PWR;
00008c  48e1              LDR      r0,|L1.1044|
00008e  6980              LDR      r0,[r0,#0x18]
000090  6148              STR      r0,[r1,#0x14]  ; PORTC_Data
;;;147    
;;;148      PORTD_Data.ANALOG = MDR_PORTD->ANALOG;
000092  48e2              LDR      r0,|L1.1052|
000094  68c0              LDR      r0,[r0,#0xc]
000096  49e2              LDR      r1,|L1.1056|
000098  6088              STR      r0,[r1,#8]  ; PORTD_Data
;;;149      PORTD_Data.FUNC   = MDR_PORTD->FUNC;
00009a  48e0              LDR      r0,|L1.1052|
00009c  6880              LDR      r0,[r0,#8]
00009e  6048              STR      r0,[r1,#4]  ; PORTD_Data
;;;150      PORTD_Data.GFEN   = MDR_PORTD->GFEN;
0000a0  48de              LDR      r0,|L1.1052|
0000a2  69c0              LDR      r0,[r0,#0x1c]
0000a4  6188              STR      r0,[r1,#0x18]  ; PORTD_Data
;;;151      PORTD_Data.OE     = MDR_PORTD->OE;
0000a6  48dd              LDR      r0,|L1.1052|
0000a8  6840              LDR      r0,[r0,#4]
0000aa  6008              STR      r0,[r1,#0]  ; PORTD_Data
;;;152      PORTD_Data.PD     = MDR_PORTD->PD;
0000ac  48db              LDR      r0,|L1.1052|
0000ae  6940              LDR      r0,[r0,#0x14]
0000b0  6108              STR      r0,[r1,#0x10]  ; PORTD_Data
;;;153      PORTD_Data.PULL   = MDR_PORTD->PULL;
0000b2  48da              LDR      r0,|L1.1052|
0000b4  6900              LDR      r0,[r0,#0x10]
0000b6  60c8              STR      r0,[r1,#0xc]  ; PORTD_Data
;;;154      PORTD_Data.PWR    = MDR_PORTD->PWR;
0000b8  48d8              LDR      r0,|L1.1052|
0000ba  6980              LDR      r0,[r0,#0x18]
0000bc  6148              STR      r0,[r1,#0x14]  ; PORTD_Data
;;;155    
;;;156      PORTE_Data.ANALOG = MDR_PORTE->ANALOG;
0000be  48d9              LDR      r0,|L1.1060|
0000c0  68c0              LDR      r0,[r0,#0xc]
0000c2  49d9              LDR      r1,|L1.1064|
0000c4  6088              STR      r0,[r1,#8]  ; PORTE_Data
;;;157      PORTE_Data.FUNC   = MDR_PORTE->FUNC;
0000c6  48d7              LDR      r0,|L1.1060|
0000c8  6880              LDR      r0,[r0,#8]
0000ca  6048              STR      r0,[r1,#4]  ; PORTE_Data
;;;158      PORTE_Data.GFEN   = MDR_PORTE->GFEN;
0000cc  48d5              LDR      r0,|L1.1060|
0000ce  69c0              LDR      r0,[r0,#0x1c]
0000d0  6188              STR      r0,[r1,#0x18]  ; PORTE_Data
;;;159      PORTE_Data.OE     = MDR_PORTE->OE;
0000d2  48d4              LDR      r0,|L1.1060|
0000d4  6840              LDR      r0,[r0,#4]
0000d6  6008              STR      r0,[r1,#0]  ; PORTE_Data
;;;160      PORTE_Data.PD     = MDR_PORTE->PD;
0000d8  48d2              LDR      r0,|L1.1060|
0000da  6940              LDR      r0,[r0,#0x14]
0000dc  6108              STR      r0,[r1,#0x10]  ; PORTE_Data
;;;161      PORTE_Data.PULL   = MDR_PORTE->PULL;
0000de  48d1              LDR      r0,|L1.1060|
0000e0  6900              LDR      r0,[r0,#0x10]
0000e2  60c8              STR      r0,[r1,#0xc]  ; PORTE_Data
;;;162      PORTE_Data.PWR    = MDR_PORTE->PWR;
0000e4  48cf              LDR      r0,|L1.1060|
0000e6  6980              LDR      r0,[r0,#0x18]
0000e8  6148              STR      r0,[r1,#0x14]  ; PORTE_Data
;;;163    
;;;164      PORTF_Data.ANALOG = MDR_PORTF->ANALOG;
0000ea  48d0              LDR      r0,|L1.1068|
0000ec  68c0              LDR      r0,[r0,#0xc]
0000ee  49d0              LDR      r1,|L1.1072|
0000f0  6088              STR      r0,[r1,#8]  ; PORTF_Data
;;;165      PORTF_Data.FUNC   = MDR_PORTF->FUNC;
0000f2  48ce              LDR      r0,|L1.1068|
0000f4  6880              LDR      r0,[r0,#8]
0000f6  6048              STR      r0,[r1,#4]  ; PORTF_Data
;;;166      PORTF_Data.GFEN   = MDR_PORTF->GFEN;
0000f8  48cc              LDR      r0,|L1.1068|
0000fa  69c0              LDR      r0,[r0,#0x1c]
0000fc  6188              STR      r0,[r1,#0x18]  ; PORTF_Data
;;;167      PORTF_Data.OE     = MDR_PORTF->OE;
0000fe  48cb              LDR      r0,|L1.1068|
000100  6840              LDR      r0,[r0,#4]
000102  6008              STR      r0,[r1,#0]  ; PORTF_Data
;;;168      PORTF_Data.PD     = MDR_PORTF->PD;
000104  48c9              LDR      r0,|L1.1068|
000106  6940              LDR      r0,[r0,#0x14]
000108  6108              STR      r0,[r1,#0x10]  ; PORTF_Data
;;;169      PORTF_Data.PULL   = MDR_PORTF->PULL;
00010a  48c8              LDR      r0,|L1.1068|
00010c  6900              LDR      r0,[r0,#0x10]
00010e  60c8              STR      r0,[r1,#0xc]  ; PORTF_Data
;;;170      PORTF_Data.PWR    = MDR_PORTF->PWR;
000110  48c6              LDR      r0,|L1.1068|
000112  6980              LDR      r0,[r0,#0x18]
000114  6148              STR      r0,[r1,#0x14]  ; PORTF_Data
;;;171    
;;;172      /* Configure all PORTs for low power consumption */
;;;173      PORT_DeInit(MDR_PORTA);
000116  48bb              LDR      r0,|L1.1028|
000118  f7fffffe          BL       PORT_DeInit
;;;174      PORT_DeInit(MDR_PORTB);
00011c  48bb              LDR      r0,|L1.1036|
00011e  f7fffffe          BL       PORT_DeInit
;;;175      PORT_DeInit(MDR_PORTC);
000122  48bc              LDR      r0,|L1.1044|
000124  f7fffffe          BL       PORT_DeInit
;;;176      PORT_DeInit(MDR_PORTD);
000128  48bc              LDR      r0,|L1.1052|
00012a  f7fffffe          BL       PORT_DeInit
;;;177      PORT_DeInit(MDR_PORTE);
00012e  48bd              LDR      r0,|L1.1060|
000130  f7fffffe          BL       PORT_DeInit
;;;178      PORT_DeInit(MDR_PORTF);
000134  48bd              LDR      r0,|L1.1068|
000136  f7fffffe          BL       PORT_DeInit
;;;179    }
00013a  bd10              POP      {r4,pc}
;;;180    
                          ENDP

                  PORT_RestoreConfig PROC
;;;187    *******************************************************************************/
;;;188    static void PORT_RestoreConfig(void)
00013c  48b2              LDR      r0,|L1.1032|
;;;189    {
;;;190      MDR_PORTA->ANALOG = PORTA_Data.ANALOG;
00013e  6880              LDR      r0,[r0,#8]  ; PORTA_Data
000140  49b0              LDR      r1,|L1.1028|
000142  60c8              STR      r0,[r1,#0xc]
;;;191      MDR_PORTA->FUNC   = PORTA_Data.FUNC;
000144  48b0              LDR      r0,|L1.1032|
000146  6840              LDR      r0,[r0,#4]  ; PORTA_Data
000148  6088              STR      r0,[r1,#8]
;;;192      MDR_PORTA->GFEN   = PORTA_Data.GFEN;
00014a  48af              LDR      r0,|L1.1032|
00014c  6980              LDR      r0,[r0,#0x18]  ; PORTA_Data
00014e  61c8              STR      r0,[r1,#0x1c]
;;;193      MDR_PORTA->OE     = PORTA_Data.OE;
000150  48ad              LDR      r0,|L1.1032|
000152  6800              LDR      r0,[r0,#0]  ; PORTA_Data
000154  6048              STR      r0,[r1,#4]
;;;194      MDR_PORTA->PD     = PORTA_Data.PD;
000156  48ac              LDR      r0,|L1.1032|
000158  6900              LDR      r0,[r0,#0x10]  ; PORTA_Data
00015a  6148              STR      r0,[r1,#0x14]
;;;195      MDR_PORTA->PULL   = PORTA_Data.PULL;
00015c  48aa              LDR      r0,|L1.1032|
00015e  68c0              LDR      r0,[r0,#0xc]  ; PORTA_Data
000160  6108              STR      r0,[r1,#0x10]
;;;196      MDR_PORTA->PWR    = PORTA_Data.PWR;
000162  48a9              LDR      r0,|L1.1032|
000164  6940              LDR      r0,[r0,#0x14]  ; PORTA_Data
000166  6188              STR      r0,[r1,#0x18]
;;;197    
;;;198      MDR_PORTB->ANALOG = PORTB_Data.ANALOG;
000168  48a9              LDR      r0,|L1.1040|
00016a  6880              LDR      r0,[r0,#8]  ; PORTB_Data
00016c  49a7              LDR      r1,|L1.1036|
00016e  60c8              STR      r0,[r1,#0xc]
;;;199      MDR_PORTB->FUNC   = PORTB_Data.FUNC;
000170  48a7              LDR      r0,|L1.1040|
000172  6840              LDR      r0,[r0,#4]  ; PORTB_Data
000174  6088              STR      r0,[r1,#8]
;;;200      MDR_PORTB->GFEN   = PORTB_Data.GFEN;
000176  48a6              LDR      r0,|L1.1040|
000178  6980              LDR      r0,[r0,#0x18]  ; PORTB_Data
00017a  61c8              STR      r0,[r1,#0x1c]
;;;201      MDR_PORTB->OE     = PORTB_Data.OE;
00017c  48a4              LDR      r0,|L1.1040|
00017e  6800              LDR      r0,[r0,#0]  ; PORTB_Data
000180  6048              STR      r0,[r1,#4]
;;;202      MDR_PORTB->PD     = PORTB_Data.PD;
000182  48a3              LDR      r0,|L1.1040|
000184  6900              LDR      r0,[r0,#0x10]  ; PORTB_Data
000186  6148              STR      r0,[r1,#0x14]
;;;203      MDR_PORTB->PULL   = PORTB_Data.PULL;
000188  48a1              LDR      r0,|L1.1040|
00018a  68c0              LDR      r0,[r0,#0xc]  ; PORTB_Data
00018c  6108              STR      r0,[r1,#0x10]
;;;204      MDR_PORTB->PWR    = PORTB_Data.PWR;
00018e  48a0              LDR      r0,|L1.1040|
000190  6940              LDR      r0,[r0,#0x14]  ; PORTB_Data
000192  6188              STR      r0,[r1,#0x18]
;;;205    
;;;206      MDR_PORTC->ANALOG = PORTC_Data.ANALOG;
000194  48a0              LDR      r0,|L1.1048|
000196  6880              LDR      r0,[r0,#8]  ; PORTC_Data
000198  499e              LDR      r1,|L1.1044|
00019a  60c8              STR      r0,[r1,#0xc]
;;;207      MDR_PORTC->FUNC   = PORTC_Data.FUNC;
00019c  489e              LDR      r0,|L1.1048|
00019e  6840              LDR      r0,[r0,#4]  ; PORTC_Data
0001a0  6088              STR      r0,[r1,#8]
;;;208      MDR_PORTC->GFEN   = PORTC_Data.GFEN;
0001a2  489d              LDR      r0,|L1.1048|
0001a4  6980              LDR      r0,[r0,#0x18]  ; PORTC_Data
0001a6  61c8              STR      r0,[r1,#0x1c]
;;;209      MDR_PORTC->OE     = PORTC_Data.OE;
0001a8  489b              LDR      r0,|L1.1048|
0001aa  6800              LDR      r0,[r0,#0]  ; PORTC_Data
0001ac  6048              STR      r0,[r1,#4]
;;;210      MDR_PORTC->PD     = PORTC_Data.PD;
0001ae  489a              LDR      r0,|L1.1048|
0001b0  6900              LDR      r0,[r0,#0x10]  ; PORTC_Data
0001b2  6148              STR      r0,[r1,#0x14]
;;;211      MDR_PORTC->PULL   = PORTC_Data.PULL;
0001b4  4898              LDR      r0,|L1.1048|
0001b6  68c0              LDR      r0,[r0,#0xc]  ; PORTC_Data
0001b8  6108              STR      r0,[r1,#0x10]
;;;212      MDR_PORTC->PWR    = PORTC_Data.PWR;
0001ba  4897              LDR      r0,|L1.1048|
0001bc  6940              LDR      r0,[r0,#0x14]  ; PORTC_Data
0001be  6188              STR      r0,[r1,#0x18]
;;;213    
;;;214      MDR_PORTD->ANALOG = PORTD_Data.ANALOG;
0001c0  4897              LDR      r0,|L1.1056|
0001c2  6880              LDR      r0,[r0,#8]  ; PORTD_Data
0001c4  4995              LDR      r1,|L1.1052|
0001c6  60c8              STR      r0,[r1,#0xc]
;;;215      MDR_PORTD->FUNC   = PORTD_Data.FUNC;
0001c8  4895              LDR      r0,|L1.1056|
0001ca  6840              LDR      r0,[r0,#4]  ; PORTD_Data
0001cc  6088              STR      r0,[r1,#8]
;;;216      MDR_PORTD->GFEN   = PORTD_Data.GFEN;
0001ce  4894              LDR      r0,|L1.1056|
0001d0  6980              LDR      r0,[r0,#0x18]  ; PORTD_Data
0001d2  61c8              STR      r0,[r1,#0x1c]
;;;217      MDR_PORTD->OE     = PORTD_Data.OE;
0001d4  4892              LDR      r0,|L1.1056|
0001d6  6800              LDR      r0,[r0,#0]  ; PORTD_Data
0001d8  6048              STR      r0,[r1,#4]
;;;218      MDR_PORTD->PD     = PORTD_Data.PD;
0001da  4891              LDR      r0,|L1.1056|
0001dc  6900              LDR      r0,[r0,#0x10]  ; PORTD_Data
0001de  6148              STR      r0,[r1,#0x14]
;;;219      MDR_PORTD->PULL   = PORTD_Data.PULL;
0001e0  488f              LDR      r0,|L1.1056|
0001e2  68c0              LDR      r0,[r0,#0xc]  ; PORTD_Data
0001e4  6108              STR      r0,[r1,#0x10]
;;;220      MDR_PORTD->PWR    = PORTD_Data.PWR;
0001e6  488e              LDR      r0,|L1.1056|
0001e8  6940              LDR      r0,[r0,#0x14]  ; PORTD_Data
0001ea  6188              STR      r0,[r1,#0x18]
;;;221    
;;;222      MDR_PORTE->ANALOG = PORTE_Data.ANALOG;
0001ec  488e              LDR      r0,|L1.1064|
0001ee  6880              LDR      r0,[r0,#8]  ; PORTE_Data
0001f0  498c              LDR      r1,|L1.1060|
0001f2  60c8              STR      r0,[r1,#0xc]
;;;223      MDR_PORTE->FUNC   = PORTE_Data.FUNC;
0001f4  488c              LDR      r0,|L1.1064|
0001f6  6840              LDR      r0,[r0,#4]  ; PORTE_Data
0001f8  6088              STR      r0,[r1,#8]
;;;224      MDR_PORTE->GFEN   = PORTE_Data.GFEN;
0001fa  488b              LDR      r0,|L1.1064|
0001fc  6980              LDR      r0,[r0,#0x18]  ; PORTE_Data
0001fe  61c8              STR      r0,[r1,#0x1c]
;;;225      MDR_PORTE->OE     = PORTE_Data.OE;
000200  4889              LDR      r0,|L1.1064|
000202  6800              LDR      r0,[r0,#0]  ; PORTE_Data
000204  6048              STR      r0,[r1,#4]
;;;226      MDR_PORTE->PD     = PORTE_Data.PD;
000206  4888              LDR      r0,|L1.1064|
000208  6900              LDR      r0,[r0,#0x10]  ; PORTE_Data
00020a  6148              STR      r0,[r1,#0x14]
;;;227      MDR_PORTE->PULL   = PORTE_Data.PULL;
00020c  4886              LDR      r0,|L1.1064|
00020e  68c0              LDR      r0,[r0,#0xc]  ; PORTE_Data
000210  6108              STR      r0,[r1,#0x10]
;;;228      MDR_PORTE->PWR    = PORTE_Data.PWR;
000212  4885              LDR      r0,|L1.1064|
000214  6940              LDR      r0,[r0,#0x14]  ; PORTE_Data
000216  6188              STR      r0,[r1,#0x18]
;;;229    
;;;230      MDR_PORTF->ANALOG = PORTF_Data.ANALOG;
000218  4885              LDR      r0,|L1.1072|
00021a  6880              LDR      r0,[r0,#8]  ; PORTF_Data
00021c  4983              LDR      r1,|L1.1068|
00021e  60c8              STR      r0,[r1,#0xc]
;;;231      MDR_PORTF->FUNC   = PORTF_Data.FUNC;
000220  4883              LDR      r0,|L1.1072|
000222  6840              LDR      r0,[r0,#4]  ; PORTF_Data
000224  6088              STR      r0,[r1,#8]
;;;232      MDR_PORTF->GFEN   = PORTF_Data.GFEN;
000226  4882              LDR      r0,|L1.1072|
000228  6980              LDR      r0,[r0,#0x18]  ; PORTF_Data
00022a  61c8              STR      r0,[r1,#0x1c]
;;;233      MDR_PORTF->OE     = PORTF_Data.OE;
00022c  4880              LDR      r0,|L1.1072|
00022e  6800              LDR      r0,[r0,#0]  ; PORTF_Data
000230  6048              STR      r0,[r1,#4]
;;;234      MDR_PORTF->PD     = PORTF_Data.PD;
000232  487f              LDR      r0,|L1.1072|
000234  6900              LDR      r0,[r0,#0x10]  ; PORTF_Data
000236  6148              STR      r0,[r1,#0x14]
;;;235      MDR_PORTF->PULL   = PORTF_Data.PULL;
000238  487d              LDR      r0,|L1.1072|
00023a  68c0              LDR      r0,[r0,#0xc]  ; PORTF_Data
00023c  6108              STR      r0,[r1,#0x10]
;;;236      MDR_PORTF->PWR    = PORTF_Data.PWR;
00023e  487c              LDR      r0,|L1.1072|
000240  6940              LDR      r0,[r0,#0x14]  ; PORTF_Data
000242  6188              STR      r0,[r1,#0x18]
;;;237    }
000244  4770              BX       lr
;;;238    
                          ENDP

                  Clock_SaveConfig PROC
;;;245    *******************************************************************************/
;;;246    void Clock_SaveConfig(void)
000246  487b              LDR      r0,|L1.1076|
;;;247    {
;;;248      ClockData.PVDCS           = MDR_POWER->PVDCS;
000248  6800              LDR      r0,[r0,#0]
00024a  497b              LDR      r1,|L1.1080|
00024c  6008              STR      r0,[r1,#0]  ; ClockData
;;;249      ClockData.CPU_CLOCK       = MDR_RST_CLK->CPU_CLOCK;
00024e  487b              LDR      r0,|L1.1084|
000250  68c0              LDR      r0,[r0,#0xc]
000252  6048              STR      r0,[r1,#4]  ; ClockData
;;;250      ClockData.PER_CLOCK       = MDR_RST_CLK->PER_CLOCK;
000254  4879              LDR      r0,|L1.1084|
000256  69c0              LDR      r0,[r0,#0x1c]
000258  6088              STR      r0,[r1,#8]  ; ClockData
;;;251    #if defined (USE_MDR32F9Q1_Rev0) || defined (USE_MDR32F9Q1_Rev1)
;;;252      ClockData.EBC_CONTROL = MDR_EBC->CONTROL;
00025a  4879              LDR      r0,|L1.1088|
00025c  6d40              LDR      r0,[r0,#0x54]
00025e  60c8              STR      r0,[r1,#0xc]  ; ClockData
;;;253    #endif
;;;254    }
000260  4770              BX       lr
;;;255    
                          ENDP

                  Clock_RestoreConfig PROC
;;;262    *******************************************************************************/
;;;263    void Clock_RestoreConfig(void)
000262  4875              LDR      r0,|L1.1080|
;;;264    {
;;;265      MDR_POWER->PVDCS       = ClockData.PVDCS;
000264  6800              LDR      r0,[r0,#0]  ; ClockData
000266  4973              LDR      r1,|L1.1076|
000268  6008              STR      r0,[r1,#0]
;;;266      MDR_RST_CLK->CPU_CLOCK = ClockData.CPU_CLOCK;
00026a  4873              LDR      r0,|L1.1080|
00026c  6840              LDR      r0,[r0,#4]  ; ClockData
00026e  4973              LDR      r1,|L1.1084|
000270  60c8              STR      r0,[r1,#0xc]
;;;267      MDR_RST_CLK->PER_CLOCK = ClockData.PER_CLOCK;
000272  4871              LDR      r0,|L1.1080|
000274  6880              LDR      r0,[r0,#8]  ; ClockData
000276  61c8              STR      r0,[r1,#0x1c]
;;;268    #if defined (USE_MDR32F9Q1_Rev0) || defined (USE_MDR32F9Q1_Rev1)
;;;269      MDR_EBC->CONTROL   = ClockData.EBC_CONTROL;
000278  486f              LDR      r0,|L1.1080|
00027a  68c0              LDR      r0,[r0,#0xc]  ; ClockData
00027c  4970              LDR      r1,|L1.1088|
00027e  6548              STR      r0,[r1,#0x54]
;;;270    #endif
;;;271    }
000280  4770              BX       lr
;;;272    
                          ENDP

                  STANDBYMode_WAKEUP PROC
;;;282    *******************************************************************************/
;;;283    void STANDBYMode_WAKEUP(void)
000282  b510              PUSH     {r4,lr}
;;;284    {
;;;285      /* Print the header */
;;;286      LCD_CLS();
000284  f7fffffe          BL       LCD_CLS
;;;287      CurrentMethod = MET_AND;
000288  2004              MOVS     r0,#4
00028a  496e              LDR      r1,|L1.1092|
00028c  7008              STRB     r0,[r1,#0]
;;;288      CurrentFont = &Font_6x8;
00028e  486e              LDR      r0,|L1.1096|
000290  496e              LDR      r1,|L1.1100|
000292  6008              STR      r0,[r1,#0]  ; CurrentFont
;;;289      DisplayMenuTitle("STANDBY. Exit: WAKEUP");
000294  a06e              ADR      r0,|L1.1104|
000296  f7fffffe          BL       DisplayMenuTitle
;;;290      WAIT_UNTIL_KEY_RELEASED(SEL);
00029a  bf00              NOP      
                  |L1.668|
00029c  f7fffffe          BL       GetKey
0002a0  2800              CMP      r0,#0
0002a2  d0fb              BEQ      |L1.668|
;;;291    
;;;292      LCD_PUTS(0, LineMessage1, "                    ");
0002a4  a270              ADR      r2,|L1.1128|
0002a6  210c              MOVS     r1,#0xc
0002a8  2000              MOVS     r0,#0
0002aa  f7fffffe          BL       LCD_PUTS
;;;293      LCD_PUTS(0, LineMessage2, "                    ");
0002ae  a26e              ADR      r2,|L1.1128|
0002b0  2116              MOVS     r1,#0x16
0002b2  2000              MOVS     r0,#0
0002b4  f7fffffe          BL       LCD_PUTS
;;;294      LCD_PUTS(0, LineMessage3, "MCU in STANDBY Mode ");
0002b8  a271              ADR      r2,|L1.1152|
0002ba  2120              MOVS     r1,#0x20
0002bc  2000              MOVS     r0,#0
0002be  f7fffffe          BL       LCD_PUTS
;;;295      LCD_PUTS(0, LineMessage4, "To exit press Wakeup");
0002c2  a275              ADR      r2,|L1.1176|
0002c4  212a              MOVS     r1,#0x2a
0002c6  2000              MOVS     r0,#0
0002c8  f7fffffe          BL       LCD_PUTS
;;;296      LCD_PUTS(0, LineMessage5, "                     ");
0002cc  a278              ADR      r2,|L1.1200|
0002ce  2134              MOVS     r1,#0x34
0002d0  2000              MOVS     r0,#0
0002d2  f7fffffe          BL       LCD_PUTS
;;;297    
;;;298      /* Request to enter STANDBY mode */
;;;299      POWER_EnterSTANDBYMode();
0002d6  f7fffffe          BL       POWER_EnterSTANDBYMode
;;;300    }
0002da  bd10              POP      {r4,pc}
;;;301    
                          ENDP

                  STANDBYMode_RTCAlarm PROC
;;;311    *******************************************************************************/
;;;312    void STANDBYMode_RTCAlarm(void)
0002dc  b510              PUSH     {r4,lr}
;;;313    {
;;;314      /* Print the header */
;;;315      LCD_CLS();
0002de  f7fffffe          BL       LCD_CLS
;;;316      CurrentMethod = MET_AND;
0002e2  2004              MOVS     r0,#4
0002e4  4957              LDR      r1,|L1.1092|
0002e6  7008              STRB     r0,[r1,#0]
;;;317      CurrentFont = &Font_6x8;
0002e8  4857              LDR      r0,|L1.1096|
0002ea  4958              LDR      r1,|L1.1100|
0002ec  6008              STR      r0,[r1,#0]  ; CurrentFont
;;;318      DisplayMenuTitle("STANDBY. Exit: Alarm");
0002ee  a076              ADR      r0,|L1.1224|
0002f0  f7fffffe          BL       DisplayMenuTitle
;;;319      WAIT_UNTIL_KEY_RELEASED(SEL);
0002f4  bf00              NOP      
                  |L1.758|
0002f6  f7fffffe          BL       GetKey
0002fa  2800              CMP      r0,#0
0002fc  d0fb              BEQ      |L1.758|
;;;320    
;;;321      if((MDR_BKP->REG_00 != 0x1234) || (MDR_BKP->RTC_PRL != RTC_PRESCALER_VALUE))
0002fe  4878              LDR      r0,|L1.1248|
000300  6800              LDR      r0,[r0,#0]
000302  f5a05190          SUB      r1,r0,#0x1200
000306  3934              SUBS     r1,r1,#0x34
000308  d104              BNE      |L1.788|
00030a  4875              LDR      r0,|L1.1248|
00030c  6c80              LDR      r0,[r0,#0x48]
00030e  f5b04f00          CMP      r0,#0x8000
000312  d025              BEQ      |L1.864|
                  |L1.788|
;;;322      {
;;;323        LCD_PUTS(0, LineMessage1, "RTC is not configured");
000314  a273              ADR      r2,|L1.1252|
000316  210c              MOVS     r1,#0xc
000318  2000              MOVS     r0,#0
00031a  f7fffffe          BL       LCD_PUTS
;;;324        LCD_PUTS(0, LineMessage2, "Please, use the ");
00031e  a277              ADR      r2,|L1.1276|
000320  2116              MOVS     r1,#0x16
000322  2000              MOVS     r0,#0
000324  f7fffffe          BL       LCD_PUTS
;;;325        LCD_PUTS(0, LineMessage3, "Time Adjust menu and ");
000328  a279              ADR      r2,|L1.1296|
00032a  2120              MOVS     r1,#0x20
00032c  2000              MOVS     r0,#0
00032e  f7fffffe          BL       LCD_PUTS
;;;326        LCD_PUTS(0, LineMessage4, "Alarm Adjust menu to ");
000332  a27d              ADR      r2,|L1.1320|
000334  212a              MOVS     r1,#0x2a
000336  2000              MOVS     r0,#0
000338  f7fffffe          BL       LCD_PUTS
;;;327        LCD_PUTS(0, LineMessage5, "set the Alarm time. ");
00033c  a280              ADR      r2,|L1.1344|
00033e  2134              MOVS     r1,#0x34
000340  2000              MOVS     r0,#0
000342  f7fffffe          BL       LCD_PUTS
;;;328        WAIT_UNTIL_KEY_PRESSED(SEL);
000346  bf00              NOP      
                  |L1.840|
000348  f7fffffe          BL       GetKey
00034c  2800              CMP      r0,#0
00034e  d1fb              BNE      |L1.840|
;;;329        WAIT_UNTIL_KEY_RELEASED(SEL);
000350  bf00              NOP      
                  |L1.850|
000352  f7fffffe          BL       GetKey
000356  2800              CMP      r0,#0
000358  d0fb              BEQ      |L1.850|
;;;330    
;;;331        /* Display the menu */
;;;332        DisplayMenu();
00035a  f7fffffe          BL       DisplayMenu
                  |L1.862|
;;;333        return;
;;;334      }
;;;335    
;;;336      LCD_PUTS(0, LineMessage1, "                    ");
;;;337      LCD_PUTS(0, LineMessage2, "                    ");
;;;338      LCD_PUTS(0, LineMessage3, " MCU in STANDBY Mode");
;;;339      LCD_PUTS(0, LineMessage4, " Wait For RTC Alarm ");
;;;340      LCD_PUTS(0, LineMessage5, "                     ");
;;;341    
;;;342      /* Request to enter STANDBY mode */
;;;343      POWER_EnterSTANDBYMode();
;;;344    }
00035e  bd10              POP      {r4,pc}
                  |L1.864|
000360  a241              ADR      r2,|L1.1128|
000362  210c              MOVS     r1,#0xc               ;336
000364  2000              MOVS     r0,#0                 ;336
000366  f7fffffe          BL       LCD_PUTS
00036a  a23f              ADR      r2,|L1.1128|
00036c  2116              MOVS     r1,#0x16              ;337
00036e  2000              MOVS     r0,#0                 ;337
000370  f7fffffe          BL       LCD_PUTS
000374  a278              ADR      r2,|L1.1368|
000376  2120              MOVS     r1,#0x20              ;338
000378  2000              MOVS     r0,#0                 ;338
00037a  f7fffffe          BL       LCD_PUTS
00037e  a27c              ADR      r2,|L1.1392|
000380  212a              MOVS     r1,#0x2a              ;339
000382  2000              MOVS     r0,#0                 ;339
000384  f7fffffe          BL       LCD_PUTS
000388  a249              ADR      r2,|L1.1200|
00038a  2134              MOVS     r1,#0x34              ;340
00038c  2000              MOVS     r0,#0                 ;340
00038e  f7fffffe          BL       LCD_PUTS
000392  f7fffffe          BL       POWER_EnterSTANDBYMode
000396  bf00              NOP      
000398  e7e1              B        |L1.862|
;;;345    
                          ENDP

                  STOPMode_RTCAlarm PROC
;;;353    *******************************************************************************/
;;;354    void STOPMode_RTCAlarm(void)
00039a  b510              PUSH     {r4,lr}
;;;355    {
;;;356      uint32_t tmp;
;;;357    
;;;358      /* Print the header */
;;;359      LCD_CLS();
00039c  f7fffffe          BL       LCD_CLS
;;;360      CurrentMethod = MET_AND;
0003a0  2004              MOVS     r0,#4
0003a2  4928              LDR      r1,|L1.1092|
0003a4  7008              STRB     r0,[r1,#0]
;;;361      CurrentFont = &Font_6x8;
0003a6  4828              LDR      r0,|L1.1096|
0003a8  4928              LDR      r1,|L1.1100|
0003aa  6008              STR      r0,[r1,#0]  ; CurrentFont
;;;362      DisplayMenuTitle("STOP. Exit: Alarm");
0003ac  a076              ADR      r0,|L1.1416|
0003ae  f7fffffe          BL       DisplayMenuTitle
;;;363      WAIT_UNTIL_KEY_RELEASED(SEL);
0003b2  bf00              NOP      
                  |L1.948|
0003b4  f7fffffe          BL       GetKey
0003b8  2800              CMP      r0,#0
0003ba  d0fb              BEQ      |L1.948|
;;;364    
;;;365      if((MDR_BKP->REG_00 != 0x1234) || (MDR_BKP->RTC_PRL != RTC_PRESCALER_VALUE))
0003bc  4848              LDR      r0,|L1.1248|
0003be  6800              LDR      r0,[r0,#0]
0003c0  f5a05190          SUB      r1,r0,#0x1200
0003c4  3934              SUBS     r1,r1,#0x34
0003c6  d104              BNE      |L1.978|
0003c8  4845              LDR      r0,|L1.1248|
0003ca  6c80              LDR      r0,[r0,#0x48]
0003cc  f5b04f00          CMP      r0,#0x8000
0003d0  d017              BEQ      |L1.1026|
                  |L1.978|
;;;366      {
;;;367        LCD_PUTS(0, LineMessage1, "RTC is not configured");
0003d2  a244              ADR      r2,|L1.1252|
0003d4  210c              MOVS     r1,#0xc
0003d6  2000              MOVS     r0,#0
0003d8  f7fffffe          BL       LCD_PUTS
;;;368        LCD_PUTS(0, LineMessage2, "Please, use the ");
0003dc  a247              ADR      r2,|L1.1276|
0003de  2116              MOVS     r1,#0x16
0003e0  2000              MOVS     r0,#0
0003e2  f7fffffe          BL       LCD_PUTS
;;;369        LCD_PUTS(0, LineMessage3, "Time Adjust menu and ");
0003e6  a24a              ADR      r2,|L1.1296|
0003e8  2120              MOVS     r1,#0x20
0003ea  2000              MOVS     r0,#0
0003ec  f7fffffe          BL       LCD_PUTS
;;;370        LCD_PUTS(0, LineMessage4, "Alarm Adjust menu to ");
0003f0  a24d              ADR      r2,|L1.1320|
0003f2  212a              MOVS     r1,#0x2a
0003f4  2000              MOVS     r0,#0
0003f6  f7fffffe          BL       LCD_PUTS
;;;371        LCD_PUTS(0, LineMessage5, "set the Alarm time.");
0003fa  a268              ADR      r2,|L1.1436|
0003fc  2134              MOVS     r1,#0x34
0003fe  2000              MOVS     r0,#0
000400  e0d6              B        |L1.1456|
                  |L1.1026|
000402  e0e4              B        |L1.1486|
                  |L1.1028|
                          DCD      0x400a8000
                  |L1.1032|
                          DCD      PORTA_Data
                  |L1.1036|
                          DCD      0x400b0000
                  |L1.1040|
                          DCD      PORTB_Data
                  |L1.1044|
                          DCD      0x400b8000
                  |L1.1048|
                          DCD      PORTC_Data
                  |L1.1052|
                          DCD      0x400c0000
                  |L1.1056|
                          DCD      PORTD_Data
                  |L1.1060|
                          DCD      0x400c8000
                  |L1.1064|
                          DCD      PORTE_Data
                  |L1.1068|
                          DCD      0x400e8000
                  |L1.1072|
                          DCD      PORTF_Data
                  |L1.1076|
                          DCD      0x40058000
                  |L1.1080|
                          DCD      ClockData
                  |L1.1084|
                          DCD      0x40020000
                  |L1.1088|
                          DCD      0x400f0000
                  |L1.1092|
                          DCD      CurrentMethod
                  |L1.1096|
                          DCD      Font_6x8
                  |L1.1100|
                          DCD      CurrentFont
                  |L1.1104|
000450  5354414e          DCB      "STANDBY. Exit: WAKEUP",0
000454  4442592e
000458  20457869
00045c  743a2057
000460  414b4555
000464  5000    
000466  00                DCB      0
000467  00                DCB      0
                  |L1.1128|
000468  20202020          DCB      "                    ",0
00046c  20202020
000470  20202020
000474  20202020
000478  20202020
00047c  00      
00047d  00                DCB      0
00047e  00                DCB      0
00047f  00                DCB      0
                  |L1.1152|
000480  4d435520          DCB      "MCU in STANDBY Mode ",0
000484  696e2053
000488  54414e44
00048c  4259204d
000490  6f646520
000494  00      
000495  00                DCB      0
000496  00                DCB      0
000497  00                DCB      0
                  |L1.1176|
000498  546f2065          DCB      "To exit press Wakeup",0
00049c  78697420
0004a0  70726573
0004a4  73205761
0004a8  6b657570
0004ac  00      
0004ad  00                DCB      0
0004ae  00                DCB      0
0004af  00                DCB      0
                  |L1.1200|
0004b0  20202020          DCB      "                     ",0
0004b4  20202020
0004b8  20202020
0004bc  20202020
0004c0  20202020
0004c4  2000    
0004c6  00                DCB      0
0004c7  00                DCB      0
                  |L1.1224|
0004c8  5354414e          DCB      "STANDBY. Exit: Alarm",0
0004cc  4442592e
0004d0  20457869
0004d4  743a2041
0004d8  6c61726d
0004dc  00      
0004dd  00                DCB      0
0004de  00                DCB      0
0004df  00                DCB      0
                  |L1.1248|
                          DCD      0x400d8000
                  |L1.1252|
0004e4  52544320          DCB      "RTC is not configured",0
0004e8  6973206e
0004ec  6f742063
0004f0  6f6e6669
0004f4  67757265
0004f8  6400    
0004fa  00                DCB      0
0004fb  00                DCB      0
                  |L1.1276|
0004fc  506c6561          DCB      "Please, use the ",0
000500  73652c20
000504  75736520
000508  74686520
00050c  00      
00050d  00                DCB      0
00050e  00                DCB      0
00050f  00                DCB      0
                  |L1.1296|
000510  54696d65          DCB      "Time Adjust menu and ",0
000514  2041646a
000518  75737420
00051c  6d656e75
000520  20616e64
000524  2000    
000526  00                DCB      0
000527  00                DCB      0
                  |L1.1320|
000528  416c6172          DCB      "Alarm Adjust menu to ",0
00052c  6d204164
000530  6a757374
000534  206d656e
000538  7520746f
00053c  2000    
00053e  00                DCB      0
00053f  00                DCB      0
                  |L1.1344|
000540  73657420          DCB      "set the Alarm time. ",0
000544  74686520
000548  416c6172
00054c  6d207469
000550  6d652e20
000554  00      
000555  00                DCB      0
000556  00                DCB      0
000557  00                DCB      0
                  |L1.1368|
000558  204d4355          DCB      " MCU in STANDBY Mode",0
00055c  20696e20
000560  5354414e
000564  44425920
000568  4d6f6465
00056c  00      
00056d  00                DCB      0
00056e  00                DCB      0
00056f  00                DCB      0
                  |L1.1392|
000570  20576169          DCB      " Wait For RTC Alarm ",0
000574  7420466f
000578  72205254
00057c  4320416c
000580  61726d20
000584  00      
000585  00                DCB      0
000586  00                DCB      0
000587  00                DCB      0
                  |L1.1416|
000588  53544f50          DCB      "STOP. Exit: Alarm",0
00058c  2e204578
000590  69743a20
000594  416c6172
000598  6d00    
00059a  00                DCB      0
00059b  00                DCB      0
                  |L1.1436|
00059c  73657420          DCB      "set the Alarm time.",0
0005a0  74686520
0005a4  416c6172
0005a8  6d207469
0005ac  6d652e00
                  |L1.1456|
0005b0  f7fffffe          BL       LCD_PUTS
;;;372        WAIT_UNTIL_KEY_PRESSED(SEL);
0005b4  bf00              NOP      
                  |L1.1462|
0005b6  f7fffffe          BL       GetKey
0005ba  2800              CMP      r0,#0
0005bc  d1fb              BNE      |L1.1462|
;;;373        WAIT_UNTIL_KEY_RELEASED(SEL);
0005be  bf00              NOP      
                  |L1.1472|
0005c0  f7fffffe          BL       GetKey
0005c4  2800              CMP      r0,#0
0005c6  d0fb              BEQ      |L1.1472|
;;;374    
;;;375        /* Display the menu */
;;;376        DisplayMenu();
0005c8  f7fffffe          BL       DisplayMenu
                  |L1.1484|
;;;377        return;
;;;378      }
;;;379    
;;;380      STOPModeStatus = 1;
;;;381    
;;;382      LCD_PUTS(0, LineMessage1, "                     ");
;;;383      LCD_PUTS(0, LineMessage2, "                     ");
;;;384      LCD_PUTS(0, LineMessage3, "  MCU in STOP Mode   ");
;;;385      LCD_PUTS(0, LineMessage4, " Wait For RTC Alarm  ");
;;;386      LCD_PUTS(0, LineMessage5, "                     ");
;;;387    
;;;388      /* Save the all PORTs current configuration, then
;;;389       * configure all PORTs for low power consumption */
;;;390      PORT_SaveConfig();
;;;391    
;;;392      /* Save the Power and Clock current configuration */
;;;393      Clock_SaveConfig();
;;;394    
;;;395      /* Enable SLEEPONEXIT mode */
;;;396      tmp = SCB->SCR;
;;;397      tmp |= SCB_SCR_SLEEPONEXIT_Msk;
;;;398      SCB->SCR = tmp;
;;;399    
;;;400      /* Request to enter STOP mode with regulator ON */
;;;401      POWER_EnterSTOPMode(ENABLE, POWER_STOPentry_WFI);
;;;402    
;;;403      /* Restore the Power and Clock */
;;;404      Clock_RestoreConfig();
;;;405    
;;;406      /* Restore the PORTs Configurations*/
;;;407      PORT_RestoreConfig();
;;;408    
;;;409      LCD_PUTS(0, LineMessage3, "Wake-Up by RTC Alarm");
;;;410      LCD_PUTS(0, LineMessage4, "Press SEL to continue");
;;;411    
;;;412      /* Wait for SEL to continue */
;;;413      WAIT_UNTIL_KEY_PRESSED(SEL);
;;;414      WAIT_UNTIL_KEY_RELEASED(SEL);
;;;415    
;;;416      /* Display the previous menu */
;;;417      DisplayMenu();
;;;418    }
0005cc  bd10              POP      {r4,pc}
                  |L1.1486|
0005ce  2001              MOVS     r0,#1                 ;380
0005d0  4923              LDR      r1,|L1.1632|
0005d2  6008              STR      r0,[r1,#0]            ;380  ; STOPModeStatus
0005d4  f2af1228          ADR      r2,|L1.1200|
0005d8  210c              MOVS     r1,#0xc               ;382
0005da  2000              MOVS     r0,#0                 ;382
0005dc  f7fffffe          BL       LCD_PUTS
0005e0  f2af1234          ADR      r2,|L1.1200|
0005e4  2116              MOVS     r1,#0x16              ;383
0005e6  2000              MOVS     r0,#0                 ;383
0005e8  f7fffffe          BL       LCD_PUTS
0005ec  a21d              ADR      r2,|L1.1636|
0005ee  2120              MOVS     r1,#0x20              ;384
0005f0  2000              MOVS     r0,#0                 ;384
0005f2  f7fffffe          BL       LCD_PUTS
0005f6  a221              ADR      r2,|L1.1660|
0005f8  212a              MOVS     r1,#0x2a              ;385
0005fa  2000              MOVS     r0,#0                 ;385
0005fc  f7fffffe          BL       LCD_PUTS
000600  f2af1254          ADR      r2,|L1.1200|
000604  2134              MOVS     r1,#0x34              ;386
000606  2000              MOVS     r0,#0                 ;386
000608  f7fffffe          BL       LCD_PUTS
00060c  f7fffffe          BL       PORT_SaveConfig
000610  f7fffffe          BL       Clock_SaveConfig
000614  481f              LDR      r0,|L1.1684|
000616  6804              LDR      r4,[r0,#0]            ;396
000618  f0440402          ORR      r4,r4,#2              ;397
00061c  6004              STR      r4,[r0,#0]            ;398
00061e  2101              MOVS     r1,#1                 ;401
000620  4608              MOV      r0,r1                 ;401
000622  f7fffffe          BL       POWER_EnterSTOPMode
000626  f7fffffe          BL       Clock_RestoreConfig
00062a  f7fffffe          BL       PORT_RestoreConfig
00062e  a21a              ADR      r2,|L1.1688|
000630  2120              MOVS     r1,#0x20              ;409
000632  2000              MOVS     r0,#0                 ;409
000634  f7fffffe          BL       LCD_PUTS
000638  a21d              ADR      r2,|L1.1712|
00063a  212a              MOVS     r1,#0x2a              ;410
00063c  2000              MOVS     r0,#0                 ;410
00063e  f7fffffe          BL       LCD_PUTS
000642  bf00              NOP                            ;413
                  |L1.1604|
000644  f7fffffe          BL       GetKey
000648  2800              CMP      r0,#0                 ;413
00064a  d1fb              BNE      |L1.1604|
00064c  bf00              NOP                            ;414
                  |L1.1614|
00064e  f7fffffe          BL       GetKey
000652  2800              CMP      r0,#0                 ;414
000654  d0fb              BEQ      |L1.1614|
000656  f7fffffe          BL       DisplayMenu
00065a  bf00              NOP      
00065c  e7b6              B        |L1.1484|
;;;419    
                          ENDP

00065e  0000              DCW      0x0000
                  |L1.1632|
                          DCD      STOPModeStatus
                  |L1.1636|
000664  20204d43          DCB      "  MCU in STOP Mode   ",0
000668  5520696e
00066c  2053544f
000670  50204d6f
000674  64652020
000678  2000    
00067a  00                DCB      0
00067b  00                DCB      0
                  |L1.1660|
00067c  20576169          DCB      " Wait For RTC Alarm  ",0
000680  7420466f
000684  72205254
000688  4320416c
00068c  61726d20
000690  2000    
000692  00                DCB      0
000693  00                DCB      0
                  |L1.1684|
                          DCD      0xe000ed10
                  |L1.1688|
000698  57616b65          DCB      "Wake-Up by RTC Alarm",0
00069c  2d557020
0006a0  62792052
0006a4  54432041
0006a8  6c61726d
0006ac  00      
0006ad  00                DCB      0
0006ae  00                DCB      0
0006af  00                DCB      0
                  |L1.1712|
0006b0  50726573          DCB      "Press SEL to continue",0
0006b4  73205345
0006b8  4c20746f
0006bc  20636f6e
0006c0  74696e75
0006c4  6500    
0006c6  00                DCB      0
0006c7  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  PortInitStructure
                          %        12
                  PORTA_Data
                          %        28
                  PORTB_Data
                          %        28
                  PORTC_Data
                          %        28
                  PORTD_Data
                          %        28
                  PORTE_Data
                          %        28
                  PORTF_Data
                          %        28
                  ClockData
                          %        16

;*** Start embedded assembler ***

#line 1 "..\\..\\src\\Menu_lowpower.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_Menu_lowpower_c_5be289ab____REV16|
#line 129 "..\\..\\..\\..\\Libraries\\CMSIS\\CM3\\CoreSupport\\core_cmInstr.h"
|__asm___15_Menu_lowpower_c_5be289ab____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_Menu_lowpower_c_5be289ab____REVSH|
#line 144
|__asm___15_Menu_lowpower_c_5be289ab____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
