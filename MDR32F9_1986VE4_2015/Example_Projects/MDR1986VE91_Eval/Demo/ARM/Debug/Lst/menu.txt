; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Debug\Exe\menu.o --asm_dir=.\Debug\Lst\ --list_dir=.\Debug\Lst\ --depend=.\Debug\Exe\menu.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc\USB_Library -I..\..\inc -I..\..\Config -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\Debug\Exe\menu.crf ..\..\src\Menu.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  DisplayMenuItemString PROC
;;;198    *******************************************************************************/
;;;199    void DisplayMenuItemString(uint32_t y, ucint8_t *ptr)
000000  b570              PUSH     {r4-r6,lr}
;;;200    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;201      uint32_t x;
;;;202    
;;;203      LCD_PUTS(0, y, "                                        ");
000006  b2e1              UXTB     r1,r4
000008  a2d7              ADR      r2,|L1.872|
00000a  2000              MOVS     r0,#0
00000c  f7fffffe          BL       LCD_PUTS
;;;204      x = (MAX_X - (CurrentFont->Width * strlen((const char *)ptr))) / 2;
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       strlen
000016  49df              LDR      r1,|L1.916|
000018  6809              LDR      r1,[r1,#0]  ; CurrentFont
00001a  6849              LDR      r1,[r1,#4]
00001c  4348              MULS     r0,r1,r0
00001e  f1c0007f          RSB      r0,r0,#0x7f
000022  0846              LSRS     r6,r0,#1
;;;205      LCD_PUTS(x, y, ptr);
000024  b2e1              UXTB     r1,r4
000026  b2f0              UXTB     r0,r6
000028  462a              MOV      r2,r5
00002a  f7fffffe          BL       LCD_PUTS
;;;206    }
00002e  bd70              POP      {r4-r6,pc}
;;;207    
                          ENDP

                  IdleFunc PROC
;;;216    *******************************************************************************/
;;;217    void IdleFunc(void)
000030  4770              BX       lr
;;;218    {
;;;219    }
;;;220    
                          ENDP

                  DisplayMenuTitle PROC
;;;377    *******************************************************************************/
;;;378    void DisplayMenuTitle(ucint8_t *ptr)
000032  e92d41f0          PUSH     {r4-r8,lr}
;;;379    {
000036  4604              MOV      r4,r0
;;;380      uint32_t x, y;
;;;381      sFONT *OldFont = CurrentFont;
000038  48d6              LDR      r0,|L1.916|
00003a  6807              LDR      r7,[r0,#0]  ; CurrentFont
;;;382      LCD_Method OldMethod = CurrentMethod;
00003c  48d6              LDR      r0,|L1.920|
00003e  f8908000          LDRB     r8,[r0,#0]  ; CurrentMethod
;;;383    
;;;384      CurrentFont = &Font_6x8;
000042  48d6              LDR      r0,|L1.924|
000044  49d3              LDR      r1,|L1.916|
000046  6008              STR      r0,[r1,#0]  ; CurrentFont
;;;385      CurrentMethod = MET_AND;
000048  2004              MOVS     r0,#4
00004a  49d3              LDR      r1,|L1.920|
00004c  7008              STRB     r0,[r1,#0]
;;;386    
;;;387      x = (MAX_X - (CurrentFont->Width * strlen((const char *)ptr))) / 2;
00004e  4620              MOV      r0,r4
000050  f7fffffe          BL       strlen
000054  49cf              LDR      r1,|L1.916|
000056  6809              LDR      r1,[r1,#0]  ; CurrentFont
000058  6849              LDR      r1,[r1,#4]
00005a  4348              MULS     r0,r1,r0
00005c  f1c0007f          RSB      r0,r0,#0x7f
000060  0846              LSRS     r6,r0,#1
;;;388      LCD_PUTS(x, 0, ptr);
000062  b2f0              UXTB     r0,r6
000064  4622              MOV      r2,r4
000066  2100              MOVS     r1,#0
000068  f7fffffe          BL       LCD_PUTS
;;;389    
;;;390      y = CurrentFont->Height + 1;
00006c  48c9              LDR      r0,|L1.916|
00006e  6800              LDR      r0,[r0,#0]  ; CurrentFont
000070  6800              LDR      r0,[r0,#0]
000072  1c45              ADDS     r5,r0,#1
;;;391      CurrentMethod = MET_OR;
000074  2000              MOVS     r0,#0
000076  49c8              LDR      r1,|L1.920|
000078  7008              STRB     r0,[r1,#0]
;;;392      LCD_Line(0, y, MAX_X, y);
00007a  462b              MOV      r3,r5
00007c  227f              MOVS     r2,#0x7f
00007e  4629              MOV      r1,r5
000080  f7fffffe          BL       LCD_Line
;;;393    
;;;394      CurrentFont = OldFont;
000084  48c3              LDR      r0,|L1.916|
000086  6007              STR      r7,[r0,#0]  ; CurrentFont
;;;395      CurrentMethod = OldMethod;
000088  48c3              LDR      r0,|L1.920|
00008a  f8808000          STRB     r8,[r0,#0]
;;;396    }
00008e  e8bd81f0          POP      {r4-r8,pc}
;;;397    
                          ENDP

                  DisplayMenu PROC
;;;419    *******************************************************************************/
;;;420    void DisplayMenu(void)
000092  b570              PUSH     {r4-r6,lr}
;;;421    {
;;;422      uint32_t y, index;
;;;423      tMenuItem psMenuItem2;
;;;424    
;;;425      LCD_CLS();
000094  f7fffffe          BL       LCD_CLS
;;;426      CurrentMethod = MET_AND;
000098  2004              MOVS     r0,#4
00009a  49bf              LDR      r1,|L1.920|
00009c  7008              STRB     r0,[r1,#0]
;;;427    
;;;428      /* Display menu header */
;;;429      DisplayMenuTitle(psCurrentMenu->psTitle);
00009e  49c0              LDR      r1,|L1.928|
0000a0  6809              LDR      r1,[r1,#0]  ; psCurrentMenu
0000a2  6808              LDR      r0,[r1,#0]
0000a4  f7fffffe          BL       DisplayMenuTitle
;;;430      /* Display menu items */
;;;431      for (index = 0, y = CurrentFont->Height + 4;
0000a8  2400              MOVS     r4,#0
0000aa  48ba              LDR      r0,|L1.916|
0000ac  6800              LDR      r0,[r0,#0]  ; CurrentFont
0000ae  6800              LDR      r0,[r0,#0]
0000b0  1d05              ADDS     r5,r0,#4
0000b2  e010              B        |L1.214|
                  |L1.180|
;;;432           index < psCurrentMenu->nItems;
;;;433           index++, y += CurrentFont->Height + 2)
;;;434      {
;;;435        psMenuItem2 = &(psCurrentMenu->psItems[index]);
0000b4  48ba              LDR      r0,|L1.928|
0000b6  6800              LDR      r0,[r0,#0]  ; psCurrentMenu
0000b8  6840              LDR      r0,[r0,#4]
0000ba  eb040144          ADD      r1,r4,r4,LSL #1
0000be  eb000681          ADD      r6,r0,r1,LSL #2
;;;436        DisplayMenuItemString(y, psMenuItem2->psTitle);
0000c2  4628              MOV      r0,r5
0000c4  6831              LDR      r1,[r6,#0]
0000c6  f7fffffe          BL       DisplayMenuItemString
0000ca  1c64              ADDS     r4,r4,#1              ;433
0000cc  48b1              LDR      r0,|L1.916|
0000ce  6800              LDR      r0,[r0,#0]            ;433  ; CurrentFont
0000d0  6800              LDR      r0,[r0,#0]            ;433
0000d2  1c80              ADDS     r0,r0,#2              ;433
0000d4  4405              ADD      r5,r5,r0              ;433
                  |L1.214|
0000d6  48b2              LDR      r0,|L1.928|
0000d8  6800              LDR      r0,[r0,#0]            ;432  ; psCurrentMenu
0000da  6880              LDR      r0,[r0,#8]            ;432
0000dc  42a0              CMP      r0,r4                 ;432
0000de  d8e9              BHI      |L1.180|
;;;437      }
;;;438    
;;;439      /* Determine current item */
;;;440      psMenuItem = &(psCurrentMenu->psItems[MenuItemIndex]);
0000e0  48af              LDR      r0,|L1.928|
0000e2  6800              LDR      r0,[r0,#0]  ; psCurrentMenu
0000e4  6840              LDR      r0,[r0,#4]
0000e6  49af              LDR      r1,|L1.932|
0000e8  6809              LDR      r1,[r1,#0]  ; MenuItemIndex
0000ea  eb010141          ADD      r1,r1,r1,LSL #1
0000ee  eb000081          ADD      r0,r0,r1,LSL #2
0000f2  49ad              LDR      r1,|L1.936|
0000f4  6008              STR      r0,[r1,#0]  ; psMenuItem
;;;441      CurrentMethod = MET_NOT_XOR;
0000f6  2003              MOVS     r0,#3
0000f8  49a7              LDR      r1,|L1.920|
0000fa  7008              STRB     r0,[r1,#0]
;;;442      LCD_PUTS(0, (MenuItemIndex * (CurrentFont->Height + 2) + CurrentFont->Height + 4), "                                        ");
0000fc  48a5              LDR      r0,|L1.916|
0000fe  6800              LDR      r0,[r0,#0]  ; CurrentFont
000100  6802              LDR      r2,[r0,#0]
000102  48a4              LDR      r0,|L1.916|
000104  6800              LDR      r0,[r0,#0]  ; CurrentFont
000106  6800              LDR      r0,[r0,#0]
000108  1c80              ADDS     r0,r0,#2
00010a  4ba6              LDR      r3,|L1.932|
00010c  681b              LDR      r3,[r3,#0]  ; MenuItemIndex
00010e  fb032000          MLA      r0,r3,r0,r2
000112  1d00              ADDS     r0,r0,#4
000114  b2c1              UXTB     r1,r0
000116  a294              ADR      r2,|L1.872|
000118  2000              MOVS     r0,#0
00011a  f7fffffe          BL       LCD_PUTS
;;;443    }
00011e  bd70              POP      {r4-r6,pc}
;;;444    
                          ENDP

                  SelFunc PROC
;;;227    *******************************************************************************/
;;;228    void SelFunc(void)
000120  b510              PUSH     {r4,lr}
;;;229    {
;;;230      psCurrentMenuItem = psMenuItem;
000122  48a1              LDR      r0,|L1.936|
000124  6800              LDR      r0,[r0,#0]  ; psMenuItem
000126  49a1              LDR      r1,|L1.940|
000128  6008              STR      r0,[r1,#0]  ; psCurrentMenuItem
;;;231    
;;;232      if(psMenuItem->psSubMenu != NULL)
00012a  489f              LDR      r0,|L1.936|
00012c  6800              LDR      r0,[r0,#0]  ; psMenuItem
00012e  6880              LDR      r0,[r0,#8]
000130  b300              CBZ      r0,|L1.372|
;;;233      {
;;;234        MenuItemIndex = 0;
000132  2000              MOVS     r0,#0
000134  499b              LDR      r1,|L1.932|
000136  6008              STR      r0,[r1,#0]  ; MenuItemIndex
;;;235        psCurrentMenu = psMenuItem->psSubMenu;
000138  489b              LDR      r0,|L1.936|
00013a  6800              LDR      r0,[r0,#0]  ; psMenuItem
00013c  6880              LDR      r0,[r0,#8]
00013e  4998              LDR      r1,|L1.928|
000140  6008              STR      r0,[r1,#0]  ; psCurrentMenu
;;;236        psMenuItem = &(psCurrentMenu->psItems)[MenuItemIndex];
000142  4608              MOV      r0,r1
000144  6800              LDR      r0,[r0,#0]  ; psCurrentMenu
000146  6840              LDR      r0,[r0,#4]
000148  4996              LDR      r1,|L1.932|
00014a  6809              LDR      r1,[r1,#0]  ; MenuItemIndex
00014c  eb010141          ADD      r1,r1,r1,LSL #1
000150  eb000081          ADD      r0,r0,r1,LSL #2
000154  4994              LDR      r1,|L1.936|
000156  6008              STR      r0,[r1,#0]  ; psMenuItem
;;;237        DisplayMenu();
000158  f7fffffe          BL       DisplayMenu
;;;238        nMenuLevel++;
00015c  4894              LDR      r0,|L1.944|
00015e  6800              LDR      r0,[r0,#0]  ; nMenuLevel
000160  1c40              ADDS     r0,r0,#1
000162  4993              LDR      r1,|L1.944|
000164  6008              STR      r0,[r1,#0]  ; nMenuLevel
;;;239        psPrevMenu[nMenuLevel] = psCurrentMenu;
000166  488e              LDR      r0,|L1.928|
000168  6800              LDR      r0,[r0,#0]  ; psCurrentMenu
00016a  4992              LDR      r1,|L1.948|
00016c  4a90              LDR      r2,|L1.944|
00016e  6812              LDR      r2,[r2,#0]  ; nMenuLevel
000170  f8410022          STR      r0,[r1,r2,LSL #2]
                  |L1.372|
;;;240      }
;;;241      psCurrentMenuItem->pfMenuFunc();
000174  498d              LDR      r1,|L1.940|
000176  6809              LDR      r1,[r1,#0]  ; psCurrentMenuItem
000178  6848              LDR      r0,[r1,#4]
00017a  4780              BLX      r0
;;;242    }
00017c  bd10              POP      {r4,pc}
;;;243    
                          ENDP

                  UpFunc PROC
;;;250    *******************************************************************************/
;;;251    void UpFunc(void)
00017e  b510              PUSH     {r4,lr}
;;;252    {
;;;253      /* Display current menu item as non-selected */
;;;254      psMenuItem = &psCurrentMenu->psItems[MenuItemIndex];
000180  4887              LDR      r0,|L1.928|
000182  6800              LDR      r0,[r0,#0]  ; psCurrentMenu
000184  6840              LDR      r0,[r0,#4]
000186  4987              LDR      r1,|L1.932|
000188  6809              LDR      r1,[r1,#0]  ; MenuItemIndex
00018a  eb010141          ADD      r1,r1,r1,LSL #1
00018e  eb000081          ADD      r0,r0,r1,LSL #2
000192  4985              LDR      r1,|L1.936|
000194  6008              STR      r0,[r1,#0]  ; psMenuItem
;;;255      CurrentMethod = MET_AND;
000196  2004              MOVS     r0,#4
000198  497f              LDR      r1,|L1.920|
00019a  7008              STRB     r0,[r1,#0]
;;;256      DisplayMenuItemString((MenuItemIndex * (CurrentFont->Height + 2) + CurrentFont->Height + 4), psMenuItem->psTitle);
00019c  4a7d              LDR      r2,|L1.916|
00019e  6812              LDR      r2,[r2,#0]  ; CurrentFont
0001a0  6813              LDR      r3,[r2,#0]
0001a2  4a7c              LDR      r2,|L1.916|
0001a4  6812              LDR      r2,[r2,#0]  ; CurrentFont
0001a6  6812              LDR      r2,[r2,#0]
0001a8  1c92              ADDS     r2,r2,#2
0001aa  4c7e              LDR      r4,|L1.932|
0001ac  6824              LDR      r4,[r4,#0]  ; MenuItemIndex
0001ae  fb043202          MLA      r2,r4,r2,r3
0001b2  1d10              ADDS     r0,r2,#4
0001b4  4a7c              LDR      r2,|L1.936|
0001b6  6812              LDR      r2,[r2,#0]  ; psMenuItem
0001b8  6811              LDR      r1,[r2,#0]
0001ba  f7fffffe          BL       DisplayMenuItemString
;;;257    
;;;258      /* Determine new menu item (iteratively) */
;;;259      if(MenuItemIndex > 0)
0001be  4879              LDR      r0,|L1.932|
0001c0  6800              LDR      r0,[r0,#0]  ; MenuItemIndex
0001c2  b128              CBZ      r0,|L1.464|
;;;260      {
;;;261        MenuItemIndex--;
0001c4  4877              LDR      r0,|L1.932|
0001c6  6800              LDR      r0,[r0,#0]  ; MenuItemIndex
0001c8  1e40              SUBS     r0,r0,#1
0001ca  4976              LDR      r1,|L1.932|
0001cc  6008              STR      r0,[r1,#0]  ; MenuItemIndex
0001ce  e005              B        |L1.476|
                  |L1.464|
;;;262      }
;;;263      else
;;;264      {
;;;265        MenuItemIndex = psCurrentMenu->nItems - 1;
0001d0  4873              LDR      r0,|L1.928|
0001d2  6800              LDR      r0,[r0,#0]  ; psCurrentMenu
0001d4  6880              LDR      r0,[r0,#8]
0001d6  1e40              SUBS     r0,r0,#1
0001d8  4972              LDR      r1,|L1.932|
0001da  6008              STR      r0,[r1,#0]  ; MenuItemIndex
                  |L1.476|
;;;266      }
;;;267    
;;;268      /* Display new menu item as selected */
;;;269      psMenuItem = &psCurrentMenu->psItems[MenuItemIndex];
0001dc  4870              LDR      r0,|L1.928|
0001de  6800              LDR      r0,[r0,#0]  ; psCurrentMenu
0001e0  6840              LDR      r0,[r0,#4]
0001e2  4970              LDR      r1,|L1.932|
0001e4  6809              LDR      r1,[r1,#0]  ; MenuItemIndex
0001e6  eb010141          ADD      r1,r1,r1,LSL #1
0001ea  eb000081          ADD      r0,r0,r1,LSL #2
0001ee  496e              LDR      r1,|L1.936|
0001f0  6008              STR      r0,[r1,#0]  ; psMenuItem
;;;270      CurrentMethod = MET_NOT_XOR;
0001f2  2003              MOVS     r0,#3
0001f4  4968              LDR      r1,|L1.920|
0001f6  7008              STRB     r0,[r1,#0]
;;;271      LCD_PUTS(0, (MenuItemIndex * (CurrentFont->Height + 2) + CurrentFont->Height + 4), "                                        ");
0001f8  4866              LDR      r0,|L1.916|
0001fa  6800              LDR      r0,[r0,#0]  ; CurrentFont
0001fc  6802              LDR      r2,[r0,#0]
0001fe  4865              LDR      r0,|L1.916|
000200  6800              LDR      r0,[r0,#0]  ; CurrentFont
000202  6800              LDR      r0,[r0,#0]
000204  1c80              ADDS     r0,r0,#2
000206  4b67              LDR      r3,|L1.932|
000208  681b              LDR      r3,[r3,#0]  ; MenuItemIndex
00020a  fb032000          MLA      r0,r3,r0,r2
00020e  1d00              ADDS     r0,r0,#4
000210  b2c1              UXTB     r1,r0
000212  a255              ADR      r2,|L1.872|
000214  2000              MOVS     r0,#0
000216  f7fffffe          BL       LCD_PUTS
;;;272    }
00021a  bd10              POP      {r4,pc}
;;;273    
                          ENDP

                  DownFunc PROC
;;;280    *******************************************************************************/
;;;281    void DownFunc(void)
00021c  b510              PUSH     {r4,lr}
;;;282    {
;;;283      /* Display current menu item as non-selected */
;;;284      psMenuItem = &psCurrentMenu->psItems[MenuItemIndex];
00021e  4860              LDR      r0,|L1.928|
000220  6800              LDR      r0,[r0,#0]  ; psCurrentMenu
000222  6840              LDR      r0,[r0,#4]
000224  495f              LDR      r1,|L1.932|
000226  6809              LDR      r1,[r1,#0]  ; MenuItemIndex
000228  eb010141          ADD      r1,r1,r1,LSL #1
00022c  eb000081          ADD      r0,r0,r1,LSL #2
000230  495d              LDR      r1,|L1.936|
000232  6008              STR      r0,[r1,#0]  ; psMenuItem
;;;285      CurrentMethod = MET_AND;
000234  2004              MOVS     r0,#4
000236  4958              LDR      r1,|L1.920|
000238  7008              STRB     r0,[r1,#0]
;;;286    
;;;287      DisplayMenuItemString((MenuItemIndex * (CurrentFont->Height + 2) + CurrentFont->Height + 4), psMenuItem->psTitle);
00023a  4a56              LDR      r2,|L1.916|
00023c  6812              LDR      r2,[r2,#0]  ; CurrentFont
00023e  6813              LDR      r3,[r2,#0]
000240  4a54              LDR      r2,|L1.916|
000242  6812              LDR      r2,[r2,#0]  ; CurrentFont
000244  6812              LDR      r2,[r2,#0]
000246  1c92              ADDS     r2,r2,#2
000248  4c56              LDR      r4,|L1.932|
00024a  6824              LDR      r4,[r4,#0]  ; MenuItemIndex
00024c  fb043202          MLA      r2,r4,r2,r3
000250  1d10              ADDS     r0,r2,#4
000252  4a55              LDR      r2,|L1.936|
000254  6812              LDR      r2,[r2,#0]  ; psMenuItem
000256  6811              LDR      r1,[r2,#0]
000258  f7fffffe          BL       DisplayMenuItemString
;;;288    
;;;289      /* Determine new menu item (iteratively) */
;;;290      if(MenuItemIndex >= ((psCurrentMenu->nItems)-1))
00025c  4850              LDR      r0,|L1.928|
00025e  6800              LDR      r0,[r0,#0]  ; psCurrentMenu
000260  6880              LDR      r0,[r0,#8]
000262  1e40              SUBS     r0,r0,#1
000264  494f              LDR      r1,|L1.932|
000266  6809              LDR      r1,[r1,#0]  ; MenuItemIndex
000268  4288              CMP      r0,r1
00026a  d803              BHI      |L1.628|
;;;291      {
;;;292        MenuItemIndex = 0;
00026c  2000              MOVS     r0,#0
00026e  494d              LDR      r1,|L1.932|
000270  6008              STR      r0,[r1,#0]  ; MenuItemIndex
000272  e004              B        |L1.638|
                  |L1.628|
;;;293      }
;;;294      else
;;;295      {
;;;296        MenuItemIndex++;
000274  484b              LDR      r0,|L1.932|
000276  6800              LDR      r0,[r0,#0]  ; MenuItemIndex
000278  1c40              ADDS     r0,r0,#1
00027a  494a              LDR      r1,|L1.932|
00027c  6008              STR      r0,[r1,#0]  ; MenuItemIndex
                  |L1.638|
;;;297      }
;;;298      psMenuItem = &(psCurrentMenu->psItems[MenuItemIndex]);
00027e  4848              LDR      r0,|L1.928|
000280  6800              LDR      r0,[r0,#0]  ; psCurrentMenu
000282  6840              LDR      r0,[r0,#4]
000284  4947              LDR      r1,|L1.932|
000286  6809              LDR      r1,[r1,#0]  ; MenuItemIndex
000288  eb010141          ADD      r1,r1,r1,LSL #1
00028c  eb000081          ADD      r0,r0,r1,LSL #2
000290  4945              LDR      r1,|L1.936|
000292  6008              STR      r0,[r1,#0]  ; psMenuItem
;;;299    
;;;300      /* Display new menu item as selected */
;;;301      CurrentMethod = MET_NOT_XOR;
000294  2003              MOVS     r0,#3
000296  4940              LDR      r1,|L1.920|
000298  7008              STRB     r0,[r1,#0]
;;;302      LCD_PUTS(0, (MenuItemIndex * (CurrentFont->Height + 2) + CurrentFont->Height + 4), "                                        ");
00029a  483e              LDR      r0,|L1.916|
00029c  6800              LDR      r0,[r0,#0]  ; CurrentFont
00029e  6802              LDR      r2,[r0,#0]
0002a0  483c              LDR      r0,|L1.916|
0002a2  6800              LDR      r0,[r0,#0]  ; CurrentFont
0002a4  6800              LDR      r0,[r0,#0]
0002a6  1c80              ADDS     r0,r0,#2
0002a8  4b3e              LDR      r3,|L1.932|
0002aa  681b              LDR      r3,[r3,#0]  ; MenuItemIndex
0002ac  fb032000          MLA      r0,r3,r0,r2
0002b0  1d00              ADDS     r0,r0,#4
0002b2  b2c1              UXTB     r1,r0
0002b4  a22c              ADR      r2,|L1.872|
0002b6  2000              MOVS     r0,#0
0002b8  f7fffffe          BL       LCD_PUTS
;;;303    }
0002bc  bd10              POP      {r4,pc}
;;;304    
                          ENDP

                  ReturnFunc PROC
;;;311    *******************************************************************************/
;;;312    void ReturnFunc(void) {
0002be  b510              PUSH     {r4,lr}
;;;313      if(nMenuLevel == 0)
0002c0  483b              LDR      r0,|L1.944|
0002c2  6800              LDR      r0,[r0,#0]  ; nMenuLevel
0002c4  b920              CBNZ     r0,|L1.720|
;;;314      {
;;;315        nMenuLevel++;
0002c6  483a              LDR      r0,|L1.944|
0002c8  6800              LDR      r0,[r0,#0]  ; nMenuLevel
0002ca  1c40              ADDS     r0,r0,#1
0002cc  4938              LDR      r1,|L1.944|
0002ce  6008              STR      r0,[r1,#0]  ; nMenuLevel
                  |L1.720|
;;;316      }
;;;317    
;;;318      psCurrentMenu = psPrevMenu[nMenuLevel-1];
0002d0  4837              LDR      r0,|L1.944|
0002d2  6800              LDR      r0,[r0,#0]  ; nMenuLevel
0002d4  1e40              SUBS     r0,r0,#1
0002d6  4937              LDR      r1,|L1.948|
0002d8  f8510020          LDR      r0,[r1,r0,LSL #2]
0002dc  4930              LDR      r1,|L1.928|
0002de  6008              STR      r0,[r1,#0]  ; psCurrentMenu
;;;319      psMenuItem = &psCurrentMenu->psItems[0];
0002e0  4608              MOV      r0,r1
0002e2  6800              LDR      r0,[r0,#0]  ; psCurrentMenu
0002e4  6840              LDR      r0,[r0,#4]
0002e6  4930              LDR      r1,|L1.936|
0002e8  6008              STR      r0,[r1,#0]  ; psMenuItem
;;;320      MenuItemIndex = 0;
0002ea  2000              MOVS     r0,#0
0002ec  492d              LDR      r1,|L1.932|
0002ee  6008              STR      r0,[r1,#0]  ; MenuItemIndex
;;;321      nMenuLevel--;
0002f0  482f              LDR      r0,|L1.944|
0002f2  6800              LDR      r0,[r0,#0]  ; nMenuLevel
0002f4  1e40              SUBS     r0,r0,#1
0002f6  492e              LDR      r1,|L1.944|
0002f8  6008              STR      r0,[r1,#0]  ; nMenuLevel
;;;322    
;;;323      DisplayMenu();
0002fa  f7fffffe          BL       DisplayMenu
;;;324    }
0002fe  bd10              POP      {r4,pc}
;;;325    
                          ENDP

                  BackToMenuOnSel PROC
;;;332    *******************************************************************************/
;;;333    void BackToMenuOnSel(void)
000300  b510              PUSH     {r4,lr}
;;;334    {
;;;335      WAIT_UNTIL_KEY_PRESSED(SEL);
000302  bf00              NOP      
                  |L1.772|
000304  f7fffffe          BL       GetKey
000308  2800              CMP      r0,#0
00030a  d1fb              BNE      |L1.772|
;;;336      DisplayMenu();
00030c  f7fffffe          BL       DisplayMenu
;;;337    }
000310  bd10              POP      {r4,pc}
;;;338    
                          ENDP

                  ReadKey PROC
;;;345    *******************************************************************************/
;;;346    void ReadKey(void)
000312  e017              B        |L1.836|
                  |L1.788|
;;;347    {
;;;348      uint32_t key;
;;;349    
;;;350      while (1)
;;;351      {
;;;352        key = GetKey();
000314  f7fffffe          BL       GetKey
000318  4604              MOV      r4,r0
;;;353        switch (key)
00031a  b124              CBZ      r4,|L1.806|
00031c  2c01              CMP      r4,#1
00031e  d005              BEQ      |L1.812|
000320  2c02              CMP      r4,#2
000322  d109              BNE      |L1.824|
000324  e005              B        |L1.818|
                  |L1.806|
;;;354        {
;;;355          case SEL:   SelFunc();  break;
000326  f7fffffe          BL       SelFunc
00032a  e005              B        |L1.824|
                  |L1.812|
;;;356          case UP:    UpFunc();   break;
00032c  f7fffffe          BL       UpFunc
000330  e002              B        |L1.824|
                  |L1.818|
;;;357          case DOWN:  DownFunc(); break;
000332  f7fffffe          BL       DownFunc
000336  bf00              NOP      
                  |L1.824|
000338  bf00              NOP                            ;355
;;;358        }
;;;359      WAIT_UNTIL_KEY_RELEASED(key);
00033a  bf00              NOP      
                  |L1.828|
00033c  f7fffffe          BL       GetKey
000340  42a0              CMP      r0,r4
000342  d0fb              BEQ      |L1.828|
                  |L1.836|
000344  e7e6              B        |L1.788|
;;;360      }
;;;361    }
;;;362    
                          ENDP

                  Menu_Init PROC
;;;404    *******************************************************************************/
;;;405    void Menu_Init(void)
000346  481c              LDR      r0,|L1.952|
;;;406    {
;;;407      psCurrentMenu = &MainMenu;
000348  4915              LDR      r1,|L1.928|
00034a  6008              STR      r0,[r1,#0]  ; psCurrentMenu
;;;408      psPrevMenu[nMenuLevel] = psCurrentMenu;
00034c  4608              MOV      r0,r1
00034e  6800              LDR      r0,[r0,#0]  ; psCurrentMenu
000350  4918              LDR      r1,|L1.948|
000352  4a17              LDR      r2,|L1.944|
000354  6812              LDR      r2,[r2,#0]  ; nMenuLevel
000356  f8410022          STR      r0,[r1,r2,LSL #2]
;;;409      psMenuItem = MainMenuItems;
00035a  4818              LDR      r0,|L1.956|
00035c  4912              LDR      r1,|L1.936|
00035e  6008              STR      r0,[r1,#0]  ; psMenuItem
;;;410      CurrentFont = &Font_6x8;
000360  480e              LDR      r0,|L1.924|
000362  490c              LDR      r1,|L1.916|
000364  6008              STR      r0,[r1,#0]  ; CurrentFont
;;;411    }
000366  4770              BX       lr
;;;412    
                          ENDP

                  |L1.872|
000368  20202020          DCB      "                                        ",0
00036c  20202020
000370  20202020
000374  20202020
000378  20202020
00037c  20202020
000380  20202020
000384  20202020
000388  20202020
00038c  20202020
000390  00      
000391  00                DCB      0
000392  00                DCB      0
000393  00                DCB      0
                  |L1.916|
                          DCD      CurrentFont
                  |L1.920|
                          DCD      CurrentMethod
                  |L1.924|
                          DCD      Font_6x8
                  |L1.928|
                          DCD      psCurrentMenu
                  |L1.932|
                          DCD      MenuItemIndex
                  |L1.936|
                          DCD      psMenuItem
                  |L1.940|
                          DCD      psCurrentMenuItem
                  |L1.944|
                          DCD      nMenuLevel
                  |L1.948|
                          DCD      psPrevMenu
                  |L1.952|
                          DCD      MainMenu
                  |L1.956|
                          DCD      MainMenuItems

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  psPrevMenu
                          %        16

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  41646a75          DCB      "Adjust",0
000004  737400  
000007  53686f77          DCB      "Show",0
00000b  00      
00000c  52657475          DCB      "Return",0
000010  726e00  
000013  54696d65          DCB      "Time",0
000017  00      
000018  44617465          DCB      "Date",0
00001c  00      
00001d  416c6172          DCB      "Alarm",0
000021  6d00    
000023  45786974          DCB      "Exit on RTC Alarm",0
000027  206f6e20
00002b  52544320
00002f  416c6172
000033  6d00    
000035  53544f50          DCB      "STOP Mode",0
000039  204d6f64
00003d  6500    
00003f  45786974          DCB      "Exit on Wakeup",0
000043  206f6e20
000047  57616b65
00004b  757000  
00004e  5354414e          DCB      "STANDBY Mode",0
000052  44425920
000056  4d6f6465
00005a  00      
00005b  57697468          DCB      "With FIFO",0
00005f  20464946
000063  4f00    
000065  57697468          DCB      "Without FIFO",0
000069  6f757420
00006d  4649464f
000071  00      
000072  55415254          DCB      "UART",0
000076  00      
000077  5265616c          DCB      "Real Time Clock",0
00007b  2054696d
00007f  6520436c
000083  6f636b00
000087  53544f50          DCB      "STOP",0
00008b  00      
00008c  5354414e          DCB      "STANDBY",0
000090  44425900
000094  4c6f7720          DCB      "Low Power Mode",0
000098  506f7765
00009c  72204d6f
0000a0  646500  
0000a3  466f6e74          DCB      "Font",0
0000a7  00      
0000a8  5374796c          DCB      "Style",0
0000ac  6500    
0000ae  426f6f6b          DCB      "Book",0
0000b2  00      
0000b3  54657874          DCB      "Text",0
0000b7  00      
0000b8  456c656d          DCB      "Elements",0
0000bc  656e7473
0000c0  00      
0000c1  496e6469          DCB      "Indicators",0
0000c5  6361746f
0000c9  727300  
0000cc  47726170          DCB      "Graphics",0
0000d0  68696373
0000d4  00      
0000d5  4f6e00            DCB      "On",0
0000d8  4c454473          DCB      "LEDs",0
0000dc  00      
0000dd  5553422e          DCB      "USB. Virtual COM",0
0000e1  20566972
0000e5  7475616c
0000e9  20434f4d
0000ed  00      
0000ee  436f6d6d          DCB      "Communication",0
0000f2  756e6963
0000f6  6174696f
0000fa  6e00    
0000fc  54686572          DCB      "Thermometer",0
000100  6d6f6d65
000104  74657200
000108  4c6f7720          DCB      "Low Power",0
00010c  506f7765
000110  7200    
000112  4f746865          DCB      "Other devices",0
000116  72206465
00011a  76696365
00011e  7300    
000120  44697370          DCB      "Display",0
000124  6c617900
000128  4f746865          DCB      "Other",0
00012c  7200    
00012e  44657669          DCB      "Devices",0
000132  63657300
000136  41626f75          DCB      "About",0
00013a  7400    
00013c  4d61696e          DCB      "Main menu",0
000140  206d656e
000144  7500    

                          AREA ||.data||, DATA, ALIGN=2

                  MenuItemIndex
                          DCD      0x00000000
                  nMenuLevel
                          DCD      0x00000000
                  TimeMenuItems
                          DCD      ||.conststring||
                          DCD      TimeAdjustFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0x7
                          DCD      TimeShowFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  TimeMenu
                          DCD      ||.conststring||+0x13
                          DCD      TimeMenuItems
                          DCD      0x00000003
                  DateMenuItems
                          DCD      ||.conststring||
                          DCD      DateAdjustFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0x7
                          DCD      DateShowFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  DateMenu
                          DCD      ||.conststring||+0x18
                          DCD      DateMenuItems
                          DCD      0x00000003
                  AlarmMenuItems
                          DCD      ||.conststring||
                          DCD      AlarmAdjustFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0x7
                          DCD      AlarmShowFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  AlarmMenu
                          DCD      ||.conststring||+0x1d
                          DCD      AlarmMenuItems
                          DCD      0x00000003
                  STOPMenuItems
                          DCD      ||.conststring||+0x23
                          DCD      STOPMode_RTCAlarm
                          DCD      0x00000000
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  STOPMenu
                          DCD      ||.conststring||+0x35
                          DCD      STOPMenuItems
                          DCD      0x00000002
                  STANDBYMenuItems
                          DCD      ||.conststring||+0x3f
                          DCD      STANDBYMode_WAKEUP
                          DCD      0x00000000
                          DCD      ||.conststring||+0x23
                          DCD      STANDBYMode_RTCAlarm
                          DCD      0x00000000
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  STANDBYMenu
                          DCD      ||.conststring||+0x4e
                          DCD      STANDBYMenuItems
                          DCD      0x00000003
                  UARTMenuItems
                          DCD      ||.conststring||+0x5b
                          DCD      UARTwFIFOFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0x65
                          DCD      UARTFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  UARTMenu
                          DCD      ||.conststring||+0x72
                          DCD      UARTMenuItems
                          DCD      0x00000003
                  RTCMenuItems
                          DCD      ||.conststring||+0x13
                          DCD      IdleFunc
                          DCD      TimeMenu
                          DCD      ||.conststring||+0x18
                          DCD      IdleFunc
                          DCD      DateMenu
                          DCD      ||.conststring||+0x1d
                          DCD      IdleFunc
                          DCD      AlarmMenu
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  RTCMenu
                          DCD      ||.conststring||+0x77
                          DCD      RTCMenuItems
                          DCD      0x00000004
                  LowPowerMenuItems
                          DCD      ||.conststring||+0x87
                          DCD      IdleFunc
                          DCD      STOPMenu
                          DCD      ||.conststring||+0x8c
                          DCD      IdleFunc
                          DCD      STANDBYMenu
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  LowPowerMenu
                          DCD      ||.conststring||+0x94
                          DCD      LowPowerMenuItems
                          DCD      0x00000003
                  TextMenuItems
                          DCD      ||.conststring||+0xa3
                          DCD      FontFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0xa8
                          DCD      StyleFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0xae
                          DCD      BookFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  TextMenu
                          DCD      ||.conststring||+0xb3
                          DCD      TextMenuItems
                          DCD      0x00000004
                  GraphicMenuItems
                          DCD      ||.conststring||+0xb8
                          DCD      ElementsFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0xc1
                          DCD      IndicatorsFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  GraphicMenu
                          DCD      ||.conststring||+0xcc
                          DCD      GraphicMenuItems
                          DCD      0x00000003
                  LEDsMenuItems
                          DCD      ||.conststring||+0xd5
                          DCD      LightsOnFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  LEDsMenu
                          DCD      ||.conststring||+0xd8
                          DCD      LEDsMenuItems
                          DCD      0x00000002
                  CommMenuItems
                          DCD      ||.conststring||+0x72
                          DCD      IdleFunc
                          DCD      UARTMenu
                          DCD      ||.conststring||+0xdd
                          DCD      VCOMFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  CommMenu
                          DCD      ||.conststring||+0xee
                          DCD      CommMenuItems
                          DCD      0x00000003
                  OtherMenuItems
                          DCD      ||.conststring||+0xfc
                          DCD      TSENSORFunc
                          DCD      0x00000000
                          DCD      ||.conststring||+0x77
                          DCD      IdleFunc
                          DCD      RTCMenu
                          DCD      ||.conststring||+0x108
                          DCD      IdleFunc
                          DCD      LowPowerMenu
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  OtherMenu
                          DCD      ||.conststring||+0x112
                          DCD      OtherMenuItems
                          DCD      0x00000004
                  LCDMenuItems
                          DCD      ||.conststring||+0xb3
                          DCD      IdleFunc
                          DCD      TextMenu
                          DCD      ||.conststring||+0xcc
                          DCD      IdleFunc
                          DCD      GraphicMenu
                          DCD      ||.conststring||+0xd8
                          DCD      IdleFunc
                          DCD      LEDsMenu
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  LCDMenu
                          DCD      ||.conststring||+0x120
                          DCD      LCDMenuItems
                          DCD      0x00000004
                  DevMenuItems
                          DCD      ||.conststring||+0xee
                          DCD      IdleFunc
                          DCD      CommMenu
                          DCD      ||.conststring||+0x128
                          DCD      IdleFunc
                          DCD      OtherMenu
                          DCD      ||.conststring||+0xc
                          DCD      ReturnFunc
                          DCD      0x00000000
                  DevMenu
                          DCD      ||.conststring||+0x12e
                          DCD      DevMenuItems
                          DCD      0x00000003
                  MainMenuItems
                          DCD      ||.conststring||+0x120
                          DCD      IdleFunc
                          DCD      LCDMenu
                          DCD      ||.conststring||+0x12e
                          DCD      IdleFunc
                          DCD      DevMenu
                          DCD      ||.conststring||+0x136
                          DCD      AboutFunc
                          DCD      0x00000000
                  MainMenu
                          DCD      ||.conststring||+0x13c
                          DCD      MainMenuItems
                          DCD      0x00000003
                  psMenuItem
                          DCD      0x00000000
                  psCurrentMenuItem
                          DCD      0x00000000
                  psCurrentMenu
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\src\\Menu.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_Menu_c_0e7f89e6____REV16|
#line 129 "..\\..\\..\\..\\Libraries\\CMSIS\\CM3\\CoreSupport\\core_cmInstr.h"
|__asm___6_Menu_c_0e7f89e6____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_Menu_c_0e7f89e6____REVSH|
#line 144
|__asm___6_Menu_c_0e7f89e6____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
