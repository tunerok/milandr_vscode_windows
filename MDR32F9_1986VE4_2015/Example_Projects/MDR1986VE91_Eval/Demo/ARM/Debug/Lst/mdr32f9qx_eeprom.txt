; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Debug\Exe\mdr32f9qx_eeprom.o --asm_dir=.\Debug\Lst\ --list_dir=.\Debug\Lst\ --depend=.\Debug\Exe\mdr32f9qx_eeprom.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc\USB_Library -I..\..\inc -I..\..\Config -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\Debug\Exe\mdr32f9qx_eeprom.crf ..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\src\MDR32F9Qx_eeprom.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  EEPROM_SetLatency PROC
;;;91       */
;;;92     void EEPROM_SetLatency ( uint32_t EEPROM_Latency )
000000  4901              LDR      r1,|L1.8|
;;;93     {
;;;94       /* Check the parameters */
;;;95       assert_param(IS_EEPROM_LATENCY(EEPROM_Latency));
;;;96     
;;;97       /* Set the new latency value */
;;;98       MDR_EEPROM->CMD = EEPROM_Latency;
000002  6008              STR      r0,[r1,#0]
;;;99     }
000004  4770              BX       lr
;;;100    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40018000

                          AREA EXECUTABLE_MEMORY_SECTION, CODE, READONLY, ALIGN=2

                  ProgramDelay PROC
;;;68       */
;;;69     __RAMFUNC static void ProgramDelay(uint32_t Loops)
000000  4601              MOV      r1,r0
;;;70     {
;;;71       volatile uint32_t i = Loops;
;;;72       for (; i > 0; i--)
000002  e000              B        |L2.6|
                  |L2.4|
000004  1e49              SUBS     r1,r1,#1
                  |L2.6|
000006  2900              CMP      r1,#0
000008  d1fc              BNE      |L2.4|
;;;73       {
;;;74       }
;;;75     }
00000a  4770              BX       lr
;;;76     
                          ENDP

                  EEPROM_ReadByte PROC
;;;109      */
;;;110    __RAMFUNC  uint8_t EEPROM_ReadByte(uint32_t Address, uint32_t BankSelector)
00000c  b570              PUSH     {r4-r6,lr}
;;;111    {
00000e  4602              MOV      r2,r0
000010  460b              MOV      r3,r1
;;;112      uint32_t Data;
;;;113      uint32_t Command;
;;;114      uint32_t Shift;
;;;115    
;;;116      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;117    
;;;118      MDR_EEPROM->KEY = EEPROM_REG_ACCESS_KEY;
000012  48be              LDR      r0,|L2.780|
000014  4ebe              LDR      r6,|L2.784|
000016  6130              STR      r0,[r6,#0x10]
;;;119      Command = (MDR_EEPROM->CMD & EEPROM_CMD_DELAY_Msk) | EEPROM_CMD_CON;
000018  4630              MOV      r0,r6
00001a  6800              LDR      r0,[r0,#0]
00001c  f0000038          AND      r0,r0,#0x38
000020  1c41              ADDS     r1,r0,#1
;;;120      Command |= (BankSelector == EEPROM_Info_Bank_Select) ? EEPROM_CMD_IFREN : 0;
000022  2b01              CMP      r3,#1
000024  d101              BNE      |L2.42|
000026  0258              LSLS     r0,r3,#9
000028  e000              B        |L2.44|
                  |L2.42|
00002a  2000              MOVS     r0,#0
                  |L2.44|
00002c  4301              ORRS     r1,r1,r0
;;;121      MDR_EEPROM->CMD = Command;
00002e  48b8              LDR      r0,|L2.784|
000030  6001              STR      r1,[r0,#0]
;;;122      MDR_EEPROM->ADR = Address;
000032  6042              STR      r2,[r0,#4]
;;;123      MDR_EEPROM->CMD = Command | EEPROM_CMD_XE | EEPROM_CMD_YE | EEPROM_CMD_SE;
000034  f44170e0          ORR      r0,r1,#0x1c0
000038  4eb5              LDR      r6,|L2.784|
00003a  6030              STR      r0,[r6,#0]
;;;124      MDR_EEPROM->DO;   /* Idle Reading for Delay */
00003c  4630              MOV      r0,r6
00003e  68c0              LDR      r0,[r0,#0xc]
;;;125      MDR_EEPROM->DO;   /* Idle Reading for Delay */
000040  4630              MOV      r0,r6
000042  68c0              LDR      r0,[r0,#0xc]
;;;126      MDR_EEPROM->DO;   /* Idle Reading for Delay */
000044  4630              MOV      r0,r6
000046  68c0              LDR      r0,[r0,#0xc]
;;;127      Data = MDR_EEPROM->DO;
000048  4630              MOV      r0,r6
00004a  68c5              LDR      r5,[r0,#0xc]
;;;128      Command &= EEPROM_CMD_DELAY_Msk;
00004c  f0010138          AND      r1,r1,#0x38
;;;129      MDR_EEPROM->CMD = Command;
000050  6001              STR      r1,[r0,#0]
;;;130      MDR_EEPROM->KEY = 0;
000052  2000              MOVS     r0,#0
000054  6130              STR      r0,[r6,#0x10]
;;;131    
;;;132      Shift = (Address & 3) * 8;
000056  0790              LSLS     r0,r2,#30
000058  0ec4              LSRS     r4,r0,#27
;;;133      Data >>= Shift;
00005a  40e5              LSRS     r5,r5,r4
;;;134      return Data;
00005c  b2e8              UXTB     r0,r5
;;;135    }
00005e  bd70              POP      {r4-r6,pc}
;;;136    
                          ENDP

                  EEPROM_ReadHalfWord PROC
;;;145      */
;;;146    __RAMFUNC uint16_t EEPROM_ReadHalfWord(uint32_t Address, uint32_t BankSelector)
000060  b570              PUSH     {r4-r6,lr}
;;;147    {
000062  4602              MOV      r2,r0
000064  460b              MOV      r3,r1
;;;148      uint32_t Data;
;;;149      uint32_t Command;
;;;150      uint32_t Shift;
;;;151    
;;;152      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;153      assert_param(IS_TWO_BYTE_ALLIGNED(Address));
;;;154    
;;;155      MDR_EEPROM->KEY = EEPROM_REG_ACCESS_KEY;
000066  48a9              LDR      r0,|L2.780|
000068  4ea9              LDR      r6,|L2.784|
00006a  6130              STR      r0,[r6,#0x10]
;;;156      Command = (MDR_EEPROM->CMD & EEPROM_CMD_DELAY_Msk) | EEPROM_CMD_CON;
00006c  4630              MOV      r0,r6
00006e  6800              LDR      r0,[r0,#0]
000070  f0000038          AND      r0,r0,#0x38
000074  1c41              ADDS     r1,r0,#1
;;;157      Command |= (BankSelector == EEPROM_Info_Bank_Select) ? EEPROM_CMD_IFREN : 0;
000076  2b01              CMP      r3,#1
000078  d101              BNE      |L2.126|
00007a  0258              LSLS     r0,r3,#9
00007c  e000              B        |L2.128|
                  |L2.126|
00007e  2000              MOVS     r0,#0
                  |L2.128|
000080  4301              ORRS     r1,r1,r0
;;;158      MDR_EEPROM->CMD = Command;
000082  48a3              LDR      r0,|L2.784|
000084  6001              STR      r1,[r0,#0]
;;;159      MDR_EEPROM->ADR = Address;
000086  6042              STR      r2,[r0,#4]
;;;160      MDR_EEPROM->CMD = Command | EEPROM_CMD_XE | EEPROM_CMD_YE | EEPROM_CMD_SE;
000088  f44170e0          ORR      r0,r1,#0x1c0
00008c  4ea0              LDR      r6,|L2.784|
00008e  6030              STR      r0,[r6,#0]
;;;161      MDR_EEPROM->DO;   /* Idle Reading for Delay */
000090  4630              MOV      r0,r6
000092  68c0              LDR      r0,[r0,#0xc]
;;;162      MDR_EEPROM->DO;   /* Idle Reading for Delay */
000094  4630              MOV      r0,r6
000096  68c0              LDR      r0,[r0,#0xc]
;;;163      MDR_EEPROM->DO;   /* Idle Reading for Delay */
000098  4630              MOV      r0,r6
00009a  68c0              LDR      r0,[r0,#0xc]
;;;164      Data = MDR_EEPROM->DO;
00009c  4630              MOV      r0,r6
00009e  68c5              LDR      r5,[r0,#0xc]
;;;165      Command &= EEPROM_CMD_DELAY_Msk;
0000a0  f0010138          AND      r1,r1,#0x38
;;;166      MDR_EEPROM->CMD = Command;
0000a4  6001              STR      r1,[r0,#0]
;;;167      MDR_EEPROM->KEY = 0;
0000a6  2000              MOVS     r0,#0
0000a8  6130              STR      r0,[r6,#0x10]
;;;168    
;;;169      Shift = (Address & 2) * 8;
0000aa  f0020002          AND      r0,r2,#2
0000ae  00c4              LSLS     r4,r0,#3
;;;170      Data >>= Shift;
0000b0  40e5              LSRS     r5,r5,r4
;;;171      return Data;
0000b2  b2a8              UXTH     r0,r5
;;;172    }
0000b4  bd70              POP      {r4-r6,pc}
;;;173    
                          ENDP

                  EEPROM_ReadWord PROC
;;;182      */
;;;183    __RAMFUNC uint32_t EEPROM_ReadWord(uint32_t Address, uint32_t BankSelector)
0000b6  b530              PUSH     {r4,r5,lr}
;;;184    {
0000b8  4602              MOV      r2,r0
0000ba  460b              MOV      r3,r1
;;;185      uint32_t Command;
;;;186      uint32_t Data;
;;;187    
;;;188      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;189      assert_param(IS_FOUR_BYTE_ALLIGNED(Address));
;;;190    
;;;191      MDR_EEPROM->KEY = EEPROM_REG_ACCESS_KEY;
0000bc  4c93              LDR      r4,|L2.780|
0000be  4d94              LDR      r5,|L2.784|
0000c0  612c              STR      r4,[r5,#0x10]
;;;192      Command = (MDR_EEPROM->CMD & EEPROM_CMD_DELAY_Msk) | EEPROM_CMD_CON;
0000c2  462c              MOV      r4,r5
0000c4  6824              LDR      r4,[r4,#0]
0000c6  f0040438          AND      r4,r4,#0x38
0000ca  1c61              ADDS     r1,r4,#1
;;;193      Command |= (BankSelector == EEPROM_Info_Bank_Select) ? EEPROM_CMD_IFREN : 0;
0000cc  2b01              CMP      r3,#1
0000ce  d101              BNE      |L2.212|
0000d0  025c              LSLS     r4,r3,#9
0000d2  e000              B        |L2.214|
                  |L2.212|
0000d4  2400              MOVS     r4,#0
                  |L2.214|
0000d6  4321              ORRS     r1,r1,r4
;;;194      MDR_EEPROM->CMD = Command;
0000d8  4c8d              LDR      r4,|L2.784|
0000da  6021              STR      r1,[r4,#0]
;;;195      MDR_EEPROM->ADR = Address;
0000dc  6062              STR      r2,[r4,#4]
;;;196      MDR_EEPROM->CMD = Command | EEPROM_CMD_XE | EEPROM_CMD_YE | EEPROM_CMD_SE;
0000de  f44174e0          ORR      r4,r1,#0x1c0
0000e2  4d8b              LDR      r5,|L2.784|
0000e4  602c              STR      r4,[r5,#0]
;;;197      MDR_EEPROM->DO;   /* Idle Reading for Delay */
0000e6  462c              MOV      r4,r5
0000e8  68e4              LDR      r4,[r4,#0xc]
;;;198      MDR_EEPROM->DO;   /* Idle Reading for Delay */
0000ea  462c              MOV      r4,r5
0000ec  68e4              LDR      r4,[r4,#0xc]
;;;199      MDR_EEPROM->DO;   /* Idle Reading for Delay */
0000ee  462c              MOV      r4,r5
0000f0  68e4              LDR      r4,[r4,#0xc]
;;;200      Data = MDR_EEPROM->DO;
0000f2  462c              MOV      r4,r5
0000f4  68e0              LDR      r0,[r4,#0xc]
;;;201      Command &= EEPROM_CMD_DELAY_Msk;
0000f6  f0010138          AND      r1,r1,#0x38
;;;202      MDR_EEPROM->CMD = Command;
0000fa  6021              STR      r1,[r4,#0]
;;;203      MDR_EEPROM->KEY = 0;
0000fc  2400              MOVS     r4,#0
0000fe  612c              STR      r4,[r5,#0x10]
;;;204      return Data;
;;;205    }
000100  bd30              POP      {r4,r5,pc}
;;;206    
                          ENDP

                  EEPROM_ErasePage PROC
;;;215      */
;;;216    __RAMFUNC void EEPROM_ErasePage(uint32_t Address, uint32_t BankSelector)
000102  e92d41f0          PUSH     {r4-r8,lr}
;;;217    {
000106  4606              MOV      r6,r0
000108  460f              MOV      r7,r1
;;;218      uint32_t Command;
;;;219      uint32_t Offset;
;;;220    
;;;221      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;222    
;;;223      MDR_EEPROM->KEY = EEPROM_REG_ACCESS_KEY;
00010a  4880              LDR      r0,|L2.780|
00010c  4980              LDR      r1,|L2.784|
00010e  6108              STR      r0,[r1,#0x10]
;;;224      Command = (MDR_EEPROM->CMD & EEPROM_CMD_DELAY_Msk) | EEPROM_CMD_CON;
000110  4608              MOV      r0,r1
000112  6800              LDR      r0,[r0,#0]
000114  f0000038          AND      r0,r0,#0x38
000118  1c44              ADDS     r4,r0,#1
;;;225      Command |= (BankSelector == EEPROM_Info_Bank_Select) ? EEPROM_CMD_IFREN : 0;
00011a  2f01              CMP      r7,#1
00011c  d101              BNE      |L2.290|
00011e  1548              ASRS     r0,r1,#21
000120  e000              B        |L2.292|
                  |L2.290|
000122  2000              MOVS     r0,#0
                  |L2.292|
000124  4304              ORRS     r4,r4,r0
;;;226      MDR_EEPROM->CMD = Command;
000126  487a              LDR      r0,|L2.784|
000128  6004              STR      r4,[r0,#0]
;;;227    
;;;228      for (Offset = 0; Offset < (4 << 2); Offset += 4)
00012a  2500              MOVS     r5,#0
00012c  e022              B        |L2.372|
                  |L2.302|
;;;229      {
;;;230        MDR_EEPROM->ADR = Address + Offset;             /* Page Address */
00012e  1970              ADDS     r0,r6,r5
000130  4977              LDR      r1,|L2.784|
000132  6048              STR      r0,[r1,#4]
;;;231        MDR_EEPROM->DI = 0;
000134  2000              MOVS     r0,#0
000136  6088              STR      r0,[r1,#8]
;;;232        Command |= EEPROM_CMD_XE | EEPROM_CMD_ERASE;
000138  f4446488          ORR      r4,r4,#0x440
;;;233        MDR_EEPROM->CMD = Command;
00013c  4608              MOV      r0,r1
00013e  6004              STR      r4,[r0,#0]
;;;234        ProgramDelay(GET_US_LOOPS(5));              /* Wait for 5 us */
000140  2005              MOVS     r0,#5
000142  f7fffffe          BL       ProgramDelay
;;;235        Command |= EEPROM_CMD_NVSTR;
000146  f4445400          ORR      r4,r4,#0x2000
;;;236        MDR_EEPROM->CMD = Command;
00014a  4871              LDR      r0,|L2.784|
00014c  6004              STR      r4,[r0,#0]
;;;237        ProgramDelay(GET_US_LOOPS(40000));          /* Wait for 40 ms */
00014e  f6494040          MOV      r0,#0x9c40
000152  f7fffffe          BL       ProgramDelay
;;;238        Command &= ~EEPROM_CMD_ERASE;
000156  f4246480          BIC      r4,r4,#0x400
;;;239        MDR_EEPROM->CMD = Command;
00015a  486d              LDR      r0,|L2.784|
00015c  6004              STR      r4,[r0,#0]
;;;240        ProgramDelay(GET_US_LOOPS(5));              /* Wait for 5 us */
00015e  2005              MOVS     r0,#5
000160  f7fffffe          BL       ProgramDelay
;;;241        Command &= ~(EEPROM_CMD_XE | EEPROM_CMD_NVSTR);
000164  f4245401          BIC      r4,r4,#0x2040
;;;242        MDR_EEPROM->CMD = Command;
000168  4869              LDR      r0,|L2.784|
00016a  6004              STR      r4,[r0,#0]
;;;243        ProgramDelay(GET_US_LOOPS(1));              /* Wait for 1 us */
00016c  2001              MOVS     r0,#1
00016e  f7fffffe          BL       ProgramDelay
000172  1d2d              ADDS     r5,r5,#4              ;228
                  |L2.372|
000174  2d10              CMP      r5,#0x10              ;228
000176  d3da              BCC      |L2.302|
;;;244      }
;;;245      Command &= EEPROM_CMD_DELAY_Msk;
000178  f0040438          AND      r4,r4,#0x38
;;;246      MDR_EEPROM->CMD = Command;
00017c  4864              LDR      r0,|L2.784|
00017e  6004              STR      r4,[r0,#0]
;;;247      MDR_EEPROM->KEY = 0;
000180  2000              MOVS     r0,#0
000182  4963              LDR      r1,|L2.784|
000184  6108              STR      r0,[r1,#0x10]
;;;248    }
000186  e8bd81f0          POP      {r4-r8,pc}
;;;249    
                          ENDP

                  EEPROM_EraseAllPages PROC
;;;257      */
;;;258    __RAMFUNC void EEPROM_EraseAllPages(uint32_t BankSelector)
00018a  b570              PUSH     {r4-r6,lr}
;;;259    {
00018c  4606              MOV      r6,r0
;;;260      uint32_t Command;
;;;261      uint32_t Offset;
;;;262    
;;;263      assert_param(IS_EEPROM_ERASE_SELECTOR(BankSelector));
;;;264    
;;;265      MDR_EEPROM->KEY = EEPROM_REG_ACCESS_KEY;
00018e  485f              LDR      r0,|L2.780|
000190  495f              LDR      r1,|L2.784|
000192  6108              STR      r0,[r1,#0x10]
;;;266      Command = (MDR_EEPROM->CMD & EEPROM_CMD_DELAY_Msk) | EEPROM_CMD_CON;
000194  4608              MOV      r0,r1
000196  6800              LDR      r0,[r0,#0]
000198  f0000038          AND      r0,r0,#0x38
00019c  1c44              ADDS     r4,r0,#1
;;;267      Command |= (BankSelector == EEPROM_All_Banks_Select) ? EEPROM_CMD_IFREN : 0;
00019e  2e02              CMP      r6,#2
0001a0  d101              BNE      |L2.422|
0001a2  1548              ASRS     r0,r1,#21
0001a4  e000              B        |L2.424|
                  |L2.422|
0001a6  2000              MOVS     r0,#0
                  |L2.424|
0001a8  4304              ORRS     r4,r4,r0
;;;268    
;;;269      MDR_EEPROM->CMD = Command;
0001aa  4859              LDR      r0,|L2.784|
0001ac  6004              STR      r4,[r0,#0]
;;;270    
;;;271      for (Offset = 0; Offset < (4 << 2); Offset += 4)
0001ae  2500              MOVS     r5,#0
0001b0  e022              B        |L2.504|
                  |L2.434|
;;;272      {
;;;273        MDR_EEPROM->ADR = Offset;
0001b2  4857              LDR      r0,|L2.784|
0001b4  6045              STR      r5,[r0,#4]
;;;274        MDR_EEPROM->DI = 0;
0001b6  2000              MOVS     r0,#0
0001b8  4955              LDR      r1,|L2.784|
0001ba  6088              STR      r0,[r1,#8]
;;;275        Command |= EEPROM_CMD_XE | EEPROM_CMD_MAS1 | EEPROM_CMD_ERASE;
0001bc  f4446444          ORR      r4,r4,#0xc40
;;;276        MDR_EEPROM->CMD = Command;
0001c0  4608              MOV      r0,r1
0001c2  6004              STR      r4,[r0,#0]
;;;277        ProgramDelay(GET_US_LOOPS(5));                /* Wait for 5 us */
0001c4  2005              MOVS     r0,#5
0001c6  f7fffffe          BL       ProgramDelay
;;;278        Command |= EEPROM_CMD_NVSTR;
0001ca  f4445400          ORR      r4,r4,#0x2000
;;;279        MDR_EEPROM->CMD = Command;
0001ce  4850              LDR      r0,|L2.784|
0001d0  6004              STR      r4,[r0,#0]
;;;280        ProgramDelay(GET_US_LOOPS(40000));            /* Wait for 40 ms */
0001d2  f6494040          MOV      r0,#0x9c40
0001d6  f7fffffe          BL       ProgramDelay
;;;281        Command &= ~EEPROM_CMD_ERASE;
0001da  f4246480          BIC      r4,r4,#0x400
;;;282        MDR_EEPROM->CMD = Command;
0001de  484c              LDR      r0,|L2.784|
0001e0  6004              STR      r4,[r0,#0]
;;;283        ProgramDelay(GET_US_LOOPS(100));              /* Wait for 100 us */
0001e2  2064              MOVS     r0,#0x64
0001e4  f7fffffe          BL       ProgramDelay
;;;284        Command &= ~(EEPROM_CMD_XE | EEPROM_CMD_MAS1 | EEPROM_CMD_NVSTR);
0001e8  f4245421          BIC      r4,r4,#0x2840
;;;285        MDR_EEPROM->CMD = Command;
0001ec  4848              LDR      r0,|L2.784|
0001ee  6004              STR      r4,[r0,#0]
;;;286        ProgramDelay(GET_US_LOOPS(1));                /* Wait for 1 us */
0001f0  2001              MOVS     r0,#1
0001f2  f7fffffe          BL       ProgramDelay
0001f6  1d2d              ADDS     r5,r5,#4              ;271
                  |L2.504|
0001f8  2d10              CMP      r5,#0x10              ;271
0001fa  d3da              BCC      |L2.434|
;;;287      }
;;;288      Command &= EEPROM_CMD_DELAY_Msk;
0001fc  f0040438          AND      r4,r4,#0x38
;;;289      MDR_EEPROM->CMD = Command;
000200  4843              LDR      r0,|L2.784|
000202  6004              STR      r4,[r0,#0]
;;;290      MDR_EEPROM->KEY = 0;
000204  2000              MOVS     r0,#0
000206  4942              LDR      r1,|L2.784|
000208  6108              STR      r0,[r1,#0x10]
;;;291    }
00020a  bd70              POP      {r4-r6,pc}
;;;292    
                          ENDP

                  EEPROM_ProgramWord PROC
;;;353      */
;;;354    __RAMFUNC void EEPROM_ProgramWord(uint32_t Address, uint32_t BankSelector, uint32_t Data)
00020c  e92d41f0          PUSH     {r4-r8,lr}
;;;355    {
000210  4606              MOV      r6,r0
000212  460d              MOV      r5,r1
000214  4617              MOV      r7,r2
;;;356      uint32_t Command;
;;;357    
;;;358      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;359      assert_param(IS_FOUR_BYTE_ALLIGNED(Address));
;;;360    
;;;361      MDR_EEPROM->KEY = EEPROM_REG_ACCESS_KEY;
000216  483d              LDR      r0,|L2.780|
000218  493d              LDR      r1,|L2.784|
00021a  6108              STR      r0,[r1,#0x10]
;;;362      BankSelector = (BankSelector == EEPROM_Info_Bank_Select) ? EEPROM_CMD_IFREN : 0;
00021c  2d01              CMP      r5,#1
00021e  d101              BNE      |L2.548|
000220  1548              ASRS     r0,r1,#21
000222  e000              B        |L2.550|
                  |L2.548|
000224  2000              MOVS     r0,#0
                  |L2.550|
000226  4605              MOV      r5,r0
;;;363      Command = MDR_EEPROM->CMD & EEPROM_CMD_DELAY_Msk;
000228  4839              LDR      r0,|L2.784|
00022a  6800              LDR      r0,[r0,#0]
00022c  f0000438          AND      r4,r0,#0x38
;;;364      Command |= EEPROM_CMD_CON | BankSelector;
000230  f0450001          ORR      r0,r5,#1
000234  4304              ORRS     r4,r4,r0
;;;365      MDR_EEPROM->CMD = Command;
000236  4836              LDR      r0,|L2.784|
000238  6004              STR      r4,[r0,#0]
;;;366      MDR_EEPROM->ADR = Address;
00023a  6046              STR      r6,[r0,#4]
;;;367      MDR_EEPROM->DI  = Data;
00023c  6087              STR      r7,[r0,#8]
;;;368      Command |= EEPROM_CMD_XE | EEPROM_CMD_PROG;
00023e  f4445482          ORR      r4,r4,#0x1040
;;;369      MDR_EEPROM->CMD = Command;
000242  6004              STR      r4,[r0,#0]
;;;370      ProgramDelay(GET_US_LOOPS(5));                /* Wait for 5 us */
000244  2005              MOVS     r0,#5
000246  f7fffffe          BL       ProgramDelay
;;;371      Command |= EEPROM_CMD_NVSTR;
00024a  f4445400          ORR      r4,r4,#0x2000
;;;372      MDR_EEPROM->CMD = Command;
00024e  4830              LDR      r0,|L2.784|
000250  6004              STR      r4,[r0,#0]
;;;373      ProgramDelay(GET_US_LOOPS(10));               /* Wait for 10 us */
000252  200a              MOVS     r0,#0xa
000254  f7fffffe          BL       ProgramDelay
;;;374      Command |= EEPROM_CMD_YE;
000258  f0440480          ORR      r4,r4,#0x80
;;;375      MDR_EEPROM->CMD = Command;
00025c  482c              LDR      r0,|L2.784|
00025e  6004              STR      r4,[r0,#0]
;;;376      ProgramDelay(GET_US_LOOPS(40));               /* Wait for 40 us */
000260  2028              MOVS     r0,#0x28
000262  f7fffffe          BL       ProgramDelay
;;;377      Command &= ~EEPROM_CMD_YE;
000266  f0240480          BIC      r4,r4,#0x80
;;;378      MDR_EEPROM->CMD = Command;
00026a  4829              LDR      r0,|L2.784|
00026c  6004              STR      r4,[r0,#0]
;;;379      Command &= ~EEPROM_CMD_PROG;
00026e  f4245480          BIC      r4,r4,#0x1000
;;;380      MDR_EEPROM->CMD = Command;
000272  6004              STR      r4,[r0,#0]
;;;381      ProgramDelay(GET_US_LOOPS(5));                /* Wait for 5 us */
000274  2005              MOVS     r0,#5
000276  f7fffffe          BL       ProgramDelay
;;;382      Command &= ~(EEPROM_CMD_XE | EEPROM_CMD_NVSTR);
00027a  f4245401          BIC      r4,r4,#0x2040
;;;383      MDR_EEPROM->CMD = Command;
00027e  4824              LDR      r0,|L2.784|
000280  6004              STR      r4,[r0,#0]
;;;384      ProgramDelay(GET_US_LOOPS(1));                /* Wait for 1 us */
000282  2001              MOVS     r0,#1
000284  f7fffffe          BL       ProgramDelay
;;;385    
;;;386      MDR_EEPROM->CMD = Command & EEPROM_CMD_DELAY_Msk;
000288  f0040038          AND      r0,r4,#0x38
00028c  4920              LDR      r1,|L2.784|
00028e  6008              STR      r0,[r1,#0]
;;;387      MDR_EEPROM->KEY = 0;
000290  2000              MOVS     r0,#0
000292  6108              STR      r0,[r1,#0x10]
;;;388    }
000294  e8bd81f0          POP      {r4-r8,pc}
;;;389    
                          ENDP

                  EEPROM_ProgramByte PROC
;;;302      */
;;;303    __RAMFUNC void EEPROM_ProgramByte(uint32_t Address, uint32_t BankSelector, uint32_t Data)
000298  e92d47f0          PUSH     {r4-r10,lr}
;;;304    {
00029c  4605              MOV      r5,r0
00029e  4688              MOV      r8,r1
0002a0  4614              MOV      r4,r2
;;;305      uint32_t Mask;
;;;306      uint32_t Tmp;
;;;307      uint32_t Shift;
;;;308    
;;;309      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;310    
;;;311      Shift = (Address & 3) * 8;
0002a2  07a8              LSLS     r0,r5,#30
0002a4  0ec7              LSRS     r7,r0,#27
;;;312      Data = Data << Shift;
0002a6  40bc              LSLS     r4,r4,r7
;;;313      Mask = 0xFF << Shift;
0002a8  20ff              MOVS     r0,#0xff
0002aa  fa00f607          LSL      r6,r0,r7
;;;314      Tmp = EEPROM_ReadWord(Address, BankSelector);
0002ae  4641              MOV      r1,r8
0002b0  4628              MOV      r0,r5
0002b2  f7fffffe          BL       EEPROM_ReadWord
0002b6  4681              MOV      r9,r0
;;;315      EEPROM_ProgramWord(Address, BankSelector, (Tmp & ~Mask) | (Data & Mask));
0002b8  ea290006          BIC      r0,r9,r6
0002bc  ea040106          AND      r1,r4,r6
0002c0  ea400201          ORR      r2,r0,r1
0002c4  4641              MOV      r1,r8
0002c6  4628              MOV      r0,r5
0002c8  f7fffffe          BL       EEPROM_ProgramWord
;;;316    }
0002cc  e8bd87f0          POP      {r4-r10,pc}
;;;317    
                          ENDP

                  EEPROM_ProgramHalfWord PROC
;;;327      */
;;;328    __RAMFUNC void EEPROM_ProgramHalfWord(uint32_t Address, uint32_t BankSelector, uint32_t Data)
0002d0  e92d47f0          PUSH     {r4-r10,lr}
;;;329    {
0002d4  4605              MOV      r5,r0
0002d6  4688              MOV      r8,r1
0002d8  4614              MOV      r4,r2
;;;330      uint32_t Mask;
;;;331      uint32_t Tmp;
;;;332      uint32_t Shift;
;;;333    
;;;334      assert_param(IS_EEPROM_BANK_SELECTOR(BankSelector));
;;;335      assert_param(IS_TWO_BYTE_ALLIGNED(Address));
;;;336    
;;;337      Shift = (Address & 2) * 8;
0002da  f0050002          AND      r0,r5,#2
0002de  00c7              LSLS     r7,r0,#3
;;;338      Data = Data << Shift;
0002e0  40bc              LSLS     r4,r4,r7
;;;339      Mask = 0xFFFF << Shift;
0002e2  f64f70ff          MOV      r0,#0xffff
0002e6  fa00f607          LSL      r6,r0,r7
;;;340      Tmp = EEPROM_ReadWord(Address, BankSelector);
0002ea  4641              MOV      r1,r8
0002ec  4628              MOV      r0,r5
0002ee  f7fffffe          BL       EEPROM_ReadWord
0002f2  4681              MOV      r9,r0
;;;341      EEPROM_ProgramWord(Address, BankSelector, (Tmp & ~Mask) | (Data & Mask));
0002f4  ea290006          BIC      r0,r9,r6
0002f8  ea040106          AND      r1,r4,r6
0002fc  ea400201          ORR      r2,r0,r1
000300  4641              MOV      r1,r8
000302  4628              MOV      r0,r5
000304  f7fffffe          BL       EEPROM_ProgramWord
;;;342    }
000308  e8bd87f0          POP      {r4-r10,pc}
;;;343    
                          ENDP

                  |L2.780|
                          DCD      0x8aaa5551
                  |L2.784|
                          DCD      0x40018000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Libraries\\MDR32F9Qx_StdPeriph_Driver\\src\\MDR32F9Qx_eeprom.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_MDR32F9Qx_eeprom_c_aa8f9099____REV16|
#line 129 "..\\..\\..\\..\\Libraries\\CMSIS\\CM3\\CoreSupport\\core_cmInstr.h"
|__asm___18_MDR32F9Qx_eeprom_c_aa8f9099____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_MDR32F9Qx_eeprom_c_aa8f9099____REVSH|
#line 144
|__asm___18_MDR32F9Qx_eeprom_c_aa8f9099____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
