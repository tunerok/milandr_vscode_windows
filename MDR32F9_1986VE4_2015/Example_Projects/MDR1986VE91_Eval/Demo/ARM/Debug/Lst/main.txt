; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Debug\Exe\main.o --asm_dir=.\Debug\Lst\ --list_dir=.\Debug\Lst\ --depend=.\Debug\Exe\main.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\inc -I..\..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc\USB_Library -I..\..\inc -I..\..\Config -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\Debug\Exe\main.crf ..\..\src\Main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  main PROC
;;;61       */
;;;62     void main (void)
000000  2400              MOVS     r4,#0
;;;63     {
;;;64     uint32_t i;
;;;65     	uint32_t ch = 0;
;;;66     	uint32_t h = 0;
000002  2600              MOVS     r6,#0
;;;67     
;;;68       /* Enables the HSI clock on PORTC */
;;;69       RST_CLK_PCLKcmd(RST_CLK_PCLK_PORTC,ENABLE);
000004  2101              MOVS     r1,#1
000006  05c8              LSLS     r0,r1,#23
000008  f7fffffe          BL       RST_CLK_PCLKcmd
;;;70     
;;;71       /* Fill PortInit structure */
;;;72       PortInit.PORT_PULL_UP = PORT_PULL_UP_ON;
00000c  2001              MOVS     r0,#1
00000e  492c              LDR      r1,|L1.192|
000010  70c8              STRB     r0,[r1,#3]
;;;73       //PortInit.PORT_PULL_DOWN = PORT_PULL_DOWN_OFF;
;;;74       PortInit.PORT_PD_SHM = PORT_PD_SHM_OFF;
000012  2000              MOVS     r0,#0
000014  7148              STRB     r0,[r1,#5]
;;;75       PortInit.PORT_PD = PORT_PD_DRIVER;
000016  7188              STRB     r0,[r1,#6]
;;;76       PortInit.PORT_GFEN = PORT_GFEN_OFF;
000018  71c8              STRB     r0,[r1,#7]
;;;77       PortInit.PORT_FUNC = PORT_FUNC_ALTER;
00001a  2002              MOVS     r0,#2
00001c  7208              STRB     r0,[r1,#8]
;;;78       PortInit.PORT_SPEED = PORT_SPEED_MAXFAST;
00001e  2003              MOVS     r0,#3
000020  7248              STRB     r0,[r1,#9]
;;;79       PortInit.PORT_MODE = PORT_MODE_DIGITAL;
000022  2001              MOVS     r0,#1
000024  7288              STRB     r0,[r1,#0xa]
;;;80     
;;;81       /* Configure PORTC pins 0,1 (I2C_SCL,I2C_SDA) */
;;;82       PortInit.PORT_Pin = PORT_Pin_0 | PORT_Pin_1;
000026  2003              MOVS     r0,#3
000028  8008              STRH     r0,[r1,#0]
;;;83       PORT_Init(MDR_PORTC, &PortInit);
00002a  4826              LDR      r0,|L1.196|
00002c  f7fffffe          BL       PORT_Init
;;;84     
;;;85       /* Enables the HSI clock on I2C */
;;;86       RST_CLK_PCLKcmd(RST_CLK_PCLK_I2C,ENABLE);
000030  2101              MOVS     r1,#1
000032  0288              LSLS     r0,r1,#10
000034  f7fffffe          BL       RST_CLK_PCLKcmd
;;;87     
;;;88       /* Enables I2C peripheral */
;;;89       I2C_Cmd(ENABLE);
000038  2001              MOVS     r0,#1
00003a  f7fffffe          BL       I2C_Cmd
;;;90     
;;;91       /* Initialize I2C_InitStruct */
;;;92       I2C_InitStruct.I2C_ClkDiv = 16;
00003e  2010              MOVS     r0,#0x10
000040  4921              LDR      r1,|L1.200|
000042  6008              STR      r0,[r1,#0]  ; I2C_InitStruct
;;;93       I2C_InitStruct.I2C_Speed = I2C_SPEED_UP_TO_400KHz;
000044  2000              MOVS     r0,#0
000046  6048              STR      r0,[r1,#4]  ; I2C_InitStruct
;;;94     
;;;95       /* Configure I2C parameters */
;;;96       I2C_Init(&I2C_InitStruct);
000048  4608              MOV      r0,r1
00004a  f7fffffe          BL       I2C_Init
;;;97     
;;;98       while (1)
00004e  e035              B        |L1.188|
                  |L1.80|
;;;99       {
;;;100        /* Wait I2C bus is free */
;;;101        while (I2C_GetFlagStatus(I2C_FLAG_BUS_FREE) != SET)
000050  bf00              NOP      
                  |L1.82|
000052  f04f4080          MOV      r0,#0x40000000
000056  f7fffffe          BL       I2C_GetFlagStatus
00005a  2801              CMP      r0,#1
00005c  d1f9              BNE      |L1.82|
;;;102        {
;;;103        }
;;;104    
;;;105        /* Send adress */
;;;106        I2C_Send7bitAddress(ADRESS,I2C_Direction_Transmitter);
00005e  2100              MOVS     r1,#0
000060  2035              MOVS     r0,#0x35
000062  f7fffffe          BL       I2C_Send7bitAddress
;;;107    			//MDR_I2C->TXD=0xB5;
;;;108        /* Wait end of transfer */
;;;109        while (I2C_GetFlagStatus(I2C_FLAG_nTRANS) != SET)
000066  bf00              NOP      
                  |L1.104|
000068  f04f7000          MOV      r0,#0x2000000
00006c  f7fffffe          BL       I2C_GetFlagStatus
000070  2801              CMP      r0,#1
000072  d1f9              BNE      |L1.104|
;;;110        {
;;;111        }
;;;112    				for(ch=0;ch<100000;ch++) h=h+1;
000074  2400              MOVS     r4,#0
000076  e001              B        |L1.124|
                  |L1.120|
000078  1c76              ADDS     r6,r6,#1
00007a  1c64              ADDS     r4,r4,#1
                  |L1.124|
00007c  4813              LDR      r0,|L1.204|
00007e  4284              CMP      r4,r0
000080  d3fa              BCC      |L1.120|
;;;113           // I2C_SendByte(0x75);
;;;114        /* Transmit data if ACK was send */
;;;115        if (I2C_GetFlagStatus(I2C_FLAG_SLAVE_ACK) == SET)
000082  0680              LSLS     r0,r0,#26
000084  f7fffffe          BL       I2C_GetFlagStatus
000088  2801              CMP      r0,#1
00008a  d115              BNE      |L1.184|
;;;116        {
;;;117          for (i=0;i<TRANS_COUNT;i++)
00008c  2500              MOVS     r5,#0
00008e  e011              B        |L1.180|
                  |L1.144|
;;;118          {
;;;119            /* Send byte */
;;;120    				for(ch=0;ch<100000;ch++) h=h+1;
000090  2400              MOVS     r4,#0
000092  e001              B        |L1.152|
                  |L1.148|
000094  1c76              ADDS     r6,r6,#1
000096  1c64              ADDS     r4,r4,#1
                  |L1.152|
000098  480c              LDR      r0,|L1.204|
00009a  4284              CMP      r4,r0
00009c  d3fa              BCC      |L1.148|
;;;121            I2C_SendByte(0x35);
00009e  2035              MOVS     r0,#0x35
0000a0  f7fffffe          BL       I2C_SendByte
;;;122    
;;;123            /* Wait end of transfer */
;;;124            while (I2C_GetFlagStatus(I2C_FLAG_nTRANS) != SET)
0000a4  bf00              NOP      
                  |L1.166|
0000a6  f04f7000          MOV      r0,#0x2000000
0000aa  f7fffffe          BL       I2C_GetFlagStatus
0000ae  2801              CMP      r0,#1
0000b0  d1f9              BNE      |L1.166|
0000b2  1c6d              ADDS     r5,r5,#1              ;117
                  |L1.180|
0000b4  2d05              CMP      r5,#5                 ;117
0000b6  d3eb              BCC      |L1.144|
                  |L1.184|
;;;125            {
;;;126            }
;;;127          }
;;;128        }
;;;129    
;;;130        /* Send stop */
;;;131        I2C_SendSTOP();
0000b8  f7fffffe          BL       I2C_SendSTOP
                  |L1.188|
0000bc  e7c8              B        |L1.80|
;;;132      }
;;;133    }
;;;134    
                          ENDP

0000be  0000              DCW      0x0000
                  |L1.192|
                          DCD      PortInit
                  |L1.196|
                          DCD      0x400b8000
                  |L1.200|
                          DCD      I2C_InitStruct
                  |L1.204|
                          DCD      0x000186a0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  PortInit
                          %        12
                  DMA_InitStr
                          %        16
                  DMA_PriCtrlStr
                          %        40
                  DMA_AltCtrlStr
                          %        40

                          AREA ||.data||, DATA, ALIGN=2

                  H_Level
                          DCD      0x00000900
                  L_Level
                          DCD      0x00000800
                  I2C_InitStruct
                          %        8

;*** Start embedded assembler ***

#line 1 "..\\..\\src\\Main.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_Main_c_H_Level____REV16|
#line 129 "..\\..\\..\\..\\Libraries\\CMSIS\\CM3\\CoreSupport\\core_cmInstr.h"
|__asm___6_Main_c_H_Level____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_Main_c_H_Level____REVSH|
#line 144
|__asm___6_Main_c_H_Level____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
