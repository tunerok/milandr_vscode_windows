; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Debug\Exe\mdr32f9qx_dac.o --asm_dir=.\Debug\Lst\ --list_dir=.\Debug\Lst\ --depend=.\Debug\Exe\mdr32f9qx_dac.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc\USB_Library -I..\..\inc -I..\..\Config -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\Debug\Exe\mdr32f9qx_dac.crf ..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\src\MDR32F9Qx_dac.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  DAC_DeInit PROC
;;;46       */
;;;47     void DAC_DeInit(void)
000000  2000              MOVS     r0,#0
;;;48     {
;;;49       MDR_DAC->DAC1_DATA = 0;
000002  4922              LDR      r1,|L1.140|
000004  6048              STR      r0,[r1,#4]
;;;50       MDR_DAC->DAC2_DATA = 0;
000006  6088              STR      r0,[r1,#8]
;;;51       MDR_DAC->CFG = 0;
000008  6008              STR      r0,[r1,#0]
;;;52     }
00000a  4770              BX       lr
;;;53     
                          ENDP

                  DAC_Init PROC
;;;69       */
;;;70     void DAC_Init(uint32_t SyncMode, uint32_t DAC1_Ref, uint32_t DAC2_Ref)
00000c  b510              PUSH     {r4,lr}
;;;71     {
00000e  4603              MOV      r3,r0
;;;72       uint32_t tmpreg_CFG;
;;;73     
;;;74       /* Check the parameters */
;;;75       assert_param(IS_DAC_SYNC_MODE(SyncMode));
;;;76       assert_param(IS_DAC1_REF_CONFIG(DAC1_Ref));
;;;77       assert_param(IS_DAC2_REF_CONFIG(DAC2_Ref));
;;;78     
;;;79       tmpreg_CFG = MDR_DAC->CFG;
000010  4c1e              LDR      r4,|L1.140|
000012  6820              LDR      r0,[r4,#0]
;;;80       tmpreg_CFG &= ~(DAC_CFG_SYNC_A | DAC_CFG_M_REF0 | DAC_CFG_M_REF1);
000014  f0200013          BIC      r0,r0,#0x13
;;;81       tmpreg_CFG += SyncMode + DAC1_Ref + DAC2_Ref;
000018  185c              ADDS     r4,r3,r1
00001a  4414              ADD      r4,r4,r2
00001c  4420              ADD      r0,r0,r4
;;;82       MDR_DAC->CFG = tmpreg_CFG;
00001e  4c1b              LDR      r4,|L1.140|
000020  6020              STR      r0,[r4,#0]
;;;83     }
000022  bd10              POP      {r4,pc}
;;;84     
                          ENDP

                  DAC1_Init PROC
;;;92       */
;;;93     void DAC1_Init(uint32_t DAC1_Ref)
000024  4601              MOV      r1,r0
;;;94     {
;;;95       uint32_t tmpreg_CFG;
;;;96     
;;;97       /* Check the parameters */
;;;98       assert_param(IS_DAC1_REF_CONFIG(DAC1_Ref));
;;;99     
;;;100      tmpreg_CFG = MDR_DAC->CFG;
000026  4a19              LDR      r2,|L1.140|
000028  6810              LDR      r0,[r2,#0]
;;;101      tmpreg_CFG &= ~DAC_CFG_M_REF0;
00002a  f0200001          BIC      r0,r0,#1
;;;102      tmpreg_CFG += DAC1_Ref;
00002e  4408              ADD      r0,r0,r1
;;;103      MDR_DAC->CFG = tmpreg_CFG;
000030  6010              STR      r0,[r2,#0]
;;;104    }
000032  4770              BX       lr
;;;105    
                          ENDP

                  DAC2_Init PROC
;;;113      */
;;;114    void DAC2_Init(uint32_t DAC2_Ref)
000034  4601              MOV      r1,r0
;;;115    {
;;;116      uint32_t tmpreg_CFG;
;;;117    
;;;118      /* Check the parameters */
;;;119      assert_param(IS_DAC2_REF_CONFIG(DAC2_Ref));
;;;120    
;;;121      tmpreg_CFG = MDR_DAC->CFG;
000036  4a15              LDR      r2,|L1.140|
000038  6810              LDR      r0,[r2,#0]
;;;122      tmpreg_CFG &= ~DAC_CFG_M_REF1;
00003a  f0200002          BIC      r0,r0,#2
;;;123      tmpreg_CFG += DAC2_Ref;
00003e  4408              ADD      r0,r0,r1
;;;124      MDR_DAC->CFG = tmpreg_CFG;
000040  6010              STR      r0,[r2,#0]
;;;125    }
000042  4770              BX       lr
;;;126    
                          ENDP

                  DAC1_Cmd PROC
;;;132      */
;;;133    void DAC1_Cmd(FunctionalState NewState)
000044  4601              MOV      r1,r0
;;;134    {
;;;135      uint32_t tmpreg_CFG;
;;;136    
;;;137      /* Check the parameters */
;;;138      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;139    
;;;140      tmpreg_CFG = MDR_DAC->CFG;
000046  4a11              LDR      r2,|L1.140|
000048  6810              LDR      r0,[r2,#0]
;;;141    
;;;142      /* Form new value */
;;;143      if (NewState != DISABLE)
00004a  b111              CBZ      r1,|L1.82|
;;;144      {
;;;145        /* Enable DAC1 by setting the Cfg_ON_DAC0 bit in the DAC_CFG register */
;;;146        tmpreg_CFG |= DAC_CFG_ON_DAC0;
00004c  f0400004          ORR      r0,r0,#4
000050  e001              B        |L1.86|
                  |L1.82|
;;;147      }
;;;148      else
;;;149      {
;;;150        /* Disable DAC1 by resetting the Cfg_ON_DAC0 bit in the DAC_CFG register */
;;;151        tmpreg_CFG &= ~DAC_CFG_ON_DAC0;
000052  f0200004          BIC      r0,r0,#4
                  |L1.86|
;;;152      }
;;;153    
;;;154      /* Configure DAC_CFG register with new value */
;;;155      MDR_DAC->CFG = tmpreg_CFG;
000056  4a0d              LDR      r2,|L1.140|
000058  6010              STR      r0,[r2,#0]
;;;156    }
00005a  4770              BX       lr
;;;157    
                          ENDP

                  DAC2_Cmd PROC
;;;163      */
;;;164    void DAC2_Cmd(FunctionalState NewState)
00005c  4601              MOV      r1,r0
;;;165    {
;;;166      uint32_t tmpreg_CFG;
;;;167    
;;;168      /* Check the parameters */
;;;169      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;170    
;;;171      tmpreg_CFG = MDR_DAC->CFG;
00005e  4a0b              LDR      r2,|L1.140|
000060  6810              LDR      r0,[r2,#0]
;;;172    
;;;173      /* Form new value */
;;;174      if (NewState != DISABLE)
000062  b111              CBZ      r1,|L1.106|
;;;175      {
;;;176        /* Enable DAC2 by setting the Cfg_ON_DAC1 bit in the DAC_CFG register */
;;;177        tmpreg_CFG |= DAC_CFG_ON_DAC1;
000064  f0400008          ORR      r0,r0,#8
000068  e001              B        |L1.110|
                  |L1.106|
;;;178      }
;;;179      else
;;;180      {
;;;181        /* Disable DAC2 by resetting the Cfg_ON_DAC1 bit in the DAC_CFG register */
;;;182        tmpreg_CFG &= ~DAC_CFG_ON_DAC1;
00006a  f0200008          BIC      r0,r0,#8
                  |L1.110|
;;;183      }
;;;184    
;;;185      /* Configure DAC_CFG register with new value */
;;;186      MDR_DAC->CFG = tmpreg_CFG;
00006e  4a07              LDR      r2,|L1.140|
000070  6010              STR      r0,[r2,#0]
;;;187    }
000072  4770              BX       lr
;;;188    
                          ENDP

                  DAC1_SetData PROC
;;;193      */
;;;194    void DAC1_SetData(uint32_t Data)
000074  4905              LDR      r1,|L1.140|
;;;195    {
;;;196      /* Check the parameters */
;;;197      assert_param(IS_DAC_DATA(Data));
;;;198    
;;;199      MDR_DAC->DAC1_DATA = Data;
000076  6048              STR      r0,[r1,#4]
;;;200    }
000078  4770              BX       lr
;;;201    
                          ENDP

                  DAC2_SetData PROC
;;;206      */
;;;207    void DAC2_SetData(uint32_t Data)
00007a  4904              LDR      r1,|L1.140|
;;;208    {
;;;209      /* Check the parameters */
;;;210      assert_param(IS_DAC_DATA(Data));
;;;211    
;;;212      MDR_DAC->DAC2_DATA = Data;
00007c  6088              STR      r0,[r1,#8]
;;;213    }
00007e  4770              BX       lr
;;;214    
                          ENDP

                  DAC1_GetData PROC
;;;219      */
;;;220    uint32_t DAC1_GetData(void)
000080  4802              LDR      r0,|L1.140|
;;;221    {
;;;222      return MDR_DAC->DAC1_DATA;
000082  6840              LDR      r0,[r0,#4]
;;;223    }
000084  4770              BX       lr
;;;224    
                          ENDP

                  DAC2_GetData PROC
;;;229      */
;;;230    uint32_t DAC2_GetData(void)
000086  4801              LDR      r0,|L1.140|
;;;231    {
;;;232      return MDR_DAC->DAC2_DATA;
000088  6880              LDR      r0,[r0,#8]
;;;233    }
00008a  4770              BX       lr
;;;234    
                          ENDP

                  |L1.140|
                          DCD      0x40090000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Libraries\\MDR32F9Qx_StdPeriph_Driver\\src\\MDR32F9Qx_dac.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_MDR32F9Qx_dac_c_4da4a0a9____REV16|
#line 129 "..\\..\\..\\..\\Libraries\\CMSIS\\CM3\\CoreSupport\\core_cmInstr.h"
|__asm___15_MDR32F9Qx_dac_c_4da4a0a9____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_MDR32F9Qx_dac_c_4da4a0a9____REVSH|
#line 144
|__asm___15_MDR32F9Qx_dac_c_4da4a0a9____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
