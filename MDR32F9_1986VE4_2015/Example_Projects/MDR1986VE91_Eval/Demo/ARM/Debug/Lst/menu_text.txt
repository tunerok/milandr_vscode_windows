; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Debug\Exe\menu_text.o --asm_dir=.\Debug\Lst\ --list_dir=.\Debug\Lst\ --depend=.\Debug\Exe\menu_text.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc\USB_Library -I..\..\inc -I..\..\Config -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\Debug\Exe\menu_text.crf ..\..\src\Menu_text.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  FontFunc PROC
;;;52     *******************************************************************************/
;;;53     void FontFunc(void)
000000  b510              PUSH     {r4,lr}
;;;54     {
;;;55       sFONT *OldFont = CurrentFont;
000002  4893              LDR      r0,|L1.592|
000004  6804              LDR      r4,[r0,#0]  ; CurrentFont
;;;56     
;;;57       /* Print the header and wait for key up */
;;;58       LCD_CLS();
000006  f7fffffe          BL       LCD_CLS
;;;59       CurrentMethod = MET_AND;
00000a  2004              MOVS     r0,#4
00000c  4991              LDR      r1,|L1.596|
00000e  7008              STRB     r0,[r1,#0]
;;;60       CurrentFont = &Font_6x8;
000010  4891              LDR      r0,|L1.600|
000012  498f              LDR      r1,|L1.592|
000014  6008              STR      r0,[r1,#0]  ; CurrentFont
;;;61       DisplayMenuTitle("Font examples");
000016  a091              ADR      r0,|L1.604|
000018  f7fffffe          BL       DisplayMenuTitle
;;;62       WAIT_UNTIL_KEY_RELEASED(SEL);
00001c  bf00              NOP      
                  |L1.30|
00001e  f7fffffe          BL       GetKey
000022  2800              CMP      r0,#0
000024  d0fb              BEQ      |L1.30|
;;;63     
;;;64       /* Font parameters */
;;;65       LCD_PUTS(0, 12, "Font6X8");
000026  a291              ADR      r2,|L1.620|
000028  210c              MOVS     r1,#0xc
00002a  2000              MOVS     r0,#0
00002c  f7fffffe          BL       LCD_PUTS
;;;66     
;;;67       CurrentFont = &Font_12x16;
000030  4890              LDR      r0,|L1.628|
000032  4987              LDR      r1,|L1.592|
000034  6008              STR      r0,[r1,#0]  ; CurrentFont
;;;68       LCD_PUTS(0, 20, "Font12X16");
000036  a290              ADR      r2,|L1.632|
000038  2114              MOVS     r1,#0x14
00003a  2000              MOVS     r0,#0
00003c  f7fffffe          BL       LCD_PUTS
;;;69     
;;;70       CurrentFont = &Font_7x10_thin;
000040  4890              LDR      r0,|L1.644|
000042  4983              LDR      r1,|L1.592|
000044  6008              STR      r0,[r1,#0]  ; CurrentFont
;;;71       LCD_PUTS(0, 36, "Font7X10");
000046  a290              ADR      r2,|L1.648|
000048  2124              MOVS     r1,#0x24
00004a  2000              MOVS     r0,#0
00004c  f7fffffe          BL       LCD_PUTS
;;;72     
;;;73       CurrentFont = &Font_7x10_bold;
000050  4890              LDR      r0,|L1.660|
000052  497f              LDR      r1,|L1.592|
000054  6008              STR      r0,[r1,#0]  ; CurrentFont
;;;74       LCD_PUTS(0, 47, "Font7X10 bold");
000056  a290              ADR      r2,|L1.664|
000058  212f              MOVS     r1,#0x2f
00005a  2000              MOVS     r0,#0
00005c  f7fffffe          BL       LCD_PUTS
;;;75     
;;;76       /* Wait for SEL pressed and return to the main menu */
;;;77       CurrentFont = OldFont;
000060  487b              LDR      r0,|L1.592|
000062  6004              STR      r4,[r0,#0]  ; CurrentFont
;;;78       BackToMenuOnSel();
000064  f7fffffe          BL       BackToMenuOnSel
;;;79     }
000068  bd10              POP      {r4,pc}
;;;80     
                          ENDP

                  StyleFunc PROC
;;;87     *******************************************************************************/
;;;88     void StyleFunc(void)
00006a  b510              PUSH     {r4,lr}
;;;89     {
;;;90       sFONT *OldFont = CurrentFont;
00006c  4878              LDR      r0,|L1.592|
00006e  6804              LDR      r4,[r0,#0]  ; CurrentFont
;;;91     
;;;92       LCD_CLS();
000070  f7fffffe          BL       LCD_CLS
;;;93       CurrentMethod = MET_AND;
000074  2004              MOVS     r0,#4
000076  4977              LDR      r1,|L1.596|
000078  7008              STRB     r0,[r1,#0]
;;;94       CurrentFont = &Font_6x8;
00007a  4877              LDR      r0,|L1.600|
00007c  4974              LDR      r1,|L1.592|
00007e  6008              STR      r0,[r1,#0]  ; CurrentFont
;;;95     
;;;96       /* Print prompt and wait for key SEL pressed */
;;;97       LCD_PUTS(0, 12, "Turn the Trimmer TRIM");
000080  a289              ADR      r2,|L1.680|
000082  210c              MOVS     r1,#0xc
000084  2000              MOVS     r0,#0
000086  f7fffffe          BL       LCD_PUTS
;;;98       LCD_PUTS(0, 22, "to control the delay");
00008a  a28d              ADR      r2,|L1.704|
00008c  2116              MOVS     r1,#0x16
00008e  2000              MOVS     r0,#0
000090  f7fffffe          BL       LCD_PUTS
;;;99       LCD_PUTS(0, 32, "between style frames.");
000094  a290              ADR      r2,|L1.728|
000096  2120              MOVS     r1,#0x20
000098  2000              MOVS     r0,#0
00009a  f7fffffe          BL       LCD_PUTS
;;;100      LCD_PUTS(0, 42, "Push JoyStick SEL to");
00009e  a294              ADR      r2,|L1.752|
0000a0  212a              MOVS     r1,#0x2a
0000a2  2000              MOVS     r0,#0
0000a4  f7fffffe          BL       LCD_PUTS
;;;101      LCD_PUTS(0, 52, "start or stop.");
0000a8  a297              ADR      r2,|L1.776|
0000aa  2134              MOVS     r1,#0x34
0000ac  2000              MOVS     r0,#0
0000ae  f7fffffe          BL       LCD_PUTS
;;;102    
;;;103      while (!KEY_PRESSED(SEL))
0000b2  bf00              NOP      
                  |L1.180|
0000b4  f7fffffe          BL       GetKey
0000b8  2800              CMP      r0,#0
0000ba  d1fb              BNE      |L1.180|
;;;104      {
;;;105      }
;;;106    
;;;107      /* Configure ADC channel 7 */
;;;108      ADC_Config();
0000bc  f7fffffe          BL       ADC_Config
;;;109      /* ADC1 enable */
;;;110      ADC1_Cmd(ENABLE);
0000c0  2001              MOVS     r0,#1
0000c2  f7fffffe          BL       ADC1_Cmd
;;;111    
;;;112      /* Print the header and wait for key up */
;;;113      LCD_CLS();
0000c6  f7fffffe          BL       LCD_CLS
;;;114      DisplayMenuTitle("Style examples");
0000ca  a093              ADR      r0,|L1.792|
0000cc  f7fffffe          BL       DisplayMenuTitle
;;;115      WAIT_UNTIL_KEY_RELEASED(SEL);
0000d0  bf00              NOP      
                  |L1.210|
0000d2  f7fffffe          BL       GetKey
0000d6  2800              CMP      r0,#0
0000d8  d0fb              BEQ      |L1.210|
;;;116    
;;;117      /* Style samples */
;;;118      do
0000da  bf00              NOP      
                  |L1.220|
;;;119      {
;;;120        LCD_PUTS_Ex(0, 12, "Blink     ", StyleBlink);
0000dc  2301              MOVS     r3,#1
0000de  a292              ADR      r2,|L1.808|
0000e0  210c              MOVS     r1,#0xc
0000e2  2000              MOVS     r0,#0
0000e4  f7fffffe          BL       LCD_PUTS_Ex
;;;121        if (KEY_PRESSED(SEL)) break;
0000e8  f7fffffe          BL       GetKey
0000ec  b900              CBNZ     r0,|L1.240|
0000ee  e013              B        |L1.280|
                  |L1.240|
;;;122        LCD_PUTS_Ex(0, 32, "FlipFlop", StyleFlipFlop);
0000f0  2302              MOVS     r3,#2
0000f2  a290              ADR      r2,|L1.820|
0000f4  2120              MOVS     r1,#0x20
0000f6  2000              MOVS     r0,#0
0000f8  f7fffffe          BL       LCD_PUTS_Ex
;;;123        if (KEY_PRESSED(SEL)) break;
0000fc  f7fffffe          BL       GetKey
000100  b900              CBNZ     r0,|L1.260|
000102  e009              B        |L1.280|
                  |L1.260|
;;;124        LCD_PUTS_Ex(0, 52, "Vibratory", StyleVibratory);
000104  2303              MOVS     r3,#3
000106  a28e              ADR      r2,|L1.832|
000108  2134              MOVS     r1,#0x34
00010a  2000              MOVS     r0,#0
00010c  f7fffffe          BL       LCD_PUTS_Ex
;;;125      } while (!KEY_PRESSED(SEL));
000110  f7fffffe          BL       GetKey
000114  2800              CMP      r0,#0
000116  d1e1              BNE      |L1.220|
                  |L1.280|
000118  bf00              NOP                            ;121
;;;126    
;;;127      /* SEL is pressed - return to the main menu */
;;;128      CurrentFont = OldFont;
00011a  484d              LDR      r0,|L1.592|
00011c  6004              STR      r4,[r0,#0]  ; CurrentFont
;;;129      /* ADC1 disable */
;;;130      ADC1_Cmd(DISABLE);
00011e  2000              MOVS     r0,#0
000120  f7fffffe          BL       ADC1_Cmd
;;;131      DisplayMenu();
000124  f7fffffe          BL       DisplayMenu
;;;132    }
000128  bd10              POP      {r4,pc}
;;;133    
                          ENDP

                  BookFunc PROC
;;;165    *******************************************************************************/
;;;166    void BookFunc(void)
00012a  b570              PUSH     {r4-r6,lr}
;;;167    {
;;;168      uint32_t top_ind, key, i;
;;;169    
;;;170      /* Clear screen and wait for key up */
;;;171      LCD_CLS();
00012c  f7fffffe          BL       LCD_CLS
;;;172      CurrentMethod = MET_AND;
000130  2004              MOVS     r0,#4
000132  4948              LDR      r1,|L1.596|
000134  7008              STRB     r0,[r1,#0]
;;;173      WAIT_UNTIL_KEY_RELEASED(SEL);
000136  bf00              NOP      
                  |L1.312|
000138  f7fffffe          BL       GetKey
00013c  2800              CMP      r0,#0
00013e  d0fb              BEQ      |L1.312|
;;;174    
;;;175      /* Key handling loop */
;;;176      for (top_ind = 0, key = NOKEY; key != SEL; )
000140  2400              MOVS     r4,#0
000142  2505              MOVS     r5,#5
000144  e029              B        |L1.410|
                  |L1.326|
;;;177      {
;;;178        /* Print the text and wait for key pressed */
;;;179        for (i = 0; i < 8; i++)
000146  2600              MOVS     r6,#0
000148  e010              B        |L1.364|
                  |L1.330|
;;;180        {
;;;181          LCD_PUTS(0, (CurrentFont->Height) * i, Book[top_ind + i]);
00014a  19a0              ADDS     r0,r4,r6
00014c  eb000340          ADD      r3,r0,r0,LSL #1
000150  eb0300c0          ADD      r0,r3,r0,LSL #3
000154  4b7d              LDR      r3,|L1.844|
000156  eb030240          ADD      r2,r3,r0,LSL #1
00015a  483d              LDR      r0,|L1.592|
00015c  6800              LDR      r0,[r0,#0]  ; CurrentFont
00015e  7800              LDRB     r0,[r0,#0]
000160  4370              MULS     r0,r6,r0
000162  b2c1              UXTB     r1,r0
000164  2000              MOVS     r0,#0
000166  f7fffffe          BL       LCD_PUTS
00016a  1c76              ADDS     r6,r6,#1              ;179
                  |L1.364|
00016c  2e08              CMP      r6,#8                 ;179
00016e  d3ec              BCC      |L1.330|
;;;182        }
;;;183        WAIT_UNTIL_ANY_KEY;
000170  bf00              NOP      
                  |L1.370|
000172  f7fffffe          BL       GetKey
000176  2805              CMP      r0,#5
000178  d0fb              BEQ      |L1.370|
;;;184    
;;;185        /* Key pressed handling */
;;;186        key = GetKey();
00017a  f7fffffe          BL       GetKey
00017e  4605              MOV      r5,r0
;;;187        switch (key)
000180  2d01              CMP      r5,#1
000182  d002              BEQ      |L1.394|
000184  2d02              CMP      r5,#2
000186  d107              BNE      |L1.408|
000188  e002              B        |L1.400|
                  |L1.394|
;;;188        {
;;;189          /* Scroll up */
;;;190          case UP:
;;;191            if (top_ind > 0)
00018a  b104              CBZ      r4,|L1.398|
;;;192            {
;;;193              top_ind--;
00018c  1e64              SUBS     r4,r4,#1
                  |L1.398|
;;;194            }
;;;195            break;
00018e  e003              B        |L1.408|
                  |L1.400|
;;;196          /* Scroll down */
;;;197          case DOWN:
;;;198            if (top_ind < 7)
000190  2c07              CMP      r4,#7
000192  d200              BCS      |L1.406|
;;;199            {
;;;200              top_ind++;
000194  1c64              ADDS     r4,r4,#1
                  |L1.406|
;;;201            }
;;;202            break;
000196  bf00              NOP      
                  |L1.408|
000198  bf00              NOP                            ;195
                  |L1.410|
00019a  2d00              CMP      r5,#0                 ;176
00019c  d1d3              BNE      |L1.326|
;;;203        }
;;;204      }
;;;205    
;;;206      /* SEL is pressed - return to main menu */
;;;207      WAIT_UNTIL_KEY_RELEASED(key);
00019e  bf00              NOP      
                  |L1.416|
0001a0  f7fffffe          BL       GetKey
0001a4  42a8              CMP      r0,r5
0001a6  d0fb              BEQ      |L1.416|
;;;208      DisplayMenu();
0001a8  f7fffffe          BL       DisplayMenu
;;;209    }
0001ac  bd70              POP      {r4-r6,pc}
;;;210    
                          ENDP

                  AboutFunc PROC
;;;217    *******************************************************************************/
;;;218    void AboutFunc(void)
0001ae  b510              PUSH     {r4,lr}
;;;219    {
;;;220    
;;;221    #if defined (USE_MDR32F9Q1_Rev0) || defined (USE_MDR32F9Q1_Rev1)
;;;222    #define EVAL_BOARD_NAME                "   Milandr MDR32F9Q1   "
;;;223    #elif defined (USE_MDR32F9Q2_Rev0) || defined (USE_MDR32F9Q2_Rev1)
;;;224    #define EVAL_BOARD_NAME                "   Milandr MDR32F9Q2  "
;;;225    #elif defined (USE_MDR32F9Q3_Rev0) || defined (USE_MDR32F9Q3_Rev1)
;;;226    #define EVAL_BOARD_NAME                "   Milandr MDR32F9Q3  "
;;;227    #endif
;;;228    
;;;229      /* Display About text */
;;;230      LCD_CLS();
0001b0  f7fffffe          BL       LCD_CLS
;;;231      CurrentMethod = MET_AND;
0001b4  2004              MOVS     r0,#4
0001b6  4927              LDR      r1,|L1.596|
0001b8  7008              STRB     r0,[r1,#0]
;;;232    
;;;233      LCD_PUTS(0, 0, EVAL_BOARD_NAME);
0001ba  a265              ADR      r2,|L1.848|
0001bc  2100              MOVS     r1,#0
0001be  4608              MOV      r0,r1
0001c0  f7fffffe          BL       LCD_PUTS
;;;234      LCD_PUTS(0, CurrentFont->Height + 1, "   Evaluation board  ");
0001c4  4822              LDR      r0,|L1.592|
0001c6  6800              LDR      r0,[r0,#0]  ; CurrentFont
0001c8  7800              LDRB     r0,[r0,#0]
0001ca  1c40              ADDS     r0,r0,#1
0001cc  b2c1              UXTB     r1,r0
0001ce  a266              ADR      r2,|L1.872|
0001d0  2000              MOVS     r0,#0
0001d2  f7fffffe          BL       LCD_PUTS
;;;235      LCD_PUTS(0, (CurrentFont->Height) * 2 + 2, "          ");
0001d6  481e              LDR      r0,|L1.592|
0001d8  6800              LDR      r0,[r0,#0]  ; CurrentFont
0001da  7800              LDRB     r0,[r0,#0]
0001dc  2202              MOVS     r2,#2
0001de  eb020040          ADD      r0,r2,r0,LSL #1
0001e2  b2c1              UXTB     r1,r0
0001e4  a266              ADR      r2,|L1.896|
0001e6  2000              MOVS     r0,#0
0001e8  f7fffffe          BL       LCD_PUTS
;;;236      LCD_PUTS(0, (CurrentFont->Height) * 3 + 2, "          ");
0001ec  4818              LDR      r0,|L1.592|
0001ee  6800              LDR      r0,[r0,#0]  ; CurrentFont
0001f0  7800              LDRB     r0,[r0,#0]
0001f2  eb000040          ADD      r0,r0,r0,LSL #1
0001f6  1c80              ADDS     r0,r0,#2
0001f8  b2c1              UXTB     r1,r0
0001fa  a261              ADR      r2,|L1.896|
0001fc  2000              MOVS     r0,#0
0001fe  f7fffffe          BL       LCD_PUTS
;;;237      LCD_PUTS(0, (CurrentFont->Height) * 4 + 3, " Appl. example v.3.0");
000202  4813              LDR      r0,|L1.592|
000204  6800              LDR      r0,[r0,#0]  ; CurrentFont
000206  7800              LDRB     r0,[r0,#0]
000208  2203              MOVS     r2,#3
00020a  eb020080          ADD      r0,r2,r0,LSL #2
00020e  b2c1              UXTB     r1,r0
000210  a25e              ADR      r2,|L1.908|
000212  2000              MOVS     r0,#0
000214  f7fffffe          BL       LCD_PUTS
;;;238      LCD_PUTS(0, (CurrentFont->Height) * 5 + 4, "     Phyton 2011   ");
000218  480d              LDR      r0,|L1.592|
00021a  6800              LDR      r0,[r0,#0]  ; CurrentFont
00021c  7800              LDRB     r0,[r0,#0]
00021e  eb000080          ADD      r0,r0,r0,LSL #2
000222  1d00              ADDS     r0,r0,#4
000224  b2c1              UXTB     r1,r0
000226  a25f              ADR      r2,|L1.932|
000228  2000              MOVS     r0,#0
00022a  f7fffffe          BL       LCD_PUTS
;;;239      LCD_PUTS(0, (CurrentFont->Height) * 6 + 5, "    www.phyton.ru  ");
00022e  4808              LDR      r0,|L1.592|
000230  6800              LDR      r0,[r0,#0]  ; CurrentFont
000232  7800              LDRB     r0,[r0,#0]
000234  eb000040          ADD      r0,r0,r0,LSL #1
000238  2205              MOVS     r2,#5
00023a  eb020040          ADD      r0,r2,r0,LSL #1
00023e  b2c1              UXTB     r1,r0
000240  a25d              ADR      r2,|L1.952|
000242  2000              MOVS     r0,#0
000244  f7fffffe          BL       LCD_PUTS
;;;240    
;;;241      /* Wait for SEL pressed and return to main menu */
;;;242      BackToMenuOnSel();
000248  f7fffffe          BL       BackToMenuOnSel
;;;243    }
00024c  bd10              POP      {r4,pc}
;;;244    
                          ENDP

00024e  0000              DCW      0x0000
                  |L1.592|
                          DCD      CurrentFont
                  |L1.596|
                          DCD      CurrentMethod
                  |L1.600|
                          DCD      Font_6x8
                  |L1.604|
00025c  466f6e74          DCB      "Font examples",0
000260  20657861
000264  6d706c65
000268  7300    
00026a  00                DCB      0
00026b  00                DCB      0
                  |L1.620|
00026c  466f6e74          DCB      "Font6X8",0
000270  36583800
                  |L1.628|
                          DCD      Font_12x16
                  |L1.632|
000278  466f6e74          DCB      "Font12X16",0
00027c  31325831
000280  3600    
000282  00                DCB      0
000283  00                DCB      0
                  |L1.644|
                          DCD      Font_7x10_thin
                  |L1.648|
000288  466f6e74          DCB      "Font7X10",0
00028c  37583130
000290  00      
000291  00                DCB      0
000292  00                DCB      0
000293  00                DCB      0
                  |L1.660|
                          DCD      Font_7x10_bold
                  |L1.664|
000298  466f6e74          DCB      "Font7X10 bold",0
00029c  37583130
0002a0  20626f6c
0002a4  6400    
0002a6  00                DCB      0
0002a7  00                DCB      0
                  |L1.680|
0002a8  5475726e          DCB      "Turn the Trimmer TRIM",0
0002ac  20746865
0002b0  20547269
0002b4  6d6d6572
0002b8  20545249
0002bc  4d00    
0002be  00                DCB      0
0002bf  00                DCB      0
                  |L1.704|
0002c0  746f2063          DCB      "to control the delay",0
0002c4  6f6e7472
0002c8  6f6c2074
0002cc  68652064
0002d0  656c6179
0002d4  00      
0002d5  00                DCB      0
0002d6  00                DCB      0
0002d7  00                DCB      0
                  |L1.728|
0002d8  62657477          DCB      "between style frames.",0
0002dc  65656e20
0002e0  7374796c
0002e4  65206672
0002e8  616d6573
0002ec  2e00    
0002ee  00                DCB      0
0002ef  00                DCB      0
                  |L1.752|
0002f0  50757368          DCB      "Push JoyStick SEL to",0
0002f4  204a6f79
0002f8  53746963
0002fc  6b205345
000300  4c20746f
000304  00      
000305  00                DCB      0
000306  00                DCB      0
000307  00                DCB      0
                  |L1.776|
000308  73746172          DCB      "start or stop.",0
00030c  74206f72
000310  2073746f
000314  702e00  
000317  00                DCB      0
                  |L1.792|
000318  5374796c          DCB      "Style examples",0
00031c  65206578
000320  616d706c
000324  657300  
000327  00                DCB      0
                  |L1.808|
000328  426c696e          DCB      "Blink     ",0
00032c  6b202020
000330  202000  
000333  00                DCB      0
                  |L1.820|
000334  466c6970          DCB      "FlipFlop",0
000338  466c6f70
00033c  00      
00033d  00                DCB      0
00033e  00                DCB      0
00033f  00                DCB      0
                  |L1.832|
000340  56696272          DCB      "Vibratory",0
000344  61746f72
000348  7900    
00034a  00                DCB      0
00034b  00                DCB      0
                  |L1.844|
                          DCD      Book
                  |L1.848|
000350  2020204d          DCB      "   Milandr MDR32F9Q1   ",0
000354  696c616e
000358  6472204d
00035c  44523332
000360  46395131
000364  20202000
                  |L1.872|
000368  20202045          DCB      "   Evaluation board  ",0
00036c  76616c75
000370  6174696f
000374  6e20626f
000378  61726420
00037c  2000    
00037e  00                DCB      0
00037f  00                DCB      0
                  |L1.896|
000380  20202020          DCB      "          ",0
000384  20202020
000388  202000  
00038b  00                DCB      0
                  |L1.908|
00038c  20417070          DCB      " Appl. example v.3.0",0
000390  6c2e2065
000394  78616d70
000398  6c652076
00039c  2e332e30
0003a0  00      
0003a1  00                DCB      0
0003a2  00                DCB      0
0003a3  00                DCB      0
                  |L1.932|
0003a4  20202020          DCB      "     Phyton 2011   ",0
0003a8  20506879
0003ac  746f6e20
0003b0  32303131
0003b4  20202000
                  |L1.952|
0003b8  20202020          DCB      "    www.phyton.ru  ",0
0003bc  7777772e
0003c0  70687974
0003c4  6f6e2e72
0003c8  75202000

                          AREA ||.data||, DATA, ALIGN=0

                  Book
000000  4d696372          DCB      0x4d,0x69,0x63,0x72
000004  6f636f6e          DCB      0x6f,0x63,0x6f,0x6e
000008  74726f6c          DCB      0x74,0x72,0x6f,0x6c
00000c  6c657273          DCB      0x6c,0x65,0x72,0x73
000010  206f6620          DCB      0x20,0x6f,0x66,0x20
000014  20004d44          DCB      0x20,0x00,0x4d,0x44
000018  52333246          DCB      0x52,0x33,0x32,0x46
00001c  39517820          DCB      0x39,0x51,0x78,0x20
000020  73657269          DCB      0x73,0x65,0x72,0x69
000024  65732061          DCB      0x65,0x73,0x20,0x61
000028  72652000          DCB      0x72,0x65,0x20,0x00
00002c  6d696372          DCB      0x6d,0x69,0x63,0x72
000030  6f636f6e          DCB      0x6f,0x63,0x6f,0x6e
000034  74726f6c          DCB      0x74,0x72,0x6f,0x6c
000038  6c657273          DCB      0x6c,0x65,0x72,0x73
00003c  20202020          DCB      0x20,0x20,0x20,0x20
000040  20007769          DCB      0x20,0x00,0x77,0x69
000044  74682065          DCB      0x74,0x68,0x20,0x65
000048  6d626564          DCB      0x6d,0x62,0x65,0x64
00004c  64656420          DCB      0x64,0x65,0x64,0x20
000050  466c6173          DCB      0x46,0x6c,0x61,0x73
000054  68202000          DCB      0x68,0x20,0x20,0x00
000058  70726f67          DCB      0x70,0x72,0x6f,0x67
00005c  72616d20          DCB      0x72,0x61,0x6d,0x20
000060  6d656d6f          DCB      0x6d,0x65,0x6d,0x6f
000064  72793b20          DCB      0x72,0x79,0x3b,0x20
000068  74686579          DCB      0x74,0x68,0x65,0x79
00006c  20006172          DCB      0x20,0x00,0x61,0x72
000070  65206275          DCB      0x65,0x20,0x62,0x75
000074  696c7420          DCB      0x69,0x6c,0x74,0x20
000078  6f6e2074          DCB      0x6f,0x6e,0x20,0x74
00007c  68652020          DCB      0x68,0x65,0x20,0x20
000080  20202000          DCB      0x20,0x20,0x20,0x00
000084  62617365          DCB      0x62,0x61,0x73,0x65
000088  206f6620          DCB      0x20,0x6f,0x66,0x20
00008c  68696768          DCB      0x68,0x69,0x67,0x68
000090  20706572          DCB      0x20,0x70,0x65,0x72
000094  666f2d20          DCB      0x66,0x6f,0x2d,0x20
000098  20006d61          DCB      0x20,0x00,0x6d,0x61
00009c  6e636520          DCB      0x6e,0x63,0x65,0x20
0000a0  52495343          DCB      0x52,0x49,0x53,0x43
0000a4  2070726f          DCB      0x20,0x70,0x72,0x6f
0000a8  63657373          DCB      0x63,0x65,0x73,0x73
0000ac  6f722000          DCB      0x6f,0x72,0x20,0x00
0000b0  636f7265          DCB      0x63,0x6f,0x72,0x65
0000b4  20436f72          DCB      0x20,0x43,0x6f,0x72
0000b8  7465782d          DCB      0x74,0x65,0x78,0x2d
0000bc  4d332e20          DCB      0x4d,0x33,0x2e,0x20
0000c0  20202020          DCB      0x20,0x20,0x20,0x20
0000c4  20004d69          DCB      0x20,0x00,0x4d,0x69
0000c8  63726f63          DCB      0x63,0x72,0x6f,0x63
0000cc  6f6e7472          DCB      0x6f,0x6e,0x74,0x72
0000d0  6f6c6c65          DCB      0x6f,0x6c,0x6c,0x65
0000d4  7220776f          DCB      0x72,0x20,0x77,0x6f
0000d8  726b7300          DCB      0x72,0x6b,0x73,0x00
0000dc  6f6e2074          DCB      0x6f,0x6e,0x20,0x74
0000e0  68652075          DCB      0x68,0x65,0x20,0x75
0000e4  7020746f          DCB      0x70,0x20,0x74,0x6f
0000e8  20383020          DCB      0x20,0x38,0x30,0x20
0000ec  4d687a20          DCB      0x4d,0x68,0x7a,0x20
0000f0  20006672          DCB      0x20,0x00,0x66,0x72
0000f4  65637565          DCB      0x65,0x63,0x75,0x65
0000f8  6e637920          DCB      0x6e,0x63,0x79,0x20
0000fc  616e6420          DCB      0x61,0x6e,0x64,0x20
000100  20202020          DCB      0x20,0x20,0x20,0x20
000104  20202000          DCB      0x20,0x20,0x20,0x00
000108  636f6e74          DCB      0x63,0x6f,0x6e,0x74
00010c  61696e73          DCB      0x61,0x69,0x6e,0x73
000110  20313238          DCB      0x20,0x31,0x32,0x38
000114  204b2046          DCB      0x20,0x4b,0x20,0x46
000118  6c617368          DCB      0x6c,0x61,0x73,0x68
00011c  20007072          DCB      0x20,0x00,0x70,0x72
000120  6f677261          DCB      0x6f,0x67,0x72,0x61
000124  6d206d65          DCB      0x6d,0x20,0x6d,0x65
000128  6d6f7279          DCB      0x6d,0x6f,0x72,0x79
00012c  20616e64          DCB      0x20,0x61,0x6e,0x64
000130  20202000          DCB      0x20,0x20,0x20,0x00
000134  3332204b          DCB      0x33,0x32,0x20,0x4b
000138  206f6620          DCB      0x20,0x6f,0x66,0x20
00013c  52414d2e          DCB      0x52,0x41,0x4d,0x2e
000140  20202020          DCB      0x20,0x20,0x20,0x20
000144  20202020          DCB      0x20,0x20,0x20,0x20
000148  20000000          DCB      0x20,0x00,0x00,0x00
                          %        20

;*** Start embedded assembler ***

#line 1 "..\\..\\src\\Menu_text.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___11_Menu_text_c_FontFunc____REV16|
#line 129 "..\\..\\..\\..\\Libraries\\CMSIS\\CM3\\CoreSupport\\core_cmInstr.h"
|__asm___11_Menu_text_c_FontFunc____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___11_Menu_text_c_FontFunc____REVSH|
#line 144
|__asm___11_Menu_text_c_FontFunc____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
