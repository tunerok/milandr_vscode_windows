; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Debug\Exe\lcd_mdr32f9q1.o --asm_dir=.\Debug\Lst\ --list_dir=.\Debug\Lst\ --depend=.\Debug\Exe\lcd_mdr32f9q1.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc\USB_Library -I..\..\inc -I..\..\Config -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\Debug\Exe\lcd_mdr32f9q1.crf ..\..\src\lcd_MDR32F9Q1.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ReadLCD_Cmd PROC
;;;156    *******************************************************************************/
;;;157    uint32_t ReadLCD_Cmd(void)
000000  4957              LDR      r1,|L1.352|
;;;158    {
;;;159      uint32_t ret = LCD_CMD(CurrentCrystal);
000002  4a58              LDR      r2,|L1.356|
000004  7812              LDRB     r2,[r2,#0]  ; CurrentCrystal
000006  eb0101c2          ADD      r1,r1,r2,LSL #3
00000a  6849              LDR      r1,[r1,#4]
00000c  6808              LDR      r0,[r1,#0]
;;;160    
;;;161      return ret;
;;;162    }
00000e  4770              BX       lr
;;;163    
                          ENDP

                  GetStatus PROC
;;;239    *******************************************************************************/
;;;240    static uint32_t GetStatus(void)
000010  b500              PUSH     {lr}
;;;241    {
;;;242      uint32_t ret;
;;;243    
;;;244      ret = ReadLCD_Cmd();
000012  f7fffffe          BL       ReadLCD_Cmd
000016  4603              MOV      r3,r0
;;;245      return ret;
000018  4618              MOV      r0,r3
;;;246    }
00001a  bd00              POP      {pc}
;;;247    
                          ENDP

                  WhileStatus PROC
;;;255    *******************************************************************************/
;;;256    static void WhileStatus(uint32_t status)
00001c  b570              PUSH     {r4-r6,lr}
;;;257    {
00001e  4604              MOV      r4,r0
;;;258    
;;;259      uint32_t stat;
;;;260      for (stat = GetStatus(); (stat & status) != 0; stat = GetStatus())
000020  f7fffffe          BL       GetStatus
000024  4605              MOV      r5,r0
000026  e002              B        |L1.46|
                  |L1.40|
000028  f7fffffe          BL       GetStatus
00002c  4605              MOV      r5,r0
                  |L1.46|
00002e  4225              TST      r5,r4
000030  d1fa              BNE      |L1.40|
;;;261      {
;;;262      }
;;;263    }
000032  bd70              POP      {r4-r6,pc}
;;;264    
                          ENDP

                  Pause PROC
;;;271    *******************************************************************************/
;;;272    static void Pause(void)
000034  200f              MOVS     r0,#0xf
;;;273    {
;;;274      vuint32_t i;
;;;275    
;;;276      for (i = 15; i > 0; i--);
000036  e000              B        |L1.58|
                  |L1.56|
000038  1e40              SUBS     r0,r0,#1
                  |L1.58|
00003a  2800              CMP      r0,#0
00003c  d1fc              BNE      |L1.56|
;;;277    }
00003e  4770              BX       lr
;;;278    
                          ENDP

                  ResetLCD PROC
;;;100    *******************************************************************************/
;;;101    void ResetLCD(void)
000040  b510              PUSH     {r4,lr}
;;;102    {
;;;103      PORT_SetBits(MDR_PORTC, PORT_Pin_9);
000042  f44f7100          MOV      r1,#0x200
000046  4848              LDR      r0,|L1.360|
000048  f7fffffe          BL       PORT_SetBits
;;;104      PORT_ResetBits(MDR_PORTC, PORT_Pin_9);
00004c  f44f7100          MOV      r1,#0x200
000050  4845              LDR      r0,|L1.360|
000052  f7fffffe          BL       PORT_ResetBits
;;;105      Pause();
000056  f7fffffe          BL       Pause
;;;106      PORT_SetBits(MDR_PORTC, PORT_Pin_9);
00005a  f44f7100          MOV      r1,#0x200
00005e  4842              LDR      r0,|L1.360|
000060  f7fffffe          BL       PORT_SetBits
;;;107      WhileStatus(LCD_BUSY_Msk | LCD_RESET_Msk);
000064  2090              MOVS     r0,#0x90
000066  f7fffffe          BL       WhileStatus
;;;108    }
00006a  bd10              POP      {r4,pc}
;;;109    
                          ENDP

                  SetCrystal PROC
;;;116    *******************************************************************************/
;;;117    void SetCrystal(LCD_Crystal num)
00006c  b510              PUSH     {r4,lr}
;;;118    {
00006e  4604              MOV      r4,r0
;;;119      PORT_Write(MDR_PORTE, ((num + 1) << 4));
000070  1c60              ADDS     r0,r4,#1
000072  0101              LSLS     r1,r0,#4
000074  483d              LDR      r0,|L1.364|
000076  f7fffffe          BL       PORT_Write
;;;120      WAIT_BUSY;
00007a  2080              MOVS     r0,#0x80
00007c  f7fffffe          BL       WhileStatus
;;;121      CurrentCrystal = num;
000080  4838              LDR      r0,|L1.356|
000082  7004              STRB     r4,[r0,#0]
;;;122    }
000084  bd10              POP      {r4,pc}
;;;123    
                          ENDP

                  WriteLCD_Cmd PROC
;;;130    *******************************************************************************/
;;;131    void WriteLCD_Cmd(uint32_t val)
000086  b510              PUSH     {r4,lr}
;;;132    {
000088  4604              MOV      r4,r0
;;;133      LCD_CMD(CurrentCrystal) = val;
00008a  4835              LDR      r0,|L1.352|
00008c  4935              LDR      r1,|L1.356|
00008e  7809              LDRB     r1,[r1,#0]  ; CurrentCrystal
000090  eb0000c1          ADD      r0,r0,r1,LSL #3
000094  6840              LDR      r0,[r0,#4]
000096  6004              STR      r4,[r0,#0]
;;;134      WAIT_BUSY;
000098  2080              MOVS     r0,#0x80
00009a  f7fffffe          BL       WhileStatus
;;;135    }
00009e  bd10              POP      {r4,pc}
;;;136    
                          ENDP

                  WriteLCD_Data PROC
;;;143    *******************************************************************************/
;;;144    void WriteLCD_Data(uint32_t val)
0000a0  b510              PUSH     {r4,lr}
;;;145    {
0000a2  4604              MOV      r4,r0
;;;146      LCD_DATA(CurrentCrystal) = val;
0000a4  482e              LDR      r0,|L1.352|
0000a6  492f              LDR      r1,|L1.356|
0000a8  7809              LDRB     r1,[r1,#0]  ; CurrentCrystal
0000aa  f8500031          LDR      r0,[r0,r1,LSL #3]
0000ae  6004              STR      r4,[r0,#0]
;;;147      WAIT_BUSY;
0000b0  2080              MOVS     r0,#0x80
0000b2  f7fffffe          BL       WhileStatus
;;;148    }
0000b6  bd10              POP      {r4,pc}
;;;149    
                          ENDP

                  ReadLCD_Data PROC
;;;170    *******************************************************************************/
;;;171    uint32_t ReadLCD_Data()
0000b8  b510              PUSH     {r4,lr}
;;;172    {
;;;173      uint32_t ret;
;;;174      LCD_DATA(CurrentCrystal);     /* First reading is necessary to get correct data */
0000ba  4829              LDR      r0,|L1.352|
0000bc  4929              LDR      r1,|L1.356|
0000be  7809              LDRB     r1,[r1,#0]  ; CurrentCrystal
0000c0  f8500031          LDR      r0,[r0,r1,LSL #3]
0000c4  6800              LDR      r0,[r0,#0]
;;;175      WAIT_BUSY;
0000c6  2080              MOVS     r0,#0x80
0000c8  f7fffffe          BL       WhileStatus
;;;176      ret = LCD_DATA(CurrentCrystal);
0000cc  4824              LDR      r0,|L1.352|
0000ce  4925              LDR      r1,|L1.356|
0000d0  7809              LDRB     r1,[r1,#0]  ; CurrentCrystal
0000d2  f8500031          LDR      r0,[r0,r1,LSL #3]
0000d6  6804              LDR      r4,[r0,#0]
;;;177      WAIT_BUSY;
0000d8  2080              MOVS     r0,#0x80
0000da  f7fffffe          BL       WhileStatus
;;;178      return ret;
0000de  4620              MOV      r0,r4
;;;179    }
0000e0  bd10              POP      {r4,pc}
;;;180    
                          ENDP

                  LCD_INIT PROC
;;;187    *******************************************************************************/
;;;188    void LCD_INIT(void)
0000e2  b510              PUSH     {r4,lr}
;;;189    {
;;;190      uint32_t crystal;
;;;191    
;;;192      ResetLCD();
0000e4  f7fffffe          BL       ResetLCD
;;;193    
;;;194      for (crystal = LCD_CRYSTAL1; crystal < NUM_LCD_CRYSTALS; crystal++)
0000e8  2400              MOVS     r4,#0
0000ea  e00f              B        |L1.268|
                  |L1.236|
;;;195      {
;;;196        SetCrystal((LCD_Crystal)crystal);
0000ec  b2e0              UXTB     r0,r4
0000ee  f7fffffe          BL       SetCrystal
;;;197        WAIT_BUSY;
0000f2  2080              MOVS     r0,#0x80
0000f4  f7fffffe          BL       WhileStatus
;;;198        LCD_ON;
0000f8  203f              MOVS     r0,#0x3f
0000fa  f7fffffe          BL       WriteLCD_Cmd
;;;199        WAIT_ON;
0000fe  2020              MOVS     r0,#0x20
000100  f7fffffe          BL       WhileStatus
;;;200        LCD_START_LINE(0);
000104  20c0              MOVS     r0,#0xc0
000106  f7fffffe          BL       WriteLCD_Cmd
00010a  1c64              ADDS     r4,r4,#1              ;194
                  |L1.268|
00010c  2c02              CMP      r4,#2                 ;194
00010e  d3ed              BCC      |L1.236|
;;;201      }
;;;202    }
000110  bd10              POP      {r4,pc}
;;;203    
                          ENDP

                  LCD_CLS PROC
;;;210    *******************************************************************************/
;;;211    void LCD_CLS(void)
000112  b570              PUSH     {r4-r6,lr}
;;;212    {
;;;213      uint32_t i, j, crystal;
;;;214    
;;;215      for (crystal = LCD_CRYSTAL1; crystal < NUM_LCD_CRYSTALS; crystal++)
000114  2500              MOVS     r5,#0
000116  e020              B        |L1.346|
                  |L1.280|
;;;216      {
;;;217        SetCrystal((LCD_Crystal)crystal);
000118  b2e8              UXTB     r0,r5
00011a  f7fffffe          BL       SetCrystal
;;;218        WAIT_BUSY;
00011e  2080              MOVS     r0,#0x80
000120  f7fffffe          BL       WhileStatus
;;;219        LCD_OFF;
000124  203e              MOVS     r0,#0x3e
000126  f7fffffe          BL       WriteLCD_Cmd
;;;220        LCD_SET_ADDRESS(0);
00012a  2040              MOVS     r0,#0x40
00012c  f7fffffe          BL       WriteLCD_Cmd
;;;221        for (i = 0; i < 8; i++)
000130  2400              MOVS     r4,#0
000132  e00c              B        |L1.334|
                  |L1.308|
;;;222        {
;;;223          LCD_SET_PAGE(i);
000134  f04400b8          ORR      r0,r4,#0xb8
000138  f7fffffe          BL       WriteLCD_Cmd
;;;224          for (j = 0; j < 64; j++)
00013c  2600              MOVS     r6,#0
00013e  e003              B        |L1.328|
                  |L1.320|
;;;225          {
;;;226            WriteLCD_Data(0x00);
000140  2000              MOVS     r0,#0
000142  f7fffffe          BL       WriteLCD_Data
000146  1c76              ADDS     r6,r6,#1              ;224
                  |L1.328|
000148  2e40              CMP      r6,#0x40              ;224
00014a  d3f9              BCC      |L1.320|
00014c  1c64              ADDS     r4,r4,#1              ;221
                  |L1.334|
00014e  2c08              CMP      r4,#8                 ;221
000150  d3f0              BCC      |L1.308|
;;;227          }
;;;228        }
;;;229        LCD_ON;
000152  203f              MOVS     r0,#0x3f
000154  f7fffffe          BL       WriteLCD_Cmd
000158  1c6d              ADDS     r5,r5,#1              ;215
                  |L1.346|
00015a  2d02              CMP      r5,#2                 ;215
00015c  d3dc              BCC      |L1.280|
;;;230      }
;;;231    }
00015e  bd70              POP      {r4-r6,pc}
;;;232    
                          ENDP

                  |L1.352|
                          DCD      CrystalPorts
                  |L1.356|
                          DCD      CurrentCrystal
                  |L1.360|
                          DCD      0x400b8000
                  |L1.364|
                          DCD      0x400c8000

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  CrystalPorts
                          DCD      0x18100000
                          DCD      0x10100000
                          DCD      0x18200000
                          DCD      0x10200000

                          AREA ||.data||, DATA, ALIGN=0

                  CurrentCrystal
000000  00                DCB      0x00
                  CurrentMethod
000001  04                DCB      0x04

;*** Start embedded assembler ***

#line 1 "..\\..\\src\\lcd_MDR32F9Q1.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_lcd_MDR32F9Q1_c_ad8506d1____REV16|
#line 129 "..\\..\\..\\..\\Libraries\\CMSIS\\CM3\\CoreSupport\\core_cmInstr.h"
|__asm___15_lcd_MDR32F9Q1_c_ad8506d1____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_lcd_MDR32F9Q1_c_ad8506d1____REVSH|
#line 144
|__asm___15_lcd_MDR32F9Q1_c_ad8506d1____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
