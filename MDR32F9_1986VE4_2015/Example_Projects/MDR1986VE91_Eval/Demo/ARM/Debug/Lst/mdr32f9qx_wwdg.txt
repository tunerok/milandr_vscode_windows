; generated by ARM C/C++ Compiler, 5.02 [Build 28]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\Debug\Exe\mdr32f9qx_wwdg.o --asm_dir=.\Debug\Lst\ --list_dir=.\Debug\Lst\ --depend=.\Debug\Exe\mdr32f9qx_wwdg.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -I..\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\startup\arm -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -I..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\inc\USB_Library -I..\..\inc -I..\..\Config -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Milandr\MDR32F9x --omf_browse=.\Debug\Exe\mdr32f9qx_wwdg.crf ..\..\..\..\Libraries\MDR32F9Qx_StdPeriph_Driver\src\MDR32F9Qx_wwdg.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  WWDG_DeInit PROC
;;;93       */
;;;94     void WWDG_DeInit(void)
000000  b510              PUSH     {r4,lr}
;;;95     {
;;;96       RST_CLK_PCLKcmd(RST_CLK_PCLK_WWDG, ENABLE);
000002  2101              MOVS     r1,#1
000004  0308              LSLS     r0,r1,#12
000006  f7fffffe          BL       RST_CLK_PCLKcmd
;;;97       RST_CLK_PCLKcmd(RST_CLK_PCLK_WWDG, DISABLE);
00000a  2100              MOVS     r1,#0
00000c  f44f5080          MOV      r0,#0x1000
000010  f7fffffe          BL       RST_CLK_PCLKcmd
;;;98     }
000014  bd10              POP      {r4,pc}
;;;99     
                          ENDP

                  WWDG_SetPrescaler PROC
;;;109      */
;;;110    void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
000016  4a14              LDR      r2,|L1.104|
;;;111    {
;;;112      uint32_t tmpreg;
;;;113      /* Check the parameters */
;;;114      assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
;;;115      /* Clear WDGTB[1:0] bits */
;;;116      tmpreg = MDR_WWDG->CFR & WDGTB_Mask;
000018  6852              LDR      r2,[r2,#4]
00001a  f42271c0          BIC      r1,r2,#0x180
;;;117      /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
;;;118      tmpreg |= WWDG_Prescaler;
00001e  4301              ORRS     r1,r1,r0
;;;119      /* Store the new value */
;;;120      MDR_WWDG->CFR = tmpreg;
000020  4a11              LDR      r2,|L1.104|
000022  6051              STR      r1,[r2,#4]
;;;121    }
000024  4770              BX       lr
;;;122    
                          ENDP

                  WWDG_SetWindowValue PROC
;;;128      */
;;;129    void WWDG_SetWindowValue(uint32_t WindowValue)
000026  2100              MOVS     r1,#0
;;;130    {
;;;131      __IO uint32_t tmpreg = 0;
;;;132    
;;;133      /* Check the parameters */
;;;134      assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
;;;135      /* Clear W[6:0] bits */
;;;136    
;;;137      tmpreg = MDR_WWDG->CFR & (uint32_t) (~WIN_Mask);
000028  4a0f              LDR      r2,|L1.104|
00002a  6852              LDR      r2,[r2,#4]
00002c  f022017f          BIC      r1,r2,#0x7f
;;;138    
;;;139      /* Set W[6:0] bits according to WindowValue value */
;;;140      tmpreg |= WindowValue & (uint32_t) WIN_Mask;
000030  f000027f          AND      r2,r0,#0x7f
000034  4311              ORRS     r1,r1,r2
;;;141    
;;;142      /* Store the new value */
;;;143      MDR_WWDG->CFR = tmpreg;
000036  4a0c              LDR      r2,|L1.104|
000038  6051              STR      r1,[r2,#4]
;;;144    }
00003a  4770              BX       lr
;;;145    
                          ENDP

                  WWDG_EnableIT PROC
;;;150      */
;;;151    void WWDG_EnableIT ( void )
00003c  2001              MOVS     r0,#1
;;;152    {
;;;153    #if defined (USE_MDR1986VE9x)
;;;154    	*(__IO uint32_t *) EWI_BB = (uint32_t) ENABLE;
00003e  490b              LDR      r1,|L1.108|
000040  6008              STR      r0,[r1,#0]
;;;155    #elif defined (USE_MDR1986VE3) || defined (USE_MDR1986VE1T)
;;;156    	MDR_WWDG->CFR |= WWDG_CFR_EWI;
;;;157    #endif
;;;158    }
000042  4770              BX       lr
;;;159    
                          ENDP

                  WWDG_SetCounter PROC
;;;165      */
;;;166    void WWDG_SetCounter(uint32_t Counter)
000044  f000017f          AND      r1,r0,#0x7f
;;;167    {
;;;168      /* Check the parameters */
;;;169      assert_param(IS_WWDG_COUNTER(Counter));
;;;170      /* Write to T[6:0] bits to configure the counter value, no need to do
;;;171         a read-modify-write; writing a 0 to WDGA bit does nothing */
;;;172    
;;;173      MDR_WWDG->CR = Counter & CTR_Mask;
000048  4a07              LDR      r2,|L1.104|
00004a  6011              STR      r1,[r2,#0]
;;;174    }
00004c  4770              BX       lr
;;;175    
                          ENDP

                  WWDG_Enable PROC
;;;181      */
;;;182    void WWDG_Enable(uint32_t Counter)
00004e  f0400180          ORR      r1,r0,#0x80
;;;183    {
;;;184      /* Check the parameters */
;;;185      assert_param(IS_WWDG_COUNTER(Counter));
;;;186      MDR_WWDG->CR = WDGA_Mask | Counter;
000052  4a05              LDR      r2,|L1.104|
000054  6011              STR      r1,[r2,#0]
;;;187    }
000056  4770              BX       lr
;;;188    
                          ENDP

                  WWDG_GetFlagStatus PROC
;;;193      */
;;;194    FlagStatus WWDG_GetFlagStatus(void)
000058  4803              LDR      r0,|L1.104|
;;;195    {
;;;196      return (FlagStatus)(MDR_WWDG->SR);
00005a  6880              LDR      r0,[r0,#8]
00005c  b2c0              UXTB     r0,r0
;;;197    }
00005e  4770              BX       lr
;;;198    
                          ENDP

                  WWDG_ClearFlag PROC
;;;203      */
;;;204    void WWDG_ClearFlag(void)
000060  2000              MOVS     r0,#0
;;;205    {
;;;206      MDR_WWDG->SR = (uint32_t)RESET;
000062  4901              LDR      r1,|L1.104|
000064  6088              STR      r0,[r1,#8]
;;;207    }
000066  4770              BX       lr
;;;208    
                          ENDP

                  |L1.104|
                          DCD      0x40060000
                  |L1.108|
                          DCD      0x42c000a4

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Libraries\\MDR32F9Qx_StdPeriph_Driver\\src\\MDR32F9Qx_wwdg.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_MDR32F9Qx_wwdg_c_9668c0ca____REV16|
#line 129 "..\\..\\..\\..\\Libraries\\CMSIS\\CM3\\CoreSupport\\core_cmInstr.h"
|__asm___16_MDR32F9Qx_wwdg_c_9668c0ca____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_MDR32F9Qx_wwdg_c_9668c0ca____REVSH|
#line 144
|__asm___16_MDR32F9Qx_wwdg_c_9668c0ca____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
